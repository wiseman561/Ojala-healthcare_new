name: "CodeQL Analysis"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 02:00 UTC

permissions:
  security-events: write     # required to write alerts
  contents: read             # to read repo contents
  actions: read              # for enterprise installations

jobs:
  codeql:
    name: CodeQL Scan
    runs-on: ubuntu-latest
    timeout-minutes: 360

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript', 'python' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ──────────────────────────────────────────────────────────────────────────
      # SETUP LANGUAGES
      - name: Setup .NET 8
        if: matrix.language == 'csharp'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup Node.js 18
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python 3.11
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ──────────────────────────────────────────────────────────────────────────
      # INIT CODEQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # ──────────────────────────────────────────────────────────────────────────
      # SIMPLE BUILDS - DIAGNOSTIC MODE
      - name: Build .NET projects (Simple)
        if: matrix.language == 'csharp'
        run: |
          dotnet --version
          dotnet restore Ojala.sln --verbosity minimal
          dotnet build Ojala.sln --configuration Release --no-restore

      - name: Build JavaScript projects (Simple)
        if: matrix.language == 'javascript'
        run: |
          node --version
          npm --version
          # Just build one frontend for now
          if [ -f "src/frontend/ojala.web/package.json" ]; then
            cd src/frontend/ojala.web
            npm ci --legacy-peer-deps || npm install --legacy-peer-deps
            npm run build || echo "Build failed but continuing"
          fi

      - name: Setup Python projects (Simple)
        if: matrix.language == 'python'
        run: |
          python --version
          pip --version
          # Install basic requirements if they exist
          if [ -f "src/backend/ai-engine/requirements.txt" ]; then
            pip install -r src/backend/ai-engine/requirements.txt
          fi

      # ──────────────────────────────────────────────────────────────────────────
      # ANALYZE
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
