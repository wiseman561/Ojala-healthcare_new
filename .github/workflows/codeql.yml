name: "CodeQL Analysis"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 02:00 UTC

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  codeql:
    name: CodeQL Scan
    runs-on: ubuntu-latest
    timeout-minutes: 360
    concurrency:
      group: codeql-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript', 'python' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ──────────────── CACHING ───────────────────
      - name: Cache NuGet
        if: matrix.language == 'csharp'
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: nuget-

      - name: Cache npm
        if: matrix.language == 'javascript'
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-

      - name: Cache pip
        if: matrix.language == 'python'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: pip-

      # ───────────── SETUP RUNTIMES ──────────────
      - name: Setup .NET 8
        if: matrix.language == 'csharp'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup Node.js 18
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python 3.11
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ─────────────── INIT CodeQL ────────────────
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # ──────────────── BUILD STEPS ───────────────
      - name: Build .NET solution
        if: matrix.language == 'csharp'
        run: |
          dotnet restore Ojala.sln --verbosity minimal
          dotnet build Ojala.sln --configuration Release --no-restore --verbosity minimal

      - name: Build all JS projects
        if: matrix.language == 'javascript'
        run: |
          for app in ojala.web employer-dashboard patient-app rn-dashboard; do
            dir="src/frontend/$app"
            if [ -f "$dir/package.json" ]; then
              echo "→ Building $app"
              (cd "$dir" && npm ci --legacy-peer-deps || npm install --legacy-peer-deps)
              (cd "$dir" && npm run build || echo "⚠️ $app build failed, continuing")
            fi
          done
          dir="src/backend/Ojala.AlertsStreamer"
          if [ -f "$dir/package.json" ]; then
            echo "→ Building AlertsStreamer"
            (cd "$dir" && npm ci || npm install)
            (cd "$dir" && npm run build --if-present || echo "⚠️ no build script")
          fi

      - name: Autobuild Python
        if: matrix.language == 'python'
        uses: github/codeql-action/autobuild@v3

      # ─────────── RUN & UPLOAD ───────────────
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: results

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/codeql-results.sarif
