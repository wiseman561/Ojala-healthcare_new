<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ocelot.Provider.Polly</name>
    </assembly>
    <members>
        <member name="T:Ocelot.Provider.Polly.Interfaces.IPollyQoSResiliencePipelineProvider`1">
            <summary>Defines provider for Polly V8 pipelines.</summary>
            <typeparam name="TResult">An HTTP result type, usually it is <see cref="T:System.Net.Http.HttpResponseMessage"/> type.</typeparam>
        </member>
        <member name="M:Ocelot.Provider.Polly.Interfaces.IPollyQoSResiliencePipelineProvider`1.GetResiliencePipeline(Ocelot.Configuration.DownstreamRoute)">
            <summary>
            Gets Polly v8 pipeline.
            </summary>
            <param name="route">The route to apply a pipeline for.</param>
            <returns>A <see cref="T:Polly.ResiliencePipeline`1"/> object where T is <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="F:Ocelot.Provider.Polly.OcelotBuilderExtensions.DefaultErrorMapping">
            <summary>
            Default mapping of Polly <see cref="T:System.Exception"/>s to <see cref="T:Ocelot.Errors.Error"/> objects.
            </summary>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.AddPolly``1(Ocelot.DependencyInjection.IOcelotBuilder,Ocelot.Requester.QosDelegatingHandlerDelegate,System.Collections.Generic.IDictionary{System.Type,System.Func{System.Exception,Ocelot.Errors.Error}})">
            <summary>
            Adds Polly QoS provider to Ocelot by custom delegate and with custom error mapping.
            </summary>
            <typeparam name="TProvider">QoS provider to use (by default use <see cref="T:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider"/>).</typeparam>
            <param name="builder">Ocelot builder to extend.</param>
            <param name="delegatingHandler">Your customized delegating handler (to manage QoS behavior by yourself).</param>
            <param name="errorMapping">Your customized error mapping.</param>
            <returns>The reference to the same extended <see cref="T:Ocelot.DependencyInjection.IOcelotBuilder"/> object.</returns>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.AddPolly``1(Ocelot.DependencyInjection.IOcelotBuilder,System.Collections.Generic.IDictionary{System.Type,System.Func{System.Exception,Ocelot.Errors.Error}})">
            <summary>
            Adds Polly QoS provider to Ocelot with custom error mapping, but default <see cref="T:System.Net.Http.DelegatingHandler"/> is used.
            </summary>
            <typeparam name="TProvider">QoS provider to use (by default use <see cref="T:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider"/>).</typeparam>
            <param name="builder">Ocelot builder to extend.</param>
            <param name="errorMapping">Your customized error mapping.</param>
            <returns>The reference to the same extended <see cref="T:Ocelot.DependencyInjection.IOcelotBuilder"/> object.</returns>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.AddPolly``1(Ocelot.DependencyInjection.IOcelotBuilder,Ocelot.Requester.QosDelegatingHandlerDelegate)">
            <summary>
            Adds Polly QoS provider to Ocelot with custom <see cref="T:System.Net.Http.DelegatingHandler"/> delegate, but default error mapping is used.
            </summary>
            <typeparam name="TProvider">QoS provider to use (by default use <see cref="T:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider"/>).</typeparam>
            <param name="builder">Ocelot builder to extend.</param>
            <param name="delegatingHandler">Your customized delegating handler (to manage QoS behavior by yourself).</param>
            <returns>The reference to the same extended <see cref="T:Ocelot.DependencyInjection.IOcelotBuilder"/> object.</returns>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.AddPolly``1(Ocelot.DependencyInjection.IOcelotBuilder)">
            <summary>
            Adds Polly QoS provider to Ocelot by defaults.
            </summary>
            <remarks>
            Defaults:
            <list type="bullet">
              <item><see cref="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.GetDelegatingHandler(Ocelot.Configuration.DownstreamRoute,Microsoft.AspNetCore.Http.IHttpContextAccessor,Ocelot.Logging.IOcelotLoggerFactory)"/></item>
              <item><see cref="F:Ocelot.Provider.Polly.OcelotBuilderExtensions.DefaultErrorMapping"/></item>
            </list>
            </remarks>
            <typeparam name="TProvider">QoS provider to use (by default use <see cref="T:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider"/>).</typeparam>
            <param name="builder">Ocelot builder to extend.</param>
            <returns>The reference to the same extended <see cref="T:Ocelot.DependencyInjection.IOcelotBuilder"/> object.</returns>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.AddPolly(Ocelot.DependencyInjection.IOcelotBuilder)">
            <summary>
            Adds Polly QoS provider to Ocelot by defaults with default QoS provider.
            </summary>
            <remarks>
            Defaults:
            <list type="bullet">
              <item><see cref="T:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider"/></item>
              <item><see cref="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.GetDelegatingHandler(Ocelot.Configuration.DownstreamRoute,Microsoft.AspNetCore.Http.IHttpContextAccessor,Ocelot.Logging.IOcelotLoggerFactory)"/></item>
              <item><see cref="F:Ocelot.Provider.Polly.OcelotBuilderExtensions.DefaultErrorMapping"/></item>
            </list>
            </remarks>
            <param name="builder">Ocelot builder to extend.</param>
            <returns>The reference to the same extended <see cref="T:Ocelot.DependencyInjection.IOcelotBuilder"/> object.</returns>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotBuilderExtensions.GetDelegatingHandler(Ocelot.Configuration.DownstreamRoute,Microsoft.AspNetCore.Http.IHttpContextAccessor,Ocelot.Logging.IOcelotLoggerFactory)">
            <summary>
            Creates default delegating handler based on the <see cref="T:Ocelot.Provider.Polly.PollyResiliencePipelineDelegatingHandler"/> type.
            </summary>
            <param name="route">The downstream route to apply the handler for.</param>
            <param name="contextAccessor">The context accessor of the route.</param>
            <param name="loggerFactory">The factory of logger.</param>
            <returns>A <see cref="T:System.Net.Http.DelegatingHandler"/> object, but concrete type is the <see cref="T:Ocelot.Provider.Polly.PollyResiliencePipelineDelegatingHandler"/> class.</returns>
        </member>
        <member name="T:Ocelot.Provider.Polly.OcelotResiliencePipelineKey">
            <summary>
            Object used to identify a resilience pipeline in <see cref="T:Polly.Registry.ResiliencePipelineRegistry`1"/>.
            </summary>
            <param name="Key">The key for the resilience pipeline.</param>
        </member>
        <member name="M:Ocelot.Provider.Polly.OcelotResiliencePipelineKey.#ctor(System.String)">
            <summary>
            Object used to identify a resilience pipeline in <see cref="T:Polly.Registry.ResiliencePipelineRegistry`1"/>.
            </summary>
            <param name="Key">The key for the resilience pipeline.</param>
        </member>
        <member name="P:Ocelot.Provider.Polly.OcelotResiliencePipelineKey.Key">
            <summary>The key for the resilience pipeline.</summary>
        </member>
        <member name="T:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider">
            <summary>
            Default provider for Polly V8 pipelines.
            </summary>
        </member>
        <member name="M:Ocelot.Provider.Polly.PollyQoSResiliencePipelineProvider.GetResiliencePipeline(Ocelot.Configuration.DownstreamRoute)">
            <summary>
            Gets Polly V8 resilience pipeline (applies QoS feature) for the route.
            </summary>
            <param name="route">The downstream route to apply the pipeline for.</param>
            <returns>A <see cref="T:Polly.ResiliencePipeline`1"/> object where T is <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Ocelot.Provider.Polly.PollyResiliencePipelineDelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">Downstream request.</param>
            <param name="cancellationToken">Token to cancel the task.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of a <see cref="T:System.Net.Http.HttpResponseMessage"/> result.</returns>
            <exception cref="T:Polly.CircuitBreaker.BrokenCircuitException">Exception thrown when a circuit is broken.</exception>
            <exception cref="T:System.Net.Http.HttpRequestException">Exception thrown by <see cref="T:System.Net.Http.HttpClient"/> and <see cref="T:System.Net.Http.HttpMessageHandler"/> classes.</exception>
        </member>
    </members>
</doc>
