<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Npgsql.EntityFrameworkCore.PostgreSQL</name>
    </assembly>
    <members>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.GenerateFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IModel,System.Collections.Generic.IDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.GenerateFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Design.Internal.RelationalCSharpRuntimeAnnotationCodeGeneratorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Create(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.IColumn,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.ITableIndex,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlCSharpRuntimeAnnotationCodeGenerator.Generate(Microsoft.EntityFrameworkCore.Metadata.ITable,Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorParameters)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlDesignTimeServices">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlDesignTimeServices.ConfigureDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundDefaultSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundColumn">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundForeignKey">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundCollation">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogPrincipalTableNotInSelectionSet">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogMissingSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogMissingTable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundSequence">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundTable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundIndex">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundPrimaryKey">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogFoundUniqueConstraint">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogPrincipalColumnNotFound">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogEnumColumnSkipped">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogExpressionIndexSkipped">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogUnsupportedColumnConstraintSkipped">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Diagnostics.Internal.NpgsqlLoggingDefinitions.LogUnsupportedColumnIndexSkipped">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions">
            <summary>
                Represents options for Npgsql that can only be set at the <see cref="T:System.IServiceProvider" /> singleton level.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.PostgresVersion">
            <summary>
                The backend version to target.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.IsPostgresVersionSet">
            <summary>
                Whether the user has explicitly set the backend version to target.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.UseRedshift">
            <summary>
                Whether to target Redshift.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.ReverseNullOrderingEnabled">
            <summary>
                Whether reverse null ordering is enabled.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.DataSource">
            <summary>
                The data source being used, or <see langword="null" /> if a connection string or connection was provided directly.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.UserRangeDefinitions">
            <summary>
                The collection of range mappings.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions.ApplicationServiceProvider">
            <summary>
                The root service provider for the application, if available. />.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator._postgresVersion">
            <summary>
                The backend version to target.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies,Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.ValidateIdentityVersionCompatibility(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Validates that identity columns are used only with PostgreSQL 10.0 or later.
            </summary>
            <param name="model">The model to validate.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.ValidateValueGeneration(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.ValidateIndexIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.ValidateStoredProcedures(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.ValidateCompatible(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension">
            <summary>
                Represents options managed by the Npgsql.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.DefaultPostgresVersion">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.PostgresVersion">
            <summary>
                The backend version to target.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.IsPostgresVersionSet">
            <summary>
                The backend version to target, but returns <see langword="null" /> unless the user explicitly specified a version.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.DataSource">
            <summary>
                The <see cref="T:System.Data.Common.DbDataSource" />, or <see langword="null" /> if a connection string or <see cref="T:System.Data.Common.DbConnection" /> was used
                instead of a <see cref="T:System.Data.Common.DbDataSource" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.AdminDatabase">
            <summary>
                The name of the database for administrative operations.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.UseRedshift">
            <summary>
                Whether to target Redshift.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.UserRangeDefinitions">
            <summary>
                The list of range mappings specified by the user.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ProvideClientCertificatesCallback">
            <summary>
                The specified <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ProvideClientCertificatesCallback" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.RemoteCertificateValidationCallback">
            <summary>
                The specified <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.RemoteCertificateValidationCallback" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ProvidePasswordCallback">
            <summary>
                The specified <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ProvidePasswordCallback" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ReverseNullOrdering">
            <summary>
                True if reverse null ordering is enabled; otherwise, false.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.#ctor">
            <summary>
                Initializes an instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension" /> with the default settings.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension)">
            <summary>
                Initializes an instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension" /> by copying the specified instance.
            </summary>
            <param name="copyFrom">The instance to copy.</param>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.MinBatchSize">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithDataSource(System.Data.Common.DbDataSource)">
            <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
            <param name="dataSource">The option to change.</param>
            <returns>A new instance with the option changed.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithConnectionString(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithConnection(System.Data.Common.DbConnection)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithUserRangeDefinition``1(System.String,System.String,System.String)">
            <summary>
                Returns a copy of the current instance configured with the specified range mapping.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithUserRangeDefinition(System.String,System.String,System.Type,System.String)">
            <summary>
                Returns a copy of the current instance configured with the specified range mapping.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithAdminDatabase(System.String)">
            <summary>
                Returns a copy of the current instance configured to use the specified administrative database.
            </summary>
            <param name="adminDatabase">The name of the database for administrative operations.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithPostgresVersion(System.Version)">
            <summary>
                Returns a copy of the current instance with the specified PostgreSQL version.
            </summary>
            <param name="postgresVersion">The backend version to target.</param>
            <returns>
                A copy of the current instance with the specified PostgreSQL version.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithRedshift(System.Boolean)">
            <summary>
                Returns a copy of the current instance with the specified Redshift settings.
            </summary>
            <param name="useRedshift">Whether to target Redshift.</param>
            <returns>
                A copy of the current instance with the specified Redshift setting.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithReverseNullOrdering(System.Boolean)">
            <summary>
                Returns a copy of the current instance configured with the specified value..
            </summary>
            <param name="reverseNullOrdering">True to enable reverse null ordering; otherwise, false.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.Validate(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithProvideClientCertificatesCallback(Npgsql.ProvideClientCertificatesCallback)">
            <summary>
                Returns a copy of the current instance with the specified <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ProvideClientCertificatesCallback" />.
            </summary>
            <param name="callback">The specified callback.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithRemoteCertificateValidationCallback(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
                Returns a copy of the current instance with the specified <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.RemoteCertificateValidationCallback" />.
            </summary>
            <param name="callback">The specified callback.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.WithProvidePasswordCallback(Npgsql.ProvidePasswordCallback)">
            <summary>
                Returns a copy of the current instance with the specified <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ProvidePasswordCallback" />.
            </summary>
            <param name="callback">The specified callback.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.Clone">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.Info">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension.ExtensionInfo.PopulateDebugInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition">
            <summary>
                A definition for a user-defined PostgreSQL range to be mapped.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition.RangeName">
            <summary>
                The name of the PostgreSQL range type to be mapped.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition.SchemaName">
            <summary>
                The PostgreSQL schema in which the range is defined. If null, the default schema is used
                (which is public unless changed on the model).
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition.SubtypeClrType">
            <summary>
                The CLR type of the range's subtype (or element).
                The actual mapped type will be an <see cref="T:NpgsqlTypes.NpgsqlRange`1" /> over this type.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition.SubtypeName">
            <summary>
                Optionally, the name of the range's PostgreSQL subtype (or element).
                This is usually not needed - the subtype will be inferred based on <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition.SubtypeClrType" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.UserRangeDefinition.#ctor(System.String,System.String,System.Type,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder">
            <summary>
                Allows for options specific to PostgreSQL to be configured for a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
                Initializes a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder" /> class.
            </summary>
            <param name="optionsBuilder"> The core options builder.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.UseAdminDatabase(System.String)">
            <summary>
                Connect to this database for administrative operations (creating/dropping databases).
            </summary>
            <param name="dbName">The name of the database for administrative operations.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.SetPostgresVersion(System.Version)">
            <summary>
                Configures the backend version to target.
            </summary>
            <param name="postgresVersion">The backend version to target.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.SetPostgresVersion(System.Int32,System.Int32)">
            <summary>
                Configures the backend version to target.
            </summary>
            <param name="major">The PostgreSQL major version to target.</param>
            <param name="minor">The PostgreSQL minor version to target.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.UseRedshift(System.Boolean)">
            <summary>
                Configures the provider to work in Redshift compatibility mode, which avoids certain unsupported features from modern
                PostgreSQL versions.
            </summary>
            <param name="useRedshift">Whether to target Redshift.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.MapRange``1(System.String,System.String,System.String)">
            <summary>
                Maps a user-defined PostgreSQL range type for use.
            </summary>
            <typeparam name="TSubtype">
                The CLR type of the range's subtype (or element).
                The actual mapped type will be an <see cref="T:NpgsqlTypes.NpgsqlRange`1" /> over this type.
            </typeparam>
            <param name="rangeName">The name of the PostgreSQL range type to be mapped.</param>
            <param name="schemaName">The name of the PostgreSQL schema in which the range is defined.</param>
            <param name="subtypeName">
                Optionally, the name of the range's PostgreSQL subtype (or element).
                This is usually not needed - the subtype will be inferred based on <typeparamref name="TSubtype" />.
            </param>
            <example>
                To map a range of PostgreSQL real, use the following:
                <code>NpgsqlTypeMappingSource.MapRange{float}("floatrange");</code>
            </example>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.MapRange(System.String,System.Type,System.String,System.String)">
            <summary>
                Maps a user-defined PostgreSQL range type for use.
            </summary>
            <param name="rangeName">The name of the PostgreSQL range type to be mapped.</param>
            <param name="schemaName">The name of the PostgreSQL schema in which the range is defined.</param>
            <param name="subtypeClrType">
                The CLR type of the range's subtype (or element).
                The actual mapped type will be an <see cref="T:NpgsqlTypes.NpgsqlRange`1" /> over this type.
            </param>
            <param name="subtypeName">
                Optionally, the name of the range's PostgreSQL subtype (or element).
                This is usually not needed - the subtype will be inferred based on <paramref name="subtypeClrType" />.
            </param>
            <example>
                To map a range of PostgreSQL real, use the following:
                <code>NpgsqlTypeMappingSource.MapRange("floatrange", typeof(float));</code>
            </example>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.ReverseNullOrdering(System.Boolean)">
            <summary>
                Appends NULLS FIRST to all ORDER BY clauses. This is important for the tests which were written
                for SQL Server. Note that to fully implement null-first ordering indexes also need to be generated
                accordingly, and since this isn't done this feature isn't publicly exposed.
            </summary>
            <param name="reverseNullOrdering">True to enable reverse null ordering; otherwise, false.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.ProvideClientCertificatesCallback(Npgsql.ProvideClientCertificatesCallback)">
            <summary>
                Configures the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use the specified <see cref="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.ProvideClientCertificatesCallback(Npgsql.ProvideClientCertificatesCallback)" />.
            </summary>
            <param name="callback">The callback to use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.RemoteCertificateValidationCallback(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
                Configures the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use the specified <see cref="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.RemoteCertificateValidationCallback(System.Net.Security.RemoteCertificateValidationCallback)" />.
            </summary>
            <param name="callback">The callback to use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.ProvidePasswordCallback(Npgsql.ProvidePasswordCallback)">
            <summary>
                Configures the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use the specified <see cref="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.ProvidePasswordCallback(Npgsql.ProvidePasswordCallback)" />.
            </summary>
            <param name="callback">The callback to use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.EnableRetryOnFailure">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <returns>
                An instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder" /> configured to use
                the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.EnableRetryOnFailure(System.Int32)">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <returns>
                An instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder" /> with the specified parameters.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.EnableRetryOnFailure(System.Collections.Generic.ICollection{System.String})">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <param name="errorCodesToAdd">Additional error codes that should be considered transient.</param>
            <returns>
                An instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder" /> with the specified parameters.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder.EnableRetryOnFailure(System.Int32,System.TimeSpan,System.Collections.Generic.ICollection{System.String})">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <param name="maxRetryCount">The maximum number of retry attempts.</param>
            <param name="maxRetryDelay">The maximum delay between retries.</param>
            <param name="errorCodesToAdd">Additional error codes that should be considered transient.</param>
            <returns>
                An instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder" /> with the specified parameters.
            </returns>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.MissingSchemaWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.MissingTableWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.ForeignKeyReferencesMissingPrincipalTableWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.ColumnFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.CollationFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.UniqueConstraintFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.EnumColumnSkippedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.ExpressionIndexSkippedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.UnsupportedColumnIndexSkippedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlLoggerExtensions.UnsupportedColumnConstraintSkippedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.PostgresVersion">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.IsPostgresVersionSet">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.UseRedshift">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.ReverseNullOrderingEnabled">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.DataSource">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.UserRangeDefinitions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.ApplicationServiceProvider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.Initialize(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlSingletonOptions.Validate(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.TwoDataSourcesInSameServiceProvider(System.Object)">
            <summary>
                Using two distinct data sources within a service provider is not supported, and Entity Framework is not building its own internal service provider. Either allow Entity Framework to build the service provider by removing the call to '{useInternalServiceProvider}', or ensure that the same data source is used for all uses of a given service provider passed to '{useInternalServiceProvider}'.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.DuplicateColumnCompressionMethodMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different compression methods.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.DuplicateColumnNameValueGenerationStrategyMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured with different value generation strategies.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.DuplicateIndexCollationMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different collation configurations.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.DuplicateIndexConcurrentCreationMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different concurrent creation configurations.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.DuplicateIndexIncludedMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different included columns: {includedColumns1} and {includedColumns2}.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.Ef7JsonMappingNotSupported">
            <summary>
                The EF Core 7.0 JSON support isn't currently supported by the Npgsql provider. To map to JSON, see https://www.npgsql.org/efcore/mapping/json.html.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.FreeTextFunctionOnClient">
            <summary>
                The 'FreeText' method is not supported because the query has switched to client-evaluation. Inspect the log to determine which query expressions are triggering client-evaluation.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.HeterogeneousTypesInNewArray(System.Object,System.Object)">
            <summary>
                Heterogeneous store types detected when making new array ({type1}, {type2}).
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.IdentityBadType(System.Object,System.Object,System.Object)">
            <summary>
                Identity value generation cannot be used for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Identity value generation can only be used with signed integer properties.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.IncludePropertyDuplicated(System.Object,System.Object)">
            <summary>
                Include property '{entityType}.{property}' cannot be defined multiple times
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.IncludePropertyInIndex(System.Object,System.Object)">
            <summary>
                Include property '{entityType}.{property}' is already included in the index
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.IncludePropertyNotFound(System.Object,System.Object)">
            <summary>
                Include property '{entityType}.{property}' not found
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.InvalidTableToIncludeInScaffolding(System.Object)">
            <summary>
                The specified table '{table}' is not valid. Specify tables using the format '[schema].[table]'.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.NonKeyValueGeneration(System.Object,System.Object)">
            <summary>
                The property '{property}' on entity type '{entityType}' is configured to use 'SequenceHiLo' value generator, which is only intended for keys. If this was intentional configure an alternate key on the property, otherwise call 'ValueGeneratedNever' or configure store generation for this property.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.RowValueComparisonRequiresTuplesOfSameLength">
            <summary>
                Row values comparisons require two tuple arguments of the same length.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.CannotUseDataSourceWithAuthCallbacks">
            <summary>
                Cannot set ProvideClientCertificatesCallback, RemoteCertificateValidationCallback or ProvidePasswordCallback when a data source is provided.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.SequenceBadType(System.Object,System.Object,System.Object)">
            <summary>
                PostgreSQL sequences cannot be used to generate values for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Sequences can only be used with integer properties.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.StoredProcedureResultColumnsNotSupported(System.Object,System.Object)">
            <summary>
                The entity type '{entityType}' is mapped to the stored procedure '{sproc}', which is configured with result columns. PostgreSQL stored procedures do not support result columns; use output parameters instead.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.StoredProcedureReturnValueNotSupported(System.Object,System.Object)">
            <summary>
                The entity type '{entityType}' is mapped to the stored procedure '{sproc}', which is configured with result columns. PostgreSQL stored procedures do not support return values; use output parameters instead.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlStrings.TransientExceptionDetected">
            <summary>
                An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogEnumColumnSkipped(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Enum column '{name}' cannot be scaffolded, define a CLR enum type and add the property manually.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogExpressionIndexSkipped(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Expression index '{name}' on table {tableName} cannot be scaffolded, expression indices aren't supported and must be added via raw SQL in migrations.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundCollation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found collation with name: {collationName}, schema: {schema}, LC_COLLATE: {lcCollate}, LC_CTYPE: {lcCtype}, provider: {provider}, deterministic: {isDeterministic}
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundColumn(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found column with table: {tableName}, column name: {columnName}, data type: {dataType}, nullable: {isNullable}, identity: {isIdentity}, default value: {defaultValue}, computed value: {computedValue}
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundForeignKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found foreign key on table: {tableName}, name: {foreignKeyName}, principal table: {principalTableName}, delete action: {deleteAction}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundIndex(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found index with name: {indexName}, table: {tableName}, is unique: {isUnique}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundPrimaryKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found primary key with name: {primaryKeyName}, table: {tableName}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundSequence(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found sequence name: {name}, data type: {dataType}, cyclic: {isCyclic}, increment: {increment}, start: {start}, minimum: {min}, maximum: {max}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found table with name: {name}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogFoundUniqueConstraint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found unique constraint with name: {uniqueConstraintName}, table: {tableName}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogMissingSchema(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Unable to find a schema in the database matching the selected schema {schema}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogMissingTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Unable to find a table in the database matching the selected table {table}.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogPrincipalColumnNotFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                For foreign key {foreignKeyName} on table {tableName}, unable to find the column called {principalColumnName} on the foreign key's principal table, {principaltableName}. Skipping foreign key.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogPrincipalTableNotInSelectionSet(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                For foreign key {fkName} on table {tableName}, unable to model the end of the foreign key on principal table {principaltableName}. This is usually because the principal table was not included in the selection set.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogUnsupportedColumnConstraintSkipped(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Constraint '{name}' on table {tableName} cannot be scaffolded because it includes a column that cannot be scaffolded (e.g. enum).
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Internal.NpgsqlResources.LogUnsupportedColumnIndexSkipped(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Index '{name}' on table {tableName} cannot be scaffolded because it includes a column that cannot be scaffolded (e.g. enum).
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.CockroachDbInterleaveInParent">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.CockroachDbInterleaveInParent.Annotatable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.CockroachDbInterleaveInParent.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.CockroachDbInterleaveInParent.ParentTableSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.CockroachDbInterleaveInParent.ParentTableName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.CockroachDbInterleaveInParent.InterleavePrefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlConventionSetBuilder">
            <summary>
                A builder for building conventions for Npgsql.
            </summary>
            <remarks>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> and multiple registrations are allowed. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own set of instances of this service. The implementations may depend on other
                    services registered with any lifetime. The implementations do not need to be thread-safe.
                </para>
                <para>
                    See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see>, and
                </para>
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlConventionSetBuilder" /> instance.
            </summary>
            <param name="dependencies">The core dependencies for this service.</param>
            <param name="relationalDependencies">The relational dependencies for this service.</param>
            <param name="typeMappingSource">The type mapping source to use.</param>
            <param name="npgsqlSingletonOptions">The singleton options to use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlConventionSetBuilder.CreateConventionSet">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlConventionSetBuilder.Build">
            <summary>
                <para>
                    Call this method to build a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" /> for Npgsql when using
                    the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> outside of <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />.
                </para>
                <para>
                    Note that it is unusual to use this method.
                    Consider using <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> in the normal way instead.
                </para>
            </summary>
            <returns> The convention set. </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlConventionSetBuilder.CreateModelBuilder">
            <summary>
                <para>
                    Call this method to build a <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> for Npgsql outside of <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />.
                </para>
                <para>
                    Note that it is unusual to use this method.
                    Consider using <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> in the normal way instead.
                </para>
            </summary>
            <returns> The convention set. </returns>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlJsonElementHackConvention">
            <summary>
                This convention is a hack around https://github.com/dotnet/efcore/issues/32192. To support the EF owned entity JSON support, EF
                requires
                that a lookup of the CLR type <see cref="T:System.Text.Json.JsonElement" /> return the provider's special <see cref="T:Microsoft.EntityFrameworkCore.Storage.JsonTypeMapping" />. But Npgsql has
                its own JSON DOM support, where actually mapping <see cref="T:System.Text.Json.JsonElement" /> is allowed as a weakly-typed mapping strategy. The two
                JSON type mappings are incompatible notably because EF's <see cref="T:Microsoft.EntityFrameworkCore.Storage.JsonTypeMapping" /> is expected to return UTF8 byte data which is
                then parsed via <see cref="T:System.Text.Json.Utf8JsonWriter" /> (and not a string). So for properties actually typed as <see cref="T:System.Text.Json.JsonElement" />, we
                hack here and set the type mapping rather than going through the regular type mapping process.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlJsonElementHackConvention.ProcessPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlPostgresModelFinalizingConvention">
            <summary>
                A convention that discovers certain common PostgreSQL extensions based on store types used in the model (e.g. hstore).
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see>.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlPostgresModelFinalizingConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlPostgresModelFinalizingConvention" />.
            </summary>
            <param name="typeMappingSource">The type mapping source to use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlPostgresModelFinalizingConvention.ProcessModelFinalizing(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlPostgresModelFinalizingConvention.DiscoverPostgresExtensions(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)">
            <summary>
                Discovers certain common PostgreSQL extensions based on property store types (e.g. hstore).
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlPostgresModelFinalizingConvention.ProcessRowVersionProperty(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Detects properties which are uint, OnAddOrUpdate and configured as concurrency tokens, and maps these to the PostgreSQL
                internal "xmin" column, which changes every time the row is modified.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention">
            <summary>
                A convention that creates an optimized copy of the mutable model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention" />.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this convention.</param>
            <param name="relationalDependencies">Parameter object containing relational dependencies for this convention.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention.ProcessModelAnnotations(System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.RuntimeModel,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention.ProcessEntityTypeAnnotations(System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention.ProcessPropertyAnnotations(System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlRuntimeModelConvention.ProcessIndexAnnotations(System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.RuntimeIndex,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlSharedTableConvention">
            <summary>
                A convention that manipulates names of database objects for entity types that share a table to avoid clashes.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlSharedTableConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlSharedTableConvention" />.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this convention.</param>
            <param name="relationalDependencies">Parameter object containing relational dependencies for this convention.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlSharedTableConvention.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlSharedTableConvention.CheckConstraintsUniqueAcrossTables">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlStoreGenerationConvention">
            <summary>
                A convention that ensures that properties aren't configured to have a default value, as computed column
                or using a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> at the same time.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlStoreGenerationConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlStoreGenerationConvention" />.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this convention.</param>
            <param name="relationalDependencies">Parameter object containing relational dependencies for this convention.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlStoreGenerationConvention.ProcessPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})">
            <summary>
                Called after an annotation is changed on a property.
            </summary>
            <param name="propertyBuilder">The builder for the property.</param>
            <param name="name">The annotation name.</param>
            <param name="annotation">The new annotation.</param>
            <param name="oldAnnotation">The old annotation.</param>
            <param name="context">Additional information associated with convention execution.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlStoreGenerationConvention.Validate(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationConvention">
            <summary>
                A convention that configures store value generation as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" /> on properties that are
                part of the primary key and not part of any foreign keys, were configured to have a database default value
                or were configured to use a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.
                It also configures properties as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAddOrUpdate" /> if they were configured as computed columns.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationConvention" />.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this convention.</param>
            <param name="relationalDependencies">Parameter object containing relational dependencies for this convention.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationConvention.ProcessPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})">
            <summary>
                Called after an annotation is changed on a property.
            </summary>
            <param name="propertyBuilder">The builder for the property.</param>
            <param name="name">The annotation name.</param>
            <param name="annotation">The new annotation.</param>
            <param name="oldAnnotation">The old annotation.</param>
            <param name="context">Additional information associated with convention execution.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationConvention.GetValueGenerated(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the store value generation strategy to set for the given property.
            </summary>
            <param name="property">The property.</param>
            <returns>The store value generation strategy to set for the given property.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationConvention.GetValueGenerated(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the store value generation strategy to set for the given property.
            </summary>
            <param name="property"> The property. </param>
            <param name="storeObject"> The identifier of the store object. </param>
            <returns>The store value generation strategy to set for the given property.</returns>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention">
            <summary>
                A convention that configures the default model <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> as
                <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityByDefaultColumn" /> for newer PostgreSQL versions,
                and <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.SerialColumn" /> for pre-10.0 versions.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies,System.Version)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention" />.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this convention.</param>
            <param name="relationalDependencies"> Parameter object containing relational dependencies for this convention.</param>
            <param name="postgresVersion">The PostgreSQL version being targeted. This affects the default value generation strategy.</param>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention.RelationalDependencies">
            <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention.ProcessModelInitialized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Conventions.NpgsqlValueGenerationStrategyConvention.ProcessModelFinalizing(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.CockroachDbAnnotationNames">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.CockroachDbAnnotationNames.Prefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.CockroachDbAnnotationNames.InterleaveInParent">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.Empty">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.StartValue">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.IncrementBy">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.MinValue">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.MaxValue">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.IsCyclic">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.NumbersToCache">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.Serialize">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.Get(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.Deserialize(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.Equals(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.IdentitySequenceOptionsData.GetHashCode">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.Prefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.CompressionMethod">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.CreatedConcurrently">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.DatabaseTemplate">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.HiLoSequenceName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.HiLoSequenceSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IdentityOptions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexMethod">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexOperators">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexNullSortOrder">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexInclude">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.NullsDistinct">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.Tablespace">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.TsVectorConfig">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.TsVectorProperties">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.UnloggedTable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.ValueGenerationStrategy">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.SequenceNameSuffix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.SequenceName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.SequenceSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.CollationDefinitionPrefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.EnumPrefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.PostgresExtensionPrefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.RangePrefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.StorageParameterPrefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.PostgresTypeType">
            <summary>
                Identifies the type of the PostgreSQL type of this column (e.g. array, range, base).
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.ElementDataType">
            <summary>
                If this column's data type is an array, contains the data type of its elements.
                Otherwise null.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexExpression">
            <summary>
                If the index contains an expression (rather than simple column references), the expression is contained here.
                This is currently unsupported and will be ignored.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.DefaultColumnCollation">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.ValueGeneratedOnAdd">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.Comment">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexCollation">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.IndexSortOrder">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationProvider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationProvider.#ctor(Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITable,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IColumn,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITableIndex,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy">
            <summary>
                Defines strategies to use when generating values for database columns.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see>.
            </remarks>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.None">
            <summary>
                No Npgsql-specific strategy.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.SequenceHiLo">
            <summary>
                <para>
                    A sequence-based hi-lo pattern where blocks of IDs are allocated from the server and
                    used client-side for generating keys.
                </para>
                <para>
                    This is an advanced pattern--only use this strategy if you are certain it is what you need.
                </para>
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.SerialColumn">
            <summary>
                <para>
                    Selects the serial column strategy, which is a regular column backed by an auto-created index.
                </para>
                <para>
                    If you are creating a new project on PostgreSQL 10 or above, consider using <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityByDefaultColumn" /> instead.
                </para>
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityAlwaysColumn">
            <summary>
                <para>Selects the always-identity column strategy (a value cannot be provided).</para>
                <para>Available only starting PostgreSQL 10.</para>
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityByDefaultColumn">
            <summary>
                <para>Selects the by-default-identity column strategy (a value can be provided to override the identity mechanism).</para>
                <para>Available only starting PostgreSQL 10.</para>
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.Sequence">
            <summary>
                A pattern that uses a database sequence to generate values for the column.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategyExtensions">
            <summary>
                Extension methods over <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategyExtensions.IsIdentity(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy)">
            <summary>
                Whether the given strategy is either <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityByDefaultColumn" /> or
                <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityAlwaysColumn" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategyExtensions.IsIdentity(System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy})">
            <summary>
                Whether the given strategy is either <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityByDefaultColumn" /> or
                <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityAlwaysColumn" />.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder">
            <summary>
                Options for modifying sort ordering of <c>NULL</c>-values in indexes.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder.Unspecified">
            <summary>
                Represents an unspecified sort order. The database default will be used.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder.NullsFirst">
            <summary>
                Specifies that nulls sort before non-nulls.
            </summary>
            <remarks>
                This is the default when <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder.Descending" /> is specified.
            </remarks>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder.NullsLast">
            <summary>
                Specifies that nulls sort after non-nulls.
            </summary>
            <remarks>
                This is the default when <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder.Descending" /> is not specified.
            </remarks>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.GetOrAddCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.FindCollation(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.GetCollations(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.Annotatable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.Schema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.Name">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.LcCollate">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.LcCtype">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.Provider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation.IsDeterministic">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum">
            <summary>
                Represents the metadata for a PostgreSQL enum.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String)">
            <summary>
                Creates a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" />.
            </summary>
            <param name="annotatable">The annotatable to search for the annotation.</param>
            <param name="annotationName">The annotation name to search for in the annotatable.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotationName" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.GetOrAddPostgresEnum(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String,System.String[])">
            <summary>
                Gets or adds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> from or to the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable from which to get or add the enum.</param>
            <param name="schema">The enum schema or null to use the model's default schema.</param>
            <param name="name">The enum name.</param>
            <param name="labels">The enum labels.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="labels" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.GetOrAddPostgresEnum(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String[])">
            <summary>
                Gets or adds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> from or to the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable from which to get or add the enum.</param>
            <param name="name">The enum name.</param>
            <param name="labels">The enum labels.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="labels" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.FindPostgresEnum(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String,System.String)">
            <summary>
                Finds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />, or returns null if not found.
            </summary>
            <param name="annotatable">The annotatable to search for the enum.</param>
            <param name="schema">The enum schema or null to use the model's default schema.</param>
            <param name="name">The enum name.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.GetPostgresEnums(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable)">
            <summary>
                Gets the collection of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> stored in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable to search for <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> annotations.</param>
            <returns>
                The collection of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum" /> stored in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.Annotatable">
            <summary>
                The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.Annotatable" /> that stores the enum.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.Schema">
            <summary>
                The enum schema or null to represent the default schema.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.Name">
            <summary>
                The enum name.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum.Labels">
            <summary>
                The enum labels.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension">
            <summary>
                Represents the metadata for a PostgreSQL extension.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String)">
            <summary>
                Creates a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" />.
            </summary>
            <param name="annotatable">The annotatable to search for the annotation.</param>
            <param name="annotationName">The annotation name to search for in the annotatable.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotationName" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String,System.String)">
            <summary>
                Gets or adds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from or to the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable from which to get or add the extension.</param>
            <param name="schema">The extension schema or null to use the model's default schema.</param>
            <param name="name">The extension name.</param>
            <param name="version">The extension version.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable,System.String,System.String,System.String)">
            <summary>
                Gets or adds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from or to the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable from which to get or add the extension.</param>
            <param name="schema">The extension schema or null to use the model's default schema.</param>
            <param name="name">The extension name.</param>
            <param name="version">The extension version.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String)">
            <summary>
                Gets or adds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from or to the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable from which to get or add the extension.</param>
            <param name="name">The extension name.</param>
            <param name="version">The extension version.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.FindPostgresExtension(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String,System.String)">
            <summary>
                Finds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />, or returns null if not found.
            </summary>
            <param name="annotatable">The annotatable to search for the extension.</param>
            <param name="schema">The extension schema. The default schema is never used.</param>
            <param name="name">The extension name.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.GetPostgresExtensions(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable)">
            <summary>
                Gets the collection of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> stored in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable to search for <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> annotations.</param>
            <returns>
                The collection of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension" /> stored in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.Annotatable">
            <summary>
                The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.Annotatable" /> that stores the extension.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.Schema">
            <summary>
                The extension schema or null to represent the default schema.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.Name">
            <summary>
                The extension name.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension.Version">
            <summary>
                The extension version.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange">
            <summary>
                Represents the metadata for a PostgreSQL range.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String)">
            <summary>
                Creates a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" />.
            </summary>
            <param name="annotatable">The annotatable to search for the annotation.</param>
            <param name="annotationName">The annotation name to search for in the annotatable.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotationName" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.GetOrAddPostgresRange(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Gets or adds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> from or to the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable from which to get or add the range.</param>
            <param name="schema">The range schema or null to use the model's default schema.</param>
            <param name="name">The range name.</param>
            <param name="subtype">The range subtype.</param>
            <param name="canonicalFunction"></param>
            <param name="subtypeOpClass"></param>
            <param name="collation"></param>
            <param name="subtypeDiff"></param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subtype" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.FindPostgresRange(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable,System.String,System.String)">
            <summary>
                Finds a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />, or returns null if not found.
            </summary>
            <param name="annotatable">The annotatable to search for the range.</param>
            <param name="schema">The range schema or null to use the model's default schema.</param>
            <param name="name">The range name.</param>
            <returns>
                The <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> from the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="schema" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" />
            </exception>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.GetPostgresRanges(Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable)">
            <summary>
                Gets the collection of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> stored in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </summary>
            <param name="annotatable">The annotatable to search for <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> annotations.</param>
            <returns>
                The collection of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange" /> stored in the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="annotatable" />
            </exception>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.Annotatable">
            <summary>
                The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.Annotatable" /> that stores the range.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.Schema">
            <summary>
                The range schema or null to represent the default schema.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.Name">
            <summary>
                The range name.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.Subtype">
            <summary>
                The subtype of the range.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.CanonicalFunction">
            <summary>
                The function defining a "step" in a discrete range.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.SubtypeOpClass">
            <summary>
                The operator class to use.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.Collation">
            <summary>
                The collation to use.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange.SubtypeDiff">
            <summary>
                The function defining a difference in subtype values.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder">
            <summary>
                Options for modifying sort ordering of index values.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder.Ascending">
            <summary>
                Specifies ascending sort order, which is the default.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder.Descending">
            <summary>
                Specifies descending sort order.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.ExistsSql">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.InterpretExistsResult(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.GetCreateIfNotExistsScript">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.GetBeginIfNotExistsScript(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.GetBeginIfExistsScript(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlHistoryRepository.GetEndIfScript">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlMigrator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlMigrator.#ctor(Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly,Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Infrastructure.ICurrentDbContext,Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger,Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlMigrator.Migrate(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Internal.NpgsqlMigrator.MigrateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator">
            <summary>
                PostgreSQL-specific implementation of <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator" />.
            </summary>
            <remarks>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use
                    its own instance of this service. The implementation may depend on other services registered with any lifetime. The
                    implementation does not need to be thread-safe.
                </para>
                <para>
                    See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>.
                </para>
            </remarks>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator._postgresVersion">
            <summary>
                The backend version to target.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator" /> instance.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this service.</param>
            <param name="npgsqlSingletonOptions">The singleton options to use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerationOptions)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.IndexOptions(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlCreateDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlDropDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateCreateExtension(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresExtension,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateCollationStatements(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateCreateCollation(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateDropCollation(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresCollation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateEnumStatements(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateCreateEnum(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateDropEnum(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateAddEnumLabel(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresEnum,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateRangeStatements(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateCreateRange(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.GenerateDropRange(Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.PostgresRange,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> by making calls on the given
                <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />, and then terminates the final command.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
            <param name="terminate"> Indicates whether or not to terminate the command after generating SQL for the operation. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.ColumnDefinition(System.String,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.DefaultValue(System.Object,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.ApplyTsVectorColumnSql(Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String)">
            <summary>
                Checks for a <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.Internal.NpgsqlAnnotationNames.TsVectorConfig" /> annotation on the given column, and if found, assigns
                the appropriate SQL to <see cref="P:Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation.ComputedColumnSql" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.IdentityDefinition(Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.ComputedColumnDefinition(System.String,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates a SQL fragment for a computed column definition for the given column metadata.
            </summary>
            <param name="schema"> The schema that contains the table, or <c>null</c> to use the default schema. </param>
            <param name="table"> The table that contains the column. </param>
            <param name="name"> The column name. </param>
            <param name="operation"> The column metadata. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to add the SQL fragment. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Rename(System.String,System.String,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Renames a database object such as a table, index, or sequence.
            </summary>
            <param name="schema">The current schema of the object to rename.</param>
            <param name="name">The current name of the object to rename.</param>
            <param name="newName">The new name.</param>
            <param name="type">The type of the object (e.g. TABLE, INDEX, SEQUENCE).</param>
            <param name="builder">The builder to which operations are appended.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Transfer(System.String,System.String,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Transfers a database object such as a table, index, or sequence between schemas.
            </summary>
            <param name="newSchema">The new schema.</param>
            <param name="schema">The current schema.</param>
            <param name="name">The name of the object to transfer.</param>
            <param name="type">The type of the object (e.g. TABLE, INDEX, SEQUENCE).</param>
            <param name="builder">The builder to which operations are appended.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.RecreateIndexes(Microsoft.EntityFrameworkCore.Metadata.IColumn,Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <inheritdoc />
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.SystemColumnNames">
            <summary>
                Tables in PostgreSQL implicitly have a set of system columns, which are always there.
                We want to allow users to access these columns (i.e. xmin for optimistic concurrency) but
                they should never generate migration operations.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/ddl-system-columns.html
            </remarks>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlCreateDatabaseOperation">
            <summary>
                A PostgreSQL-specific <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> to create a database.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlCreateDatabaseOperation.Name">
            <summary>
                The name of the database.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlCreateDatabaseOperation.Template">
            <summary>
                The PostgreSQL database to use as a template for the new database to be created.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlCreateDatabaseOperation.Tablespace">
            <summary>
                The PostgreSQL tablespace in which to create the database.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlDropDatabaseOperation">
            <summary>
                A PostgreSQL-specific <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> to drop a database.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.Operations.NpgsqlDropDatabaseOperation.Name">
            <summary>
                The name of the database.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy">
            <summary>
                An <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> implementation for retrying failed executions on PostgreSQL.
            </summary>
            <remarks>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use
                    its own instance of this service. The implementation may depend on other services registered with any lifetime. The
                    implementation does not need to be thread-safe.
                </para>
                <para>
                    See <see href="https://aka.ms/efcore-docs-connection-resiliency">Connection resiliency and database retries</see> for more
                    information and examples.
                </para>
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="context"> The context on which the operations will be invoked. </param>
            <remarks>
                The default retry limit is 6, which means that the total amount of time spent before failing is about a minute.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Int32)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="context"> The context on which the operations will be invoked. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,System.Int32)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,System.Collections.Generic.ICollection{System.String})">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
            <param name="errorCodesToAdd"> Additional error codes that should be considered transient. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Int32,System.TimeSpan,System.Collections.Generic.ICollection{System.String})">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="context"> The context on which the operations will be invoked. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
            <param name="maxRetryDelay"> The maximum delay between retries. </param>
            <param name="errorCodesToAdd"> Additional error codes that should be considered transient. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,System.Int32,System.TimeSpan,System.Collections.Generic.ICollection{System.String})">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
            <param name="maxRetryDelay"> The maximum delay between retries. </param>
            <param name="errorCodesToAdd"> Additional SQL error numbers that should be considered transient. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.NpgsqlRetryingExecutionStrategy.ShouldRetryOn(System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression">
            <summary>
                Represents a PostgreSQL array ALL expression.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/static/functions-comparisons.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Type">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Item">
            <summary>
                The value to test against the <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Array" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Array">
            <summary>
                The array of values or patterns to test for the <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Item" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.OperatorType">
            <summary>
                The operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllOperatorType,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression" />.
            </summary>
            <param name="operatorType">The operator symbol to the array expression.</param>
            <param name="item">The value to find.</param>
            <param name="array">The array to search.</param>
            <param name="typeMapping">The type mapping for the expression.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="item">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Item" /> property of the result.</param>
            <param name="array">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Array" /> property of the result.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllOperatorType">
            <summary>
                Determines the operator type for a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression" />.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllOperatorType.Like">
            <summary>
                Represents a PostgreSQL LIKE ALL operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllOperatorType.ILike">
            <summary>
                Represents a PostgreSQL ILIKE ALL operator.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression">
            <summary>
                Represents a PostgreSQL array ANY expression.
            </summary>
            <example>
                1 = ANY ('{0,1,2}'), 'cat' LIKE ANY ('{a%,b%,c%}')
            </example>
            <remarks>
                See https://www.postgresql.org/docs/current/static/functions-comparisons.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Type">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Item">
            <summary>
                The value to test against the <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Array" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Array">
            <summary>
                The array of values or patterns to test for the <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Item" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.OperatorType">
            <summary>
                The operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyOperatorType,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression" />.
            </summary>
            <param name="operatorType">The operator symbol to the array expression.</param>
            <param name="item">The value to find.</param>
            <param name="array">The array to search.</param>
            <param name="typeMapping">The type mapping for the expression.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="item">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Item" /> property of the result.</param>
            <param name="array">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Array" /> property of the result.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyOperatorType">
            <summary>
                Determines the operator type for a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression" />.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyOperatorType.Equal">
            <summary>
                Represents a PostgreSQL = ANY operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyOperatorType.Like">
            <summary>
                Represents a PostgreSQL LIKE ANY operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyOperatorType.ILike">
            <summary>
                Represents a PostgreSQL ILIKE ANY operator.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression">
            <summary>
                An SQL expression that represents an indexing into a PostgreSQL array.
            </summary>
            <remarks>
                <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression" /> specifically disallows having an <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression.OperatorType" />
                of value <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" /> as arrays are a PostgreSQL-only feature.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Array">
            <summary>
                The array being indexed.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Index">
            <summary>
                The index in the array.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.IsNullable">
            <summary>
                Whether the expression is nullable.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression" /> class.
            </summary>
            <param name="array">The array tp index into.</param>
            <param name="index">An position in the array to index into.</param>
            <param name="nullable">Whether the expression is nullable.</param>
            <param name="type">The <see cref="T:System.Type" /> of the expression.</param>
            <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="array">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Array" /> property of the result.</param>
            <param name="index">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Index" /> property of the result.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression">
            <summary>
                A SQL expression that represents a slicing into a PostgreSQL array (e.g. array[2:3]).
            </summary>
            <remarks>
                <see href="https://www.postgresql.org/docs/current/arrays.html#ARRAYS-ACCESSING" />.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.Array">
            <summary>
                The array being sliced.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.LowerBound">
            <summary>
                The lower bound of the slice.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.UpperBound">
            <summary>
                The upper bound of the slice.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.IsNullable">
            <summary>
                Whether the expression is nullable.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression" /> class.
            </summary>
            <param name="array">The array tp slice into.</param>
            <param name="lowerBound">The lower bound of the slice.</param>
            <param name="upperBound">The upper bound of the slice.</param>
            <param name="nullable">Whether the expression is nullable.</param>
            <param name="type">The <see cref="T:System.Type" /> of the expression.</param>
            <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="array">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.Array" /> property of the result.</param>
            <param name="lowerBound">The lower bound of the slice.</param>
            <param name="upperBound">The upper bound of the slice.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression">
            <summary>
                An expression that represents a PostgreSQL-specific binary operation in a SQL tree.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression" /> class.
            </summary>
            <param name="operatorType">The operator to apply.</param>
            <param name="left">An expression which is left operand.</param>
            <param name="right">An expression which is right operand.</param>
            <param name="type">The <see cref="T:System.Type" /> of the expression.</param>
            <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.OperatorType">
            <summary>
                The operator of this PostgreSQL binary operation.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Left">
            <summary>
                The left operand.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Right">
            <summary>
                The right operand.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="left">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Left" /> property of the result.</param>
            <param name="right">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Right" /> property of the result.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression">
            <summary>
                An SQL expression that represents a PostgreSQL DELETE operation.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Table">
            <summary>
                The tables that rows are to be deleted from.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.FromItems">
            <summary>
                Additional tables which can be referenced in the predicate.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Predicate">
            <summary>
                The WHERE predicate for the DELETE.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Tags">
            <summary>
                The list of tags applied to this <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase},Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.ISet{System.String})">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression" /> class.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Type">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.NodeType">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="predicate">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Predicate" /> property of the result.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression">
            <summary>
                Represents a SQL function call expression, supporting PostgreSQL's named parameter notation
                (e.g. make_interval(weeks => 2) and non-comma parameter separators (e.g. position(substring in string)).
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.Arguments">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.ArgumentsPropagateNullability">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.IsAggregateDistinct">
            <summary>
                For aggregate methods, contains whether to apply distinct.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.AggregatePredicate">
            <summary>
                For aggregate methods, contains the predicate to be applied (generated as the SQL FILTER clause).
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.AggregateOrderings">
            <summary>
                For aggregate methods, contains the orderings to be applied.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.ArgumentNames">
            <summary>
                List of argument names, corresponding position-wise to arguments in <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression.Arguments" />.
                Unnamed (positional) arguments must come first, so this list must contain possible nulls, followed by
                non-nulls.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.ArgumentSeparators">
            <summary>
                List of non-comma separators between argument separators, in the order in which they appear between
                the arguments. <c>null</c> as well as positions beyond the end of the list mean regular commas.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.CreateWithNamedArguments(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.Boolean},System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates an instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression" /> with named arguments.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.CreateWithArgumentSeparators(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.Boolean},System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates an instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression" /> with argument separators.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression},System.Boolean,System.Collections.Generic.IEnumerable{System.Boolean},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.ApplyTypeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.UpdateAggregateComponents(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression})">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression">
            <summary>
                Represents a PostgreSQL ILIKE expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Match">
            <summary>
                The match expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Pattern">
            <summary>
                The pattern to match.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.EscapeChar">
            <summary>
                The escape character to use in <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Pattern" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression" />.
            </summary>
            <param name="match">The expression to match.</param>
            <param name="pattern">The pattern to match.</param>
            <param name="escapeChar">The escape character to use in <paramref name="pattern" />.</param>
            <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression">
            <summary>
                Represents a PostgreSQL JSON operator traversing a JSON document with a path (i.e. x#>y or x#>>y)
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Expression">
            <summary>
                The match expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Path">
            <summary>
                The pattern to match.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.ReturnsText">
            <summary>
                Whether the text-returning operator (x#>>y) or the object-returning operator (x#>y) is used.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Append(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Appends an additional path component to this <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression" /> and returns the result.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression">
            <summary>
                Represents creating a new PostgreSQL array.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression" /> class.
            </summary>
            <param name="expressions">The values to initialize the elements of the new array.</param>
            <param name="type">The <see cref="T:System.Type" /> of the expression.</param>
            <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.Expressions">
            <summary>
                The operator of this PostgreSQL binary operation.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="expressions">The values to initialize the elements of the new array.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression">
            <summary>
                Represents a PostgreSQL regular expression match expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Type">
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Match">
            <summary>
                The match expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Pattern">
            <summary>
                The pattern to match.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Options">
            <summary>
                The options for regular expression evaluation.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Text.RegularExpressions.RegexOptions,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression" />.
            </summary>
            <param name="match">The expression to match.</param>
            <param name="pattern">The pattern to match.</param>
            <param name="options">The options for regular expression evaluation.</param>
            <param name="typeMapping">The type mapping for the expression.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression">
            <summary>
                An expression that represents a PostgreSQL-specific row value expression in a SQL tree.
            </summary>
            <remarks>
                See the <see href="https://www.postgresql.org/docs/current/sql-expressions.html#SQL-SYNTAX-ROW-CONSTRUCTORS">PostgreSQL docs</see>
                for more information.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.Values">
            <summary>
                The values of this PostgreSQL row value expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression">
            <summary>
                An expression that represents a PostgreSQL <c>unnest</c> function call in a SQL tree.
            </summary>
            <remarks>
                <para>
                    This expression is just a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableValuedFunctionExpression" />, adding the ability to provide an explicit column name
                    for its output (<c>SELECT * FROM unnest(array) AS f(foo)</c>). This is necessary since when the column name isn't explicitly
                    specified, it is automatically identical to the table alias (<c>f</c> above); since the table alias may get uniquified by
                    EF, this would break queries.
                </para>
                <para>
                    See <see href="https://www.postgresql.org/docs/current/functions-array.html#ARRAY-FUNCTIONS-TABLE">unnest</see> for more
                    information and examples.
                </para>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.ColumnInfos">
            <summary>
                The name of the column to be projected out from the <c>unnest</c> call.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.WithOrdinality">
            <summary>
                Whether to project an additional ordinality column containing the index of each element in the array.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.ColumnInfo},System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.Clone">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.ColumnInfo">
            <summary>
                Defines the name of a column coming out of a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression" /> and optionally its type.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression.ColumnInfo.#ctor(System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Defines the name of a column coming out of a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression" /> and optionally its type.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression">
            <summary>
                A binary expression only to be used by plugins, since new expressions can only be added (and handled)
                within the provider itself. Allows defining the operator as a string within the expression, and has
                default (i.e. propagating) nullability semantics.
                All type mappings must be applied to the operands before the expression is constructed, since there's
                no inference logic for it in <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Left">
            <summary>
                The left-hand expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Right">
            <summary>
                The right-hand expression.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Operator">
            <summary>
                The operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.String,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression" />.
            </summary>
            <param name="left">The left-hand expression.</param>
            <param name="right">The right-hand expression.</param>
            <param name="binaryOperator">The operator symbol acting on the expression.</param>
            <param name="type">The result type.</param>
            <param name="typeMapping">The type mapping for the expression.</param>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Equals(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression">
            <summary>
                An expression that represents a PostgreSQL <c>unnest</c> function call in a SQL tree.
            </summary>
            <remarks>
                <para>
                    This expression is just a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression" />, adding the ability to provide an explicit column name
                    for its output (<c>SELECT * FROM unnest(array) AS f(foo)</c>). This is necessary since when the column name isn't explicitly
                    specified, it is automatically identical to the table alias (<c>f</c> above); since the table alias may get uniquified by
                    EF, this would break queries.
                </para>
                <para>
                    See <see href="https://www.postgresql.org/docs/current/functions-array.html#ARRAY-FUNCTIONS-TABLE">unnest</see> for more
                    information and examples.
                </para>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.Array">
            <summary>
                The array to be un-nested into a table.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.ColumnName">
            <summary>
                The name of the column to be projected out from the <c>unnest</c> call.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
            <param name="array">The <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.Array" /> property of the result.</param>
            <returns>This expression if no children changed, or an expression with the updated children.</returns>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType">
            <summary>
                PostgreSQL-specific expression node types.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.Contains">
            <summary>
                Represents a PostgreSQL contains operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.ContainedBy">
            <summary>
                Represents a PostgreSQL contained-by operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.Overlaps">
            <summary>
                Represents a PostgreSQL overlap operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.Distance">
            <summary>
                Represents a PostgreSQL operator for finding the distance between two things (e.g. 2D distance between two geometries,
                between timestamps...)
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.NetworkContainedByOrEqual">
            <summary>
                Represents a PostgreSQL network contained-by-or-equal operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.NetworkContainsOrEqual">
            <summary>
                Represents a PostgreSQL network contains-or-equal operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.NetworkContainsOrContainedBy">
            <summary>
                Represents a PostgreSQL network contains-or-contained-by operator.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeIsStrictlyLeftOf">
            <summary>
                Represents a PostgreSQL operator for checking if a range is strictly to the left of another range.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeIsStrictlyRightOf">
            <summary>
                Represents a PostgreSQL operator for checking if a range is strictly to the right of another range.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeDoesNotExtendRightOf">
            <summary>
                Represents a PostgreSQL operator for checking if a range does not extend to the right of another range.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeDoesNotExtendLeftOf">
            <summary>
                Represents a PostgreSQL operator for checking if a range does not extend to the left of another range.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeIsAdjacentTo">
            <summary>
                Represents a PostgreSQL operator for checking if a range is adjacent to another range.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeUnion">
            <summary>
                Represents a PostgreSQL operator for performing a union between two ranges.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeIntersect">
            <summary>
                Represents a PostgreSQL operator for performing an intersection between two ranges.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.RangeExcept">
            <summary>
                Represents a PostgreSQL operator for performing an except operation between two ranges.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.TextSearchMatch">
            <summary>
                Represents a PostgreSQL operator for performing a full-text search match.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.TextSearchAnd">
            <summary>
                Represents a PostgreSQL operator for logical AND within a full-text search match.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.TextSearchOr">
            <summary>
                Represents a PostgreSQL operator for logical OR within a full-text search match.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.JsonExists">
            <summary>
                Represents a PostgreSQL operator for checking whether a key exists in a JSON document.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.JsonExistsAny">
            <summary>
                Represents a PostgreSQL operator for checking whether any of multiple keys exists in a JSON document.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.JsonExistsAll">
            <summary>
                Represents a PostgreSQL operator for checking whether all the given keys exist in a JSON document.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.LTreeMatches">
            <summary>
                Represents a PostgreSQL operator for matching in an ltree type.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.LTreeMatchesAny">
            <summary>
                Represents a PostgreSQL operator for matching in an ltree type.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.LTreeFirstAncestor">
            <summary>
                Represents a PostgreSQL operator for finding the first ancestor in an ltree type.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.LTreeFirstDescendent">
            <summary>
                Represents a PostgreSQL operator for finding the first descendent in an ltree type.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType.LTreeFirstMatches">
            <summary>
                Represents a PostgreSQL operator for finding the first match in an ltree type.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlAggregateMethodCallTranslatorProvider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlAggregateMethodCallTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProviderDependencies,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlArrayMethodTranslator">
            <summary>
                Translates method and property calls on arrays/lists into their corresponding PostgreSQL operations.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/functions-array.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlArrayMethodTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlArrayMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlBigIntegerMemberTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlBigIntegerMemberTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlBigIntegerMemberTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlByteArrayMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlByteArrayMethodTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlByteArrayMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlConvertTranslator">
            <summary>
                Translates methods defined on <see cref="T:System.Convert" /> into PostgreSQL CAST expressions.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlConvertTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlConvertTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMemberTranslator">
            <summary>
                Provides translation services for <see cref="T:System.DateTime" /> members.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/functions-datetime.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMemberTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMemberTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMemberTranslator.TranslateDateTimeOffset(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMethodTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlDateTimeMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlFullTextSearchMethodTranslator">
            <summary>
                Provides translations for PostgreSQL full-text search methods.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlFullTextSearchMethodTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlFullTextSearchMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlFuzzyStringMatchMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlFuzzyStringMatchMethodTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlFuzzyStringMatchMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDbFunctionsTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDbFunctionsTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDbFunctionsTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDomTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDomTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDomTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonDomTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator.TranslateMemberAccess(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlJsonPocoTranslator.TranslateArrayLength(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLikeTranslator">
            <summary>
                Translates <see cref="T:DbFunctionsExtensions.Like" /> methods into PostgreSQL LIKE expressions.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLikeTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMathTranslator" /> class.
            </summary>
            <param name="sqlExpressionFactory">The SQL expression factory to use when generating expressions..</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLikeTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLTreeTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLTreeTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLTreeTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlLTreeTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMathTranslator">
            <summary>
                Provides translation services for static <see cref="T:System.Math" /> methods..
            </summary>
            <remarks>
                See:
                - https://www.postgresql.org/docs/current/static/functions-math.html
                - https://www.postgresql.org/docs/current/static/functions-conditional.html#FUNCTIONS-GREATEST-LEAST
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMathTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMathTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMemberTranslatorProvider">
            <summary>
                A composite member translator that dispatches to multiple specialized member translators specific to Npgsql.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMemberTranslatorProvider.JsonPocoTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMemberTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalMemberTranslatorProviderDependencies,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMethodCallTranslatorProvider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMethodCallTranslatorProvider.LTreeTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMethodCallTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalMethodCallTranslatorProviderDependencies,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMiscAggregateMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMiscAggregateMethodTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlMiscAggregateMethodTranslator.Translate(System.Reflection.MethodInfo,Microsoft.EntityFrameworkCore.Query.EnumerableExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlNetworkTranslator">
            <summary>
                Provides translation services for operators and functions of PostgreSQL network typess (cidr, inet, macaddr, macaddr8).
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/functions-net.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlNetworkTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlNetworkTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlNewGuidTranslator">
            <summary>
                Provides translation services for PostgreSQL UUID functions.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/datatype-uuid.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlNewGuidTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,System.Version)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlNewGuidTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlObjectToStringTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlObjectToStringTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlObjectToStringTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlQueryableAggregateMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlQueryableAggregateMethodTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlQueryableAggregateMethodTranslator.Translate(System.Reflection.MethodInfo,Microsoft.EntityFrameworkCore.Query.EnumerableExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRandomTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRandomTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRandomTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRangeTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRangeTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRangeTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRangeTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRegexIsMatchTranslator">
            <summary>
                Translates Regex.IsMatch calls into PostgreSQL regex expressions for database-side processing.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/functions-matching.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRegexIsMatchTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRegexIsMatchTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRowValueTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRowValueTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRowValueTranslator" /> class.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlRowValueTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStatisticsAggregateMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStatisticsAggregateMethodTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStatisticsAggregateMethodTranslator.Translate(System.Reflection.MethodInfo,Microsoft.EntityFrameworkCore.Query.EnumerableExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStringMemberTranslator">
            <summary>
                Translates <see cref="M:string.Length" /> to 'length(text)'.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStringMemberTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStringMemberTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStringMethodTranslator">
            <summary>
                Provides translation services for PostgreSQL string functions.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/functions-string.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStringMethodTranslator.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource,Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlStringMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlTimeSpanMemberTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlTimeSpanMemberTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlTimeSpanMemberTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlTrigramsMethodTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlTrigramsMethodTranslator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.ExpressionTranslators.Internal.NpgsqlTrigramsMethodTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlCompiledQueryCacheKeyGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlCompiledQueryCacheKeyGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlCompiledQueryCacheKeyGenerator.GenerateCacheKey(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlDeleteConvertingExpressionVisitor">
            <summary>
                Converts the relational <see cref="T:Microsoft.EntityFrameworkCore.Query.NonQueryExpression" /> into a PG-specific <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression" />, which
                precisely models a DELETE statement in PostgreSQL. This is done to handle the PG-specific USING syntax for table joining.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlDeleteConvertingExpressionVisitor.Process(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlDeleteConvertingExpressionVisitor.VisitDelete(Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlEvaluatableExpressionFilter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlEvaluatableExpressionFilter.#ctor(Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies,Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlEvaluatableExpressionFilter.IsEvaluatableExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessor.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessor.Optimize(System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessor.ProcessSqlNullability(System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessorFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlParameterBasedSqlProcessorFactory.Create(System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.#ctor(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.CreateSubqueryVisitor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslatePrimitiveCollection(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TransformJsonQueryToTable(Microsoft.EntityFrameworkCore.Query.JsonQueryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.ApplyInferredTypeMappings(System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.ValueTuple{Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase,System.String},Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateAll(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateAny(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateContains(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateCount(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateConcat(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateElementAtOrDefault(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateFirstOrDefault(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.LambdaExpression,System.Type,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateSkip(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TranslateTake(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.IsValidSelectExpressionForExecuteUpdate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase,Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.IsValidSelectExpressionForExecuteDelete(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,Microsoft.EntityFrameworkCore.Query.StructuralTypeShaperExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.IsOrdered(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.IsPostgresArray(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Checks whether the given expression maps to a PostgreSQL array, as opposed to a multirange type.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.GenerateOneBasedIndexExpression(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                PostgreSQL array indexing is 1-based. If the index happens to be a constant, just increment it. Otherwise, append a +1 in the
                SQL.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.TryGetArray(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression@)">
            <summary>
                Extracts the <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression.Array" /> out of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression" />.
                If a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" /> is given, converts its literal values into a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression" />.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.NpgsqlInferredTypeMappingApplier">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.NpgsqlInferredTypeMappingApplier.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory,System.Collections.Generic.IReadOnlyDictionary{System.ValueTuple{Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase,System.String},Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitor.NpgsqlInferredTypeMappingApplier.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitorFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitorFactory.Dependencies">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitorFactory.RelationalDependencies">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryableMethodTranslatingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryCompilationContext">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryCompilationContext.IsBuffering">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryCompilationContextFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryCompilationContextFactory.Create(System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryRootProcessor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryRootProcessor.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryRootProcessor.ShouldConvertToParameterQueryRoot(System.Linq.Expressions.ParameterExpression)">
            <summary>
                Converts a <see cref="T:System.Linq.Expressions.ParameterExpression" /> to a <see cref="T:Microsoft.EntityFrameworkCore.Query.ParameterQueryRootExpression" />, to be later translated to
                PostgreSQL <c>unnest</c> over an array parameter.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator">
            <summary>
                The default query SQL generator for Npgsql.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator._reverseNullOrderingEnabled">
            <summary>
                True if null ordering is reversed; otherwise false.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator._postgresVersion">
            <summary>
                The backend version to target. If null, it means the user hasn't set a compatibility version, and the
                latest should be targeted.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,System.Boolean,System.Version)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GenerateRootCommand(System.Linq.Expressions.Expression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GetOperator(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitOrdering(Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitCrossApply(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossApplyExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitOuterApply(Microsoft.EntityFrameworkCore.Query.SqlExpressions.OuterApplyExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitSqlBinary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitDelete(Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitPgDelete(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgDeleteExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitUpdate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.UpdateExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitNewArray(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitPgBinary(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitArrayIndex(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitSqlUnary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GenerateSetOperationOperand(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitCollate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.TryGenerateWithoutWrappingSelect(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GenerateSetOperation(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitValues(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.GenerateValues(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitArrayAll(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitArrayAny(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitArrayIndex(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression)">
            <summary>
                Produces SQL array index expression (e.g. arr[1]).
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitArraySlice(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression)">
            <summary>
                Produces SQL array slice expression (e.g. arr[1:2]).
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitRegexMatch(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression)">
            <summary>
                Visits the children of a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression" />.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression" />.
            </returns>
            <remarks>
                See: http://www.postgresql.org/docs/current/static/functions-matching.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitRowValue(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitILike(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression)">
            <summary>
                Visits the children of an <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression" />.
            </summary>
            <param name="likeExpression">The expression.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression" />.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitJsonScalar(Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitJsonPathTraversal(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression)">
            <summary>
                Visits the children of an <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression" />.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression" />.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitPgTableValuedFunctionExpression(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgTableValuedFunctionExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitUnknownBinary(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression)">
            <summary>
                Visits the children of a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression" />.
            </summary>
            <param name="unknownBinaryExpression">The expression.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression" />.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.VisitPgFunction(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression)">
            <summary>
                Visits the children of a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression" />.
            </summary>
            <param name="e">The expression.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression" />.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.RequiresParentheses(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGenerator.TryGetOperatorInfo(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Int32@,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGeneratorFactory">
            <summary>
                The default factory for Npgsql-specific query SQL generators.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGeneratorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQuerySqlGeneratorFactory.Create">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessor.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessor.Process(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessorFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessorFactory.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessorFactory.RelationalDependencies">
            <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPostprocessorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessor.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessor.ProcessQueryRoots(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessorFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessorFactory.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessorFactory.RelationalDependencies">
            <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlQueryTranslationPreprocessorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSetOperationTypeResolutionCompensatingExpressionVisitor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSetOperationTypeResolutionCompensatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies,System.Boolean)">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor" /> class.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this class.</param>
            <param name="useRelationalNulls">A bool value indicating whether relational null semantics are in use.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitSqlBinary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression,System.Boolean,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitCustomSqlExpression(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitAny(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitAll(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitArrayIndex(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitArraySlice(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArraySliceExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitPostgresBinary(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitILike(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgILikeExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitNewArray(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitRegexMatch(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitJsonTraversal(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitRowValueExpression(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRowValueExpression,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlNullabilityProcessor.VisitUnknownBinary(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression,System.Boolean,System.Boolean@)">
            <summary>
                Visits a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression" /> and computes its nullability.
            </summary>
            <remarks>
            </remarks>
            <param name="unknownBinaryExpression">A <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnknownBinaryExpression" /> expression to visit.</param>
            <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
            <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
            <returns>An optimized sql expression.</returns>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitorFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlSqlTranslatingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlUnnestPostprocessor">
            <summary>
                Locates instances of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgUnnestExpression" /> in the tree and prunes the WITH ORDINALITY clause from them if the
                ordinality column isn't referenced anywhere.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Internal.NpgsqlUnnestPostprocessor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressionFactoryDependencies)">
            <summary>
                Creates a new instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory" /> class.
            </summary>
            <param name="dependencies">Parameter object containing dependencies for this class.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.RegexMatch(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgRegexMatchExpression" />, corresponding to the PostgreSQL-specific <c>~</c> operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.Any(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyOperatorType)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAnyExpression" />, corresponding to the PostgreSQL-specific <c>= ANY</c> operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.All(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllOperatorType)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgAllExpression" />, corresponding to the PostgreSQL-specific <c>LIKE ALL</c> operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.ArrayIndex(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression" />, corresponding to the PostgreSQL-specific array subscripting operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.ArraySlice(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgArrayIndexExpression" />, corresponding to the PostgreSQL-specific array subscripting operator.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.AtUtc(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression" />, for converting a timestamp to UTC.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.AtTimeZone(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression" />, for converting a timestamp to another time zone.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.ILike(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression" />, for performing a PostgreSQL-specific case-insensitive string match
                (<c>ILIKE</c>).
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.JsonTraversal(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression" />, for traversing inside a JSON document.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.JsonTraversal(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Boolean,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgJsonTraversalExpression" />, for traversing inside a JSON document.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.NewArrayOrConstant(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs either a <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression" />, or, if all provided expressions are constants, a single
                <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression" /> for the entire array.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.NewArray(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgNewArrayExpression" />, for creating a new PostgreSQL array.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.MakeBinary(System.Linq.Expressions.ExpressionType,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.MakePostgresBinary(Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.PgExpressionType,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression" /> with the given arguments.
            </summary>
            <param name="operatorType">An <see cref="T:System.Linq.Expressions.ExpressionType" /> representing SQL unary operator.</param>
            <param name="left">The left operand of binary operation.</param>
            <param name="right">The right operand of binary operation.</param>
            <param name="typeMapping">A type mapping to be assigned to the created expression.</param>
            <returns>A <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression" /> with the given arguments.</returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.Contains(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression" />, for checking whether one value contains another.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.ContainedBy(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression" />, for checking whether one value is contained by another.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.Overlaps(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgBinaryExpression" />, for checking whether one value overlaps with another.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.AggregateFunction(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Query.EnumerableExpression,System.Boolean,System.Collections.Generic.IEnumerable{System.Boolean},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Creates a new <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Query.Expressions.Internal.PgFunctionExpression" /> for a PostgreSQL aggregate function call..
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.ApplyTypeMapping(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Query.NpgsqlSqlExpressionFactory.GenerateOneBasedIndexExpression(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)">
            <summary>
                PostgreSQL array indexing is 1-based. If the index happens to be a constant,
                just increment it. Otherwise, append a +1 in the SQL.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlCodeGenerator">
            <summary>
                The default code generator for Npgsql.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlCodeGenerator" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlCodeGenerator.GenerateUseProvider(System.String,Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory">
            <summary>
                The default database model factory for Npgsql.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory" /> class.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetTables(Npgsql.NpgsqlConnection,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.Func{System.String,System.String,System.String},System.String,System.Collections.Generic.HashSet{System.String},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                Queries the database for defined tables and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetColumns(Npgsql.NpgsqlConnection,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable},System.String,System.String,System.Collections.Generic.HashSet{System.String},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                Queries the database for defined columns and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetIndexes(Npgsql.NpgsqlConnection,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable},System.String,System.String,System.Collections.Generic.List{System.UInt32},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                Queries the database for defined indexes and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetConstraints(Npgsql.NpgsqlConnection,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable},System.String,System.String,System.Collections.Generic.List{System.UInt32}@,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                Queries the database for defined constraints and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetSequences(Npgsql.NpgsqlConnection,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.Func{System.String,System.String},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                Queries the database for defined sequences and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetEnums(Npgsql.NpgsqlConnection,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)">
            <summary>
                Queries the database for defined enums and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GetExtensions(Npgsql.NpgsqlConnection,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)">
            <summary>
                Queries the installed database extensions and registers them with the model.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.AdjustDefaults(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn,System.String)">
            <summary>
                Configures the default value for a column.
            </summary>
            <param name="column">The column to configure.</param>
            <param name="systemTypeName">The type name of the column.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GenerateSchemaFilter(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                Builds a delegate to generate a schema filter fragment.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.GenerateTableFilter(System.Collections.Generic.IReadOnlyList{System.ValueTuple{System.String,System.String}},System.Func{System.String,System.String})">
            <summary>
                Builds a delegate to generate a table filter fragment.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.AdjustFormattedTypeName(System.String)">
            <summary>
                Type names as returned by PostgreSQL's format_type need to be cleaned up a bit
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.ConvertToReferentialAction(System.String)">
            <summary>
                Maps a character to a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.DisplayName(System.String,System.String)">
            <summary>
                Constructs the display name given a schema and table name.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.Parse(System.String)">
            <summary>
                Parses the table name into a tuple of schema name and table name where the schema may be null.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Scaffolding.Internal.NpgsqlDatabaseModelFactory.EscapeLiteral(System.String)">
            <summary>
                Wraps a string literal in single quotes.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection.CreateAdminConnection">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection.CloneWith(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonBitArrayReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonBitArrayReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonBitArrayReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonBitArrayReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.Collections.BitArray)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonMacaddrReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonMacaddrReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonMacaddrReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Json.JsonMacaddrReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.Net.NetworkInformation.PhysicalAddress)">
            <inheritdoc />
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.INpgsqlTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.INpgsqlTypeMapping.NpgsqlDbType">
            <summary>
                The database type used by Npgsql.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping">
            <summary>
                Type mapping for PostgreSQL arrays.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/arrays.html
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping.ElementTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3">
            <summary>
                Type mapping for PostgreSQL arrays.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/arrays.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.NpgsqlDbType">
            <summary>
                The database type used by Npgsql.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.#ctor(System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean},System.Data.ParameterDirection)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlArrayTypeMapping`3.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.JsonBigIntegerReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.JsonBigIntegerReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.JsonBigIntegerReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBigIntegerTypeMapping.JsonBigIntegerReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.Numerics.BigInteger)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping">
            <summary>
                The type mapping for the PostgreSQL bit string type.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-bit.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping.#ctor">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping" /> class.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBitTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoolTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoolTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoolTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoolTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoolTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoolTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlByteArrayTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlByteArrayTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlByteArrayTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlByteArrayTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlByteArrayTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlByteArrayTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping">
            <summary>
                Type mapping for the PostgreSQL 'character' data type. Handles both CLR strings and chars.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-character.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping.NpgsqlDbType">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping.#ctor(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterCharTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping">
            <summary>
                Type mapping for the PostgreSQL 'character' data type. Handles both CLR strings and chars.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-character.html
            </remarks>
            <inheritdoc />
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.CharacterValueComparer">
            <summary>
                Static <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer`1" /> for fixed-width character types.
            </summary>
            <remarks>
                <p>
                    Comparisons of 'character' data as defined in the SQL standard differ dramatically from CLR string
                    comparisons. This value comparer adjusts for this by only comparing strings after truncating trailing
                    whitespace.
                </p>
                <p>
                    Note that if a value converter is used and the CLR type isn't a string at all, we just use the default
                    value converter instead.
                </p>
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.Comparer">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.KeyComparer">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.#ctor(System.String,System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.EqualsWithoutTrailingWhitespace(System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCharacterStringTypeMapping.GetHashCodeWithoutTrailingWhitespace(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping">
            <summary>
                The type mapping for the PostgreSQL cidr type.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-net-types.html#DATATYPE-CIDR
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.JsonCidrReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.JsonCidrReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.JsonCidrReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCidrTypeMapping.JsonCidrReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,NpgsqlTypes.NpgsqlCidr)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.NpgsqlJsonDateOnlyReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.NpgsqlJsonDateOnlyReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.NpgsqlJsonDateOnlyReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateOnlyTypeMapping.NpgsqlJsonDateOnlyReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.DateOnly)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.NpgsqlJsonDateTimeReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.NpgsqlJsonDateTimeReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.NpgsqlJsonDateTimeReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDateTimeDateTypeMapping.NpgsqlJsonDateTimeReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.DateTime)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping.#ctor(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDecimalTypeMapping.SqlLiteralFormatString">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDoubleTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDoubleTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDoubleTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDoubleTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDoubleTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlDoubleTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping._members">
            <summary>
                Translates the CLR member value to the PostgreSQL value label.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.NameTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.#ctor(System.String,System.Type,Npgsql.INpgsqlNameTranslator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,Npgsql.INpgsqlNameTranslator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.CreateValueMapping(System.Type,Npgsql.INpgsqlNameTranslator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.JsonPgEnumReaderWriter`1">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.JsonPgEnumReaderWriter`1.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEnumTypeMapping.JsonPgEnumReaderWriter`1.ToJsonTyped(System.Text.Json.Utf8JsonWriter,`0)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEStringTypeMapping">
            <summary>
                Represents a so-called PostgreSQL E-string literal string, which allows C-style escape sequences.
                This is a "virtual" type mapping which is never returned by <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource" />.
                It is only used internally by some method translators to produce literal strings.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEStringTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEStringTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlEStringTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlFloatTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlFloatTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlFloatTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlFloatTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlFloatTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlFloatTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPointTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLineSegmentTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlBoxTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPathTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPolygonTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlCircleTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlHstoreTypeMapping">
            <summary>
                The type mapping for the PostgreSQL hstore type. Supports both <see cref="T:System.Collections.Generic.Dictionary`2" />
                and <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> over strings.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/hstore.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlHstoreTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlHstoreTypeMapping.#ctor(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlHstoreTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlHstoreTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlHstoreTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping">
            <summary>
                The type mapping for the PostgreSQL inet type.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-net-types.html#DATATYPE-INET
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.#ctor(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonIPAddressReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonIPAddressReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonIPAddressReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonIPAddressReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.Net.IPAddress)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonNpgsqlInetReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonNpgsqlInetReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonNpgsqlInetReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlInetTypeMapping.JsonNpgsqlInetReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,NpgsqlTypes.NpgsqlInet)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.FormatTimeSpanAsInterval(System.TimeSpan)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.ParseIntervalAsTimeSpan(System.ReadOnlySpan{System.Char})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.NpgsqlJsonTimeSpanReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.NpgsqlJsonTimeSpanReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.NpgsqlJsonTimeSpanReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlIntervalTypeMapping.NpgsqlJsonTimeSpanReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.TimeSpan)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping">
            <summary>
                Supports the older Npgsql-specific JSON mapping, allowing mapping json/jsonb to text, to e.g.
                <see cref="T:System.Text.Json.JsonElement" /> (weakly-typed mapping) or to arbitrary POCOs (but without them being modeled).
                For the standard EF JSON support, which relies on owned entity modeling, see <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping" />.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.#ctor(System.String,System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.IsJsonb">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.EscapeSqlLiteral(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.JsonLTreeReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.JsonLTreeReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.JsonLTreeReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlLTreeTypeMapping.JsonLTreeReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,Microsoft.EntityFrameworkCore.LTree)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping">
            <summary>
                The type mapping for the PostgreSQL macaddr8 type.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-net-types.html#DATATYPE-MACADDR8
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddr8TypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping">
            <summary>
                The type mapping for the PostgreSQL macaddr type.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-net-types.html#DATATYPE-MACADDR
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMacaddrTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMoneyTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMoneyTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMoneyTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMoneyTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMoneyTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMoneyTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping">
            <summary>
                The type mapping for PostgreSQL multirange types.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/rangetypes.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.RangeMapping">
            <summary>
                The relational type mapping of the ranges contained in this multirange.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.SubtypeMapping">
            <summary>
                The relational type mapping of the values contained in this multirange.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.NpgsqlDbType">
            <summary>
                The database type used by Npgsql.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.#ctor(System.String,System.Type,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping" /> class.
            </summary>
            <param name="storeType">The database type to map</param>
            <param name="clrType">The CLR type to map.</param>
            <param name="rangeMapping">The type mapping of the ranges contained in this multirange.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.GenerateNonNullSqlLiteral(System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlMultirangeTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping">
            <summary>
                Supports the standard EF JSON support, which relies on owned entity modeling.
                See <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlJsonTypeMapping" /> for the older Npgsql-specific support, which allows mapping json/jsonb to text, to e.g.
                <see cref="T:System.Text.Json.JsonElement" /> (weakly-typed mapping) or to arbitrary POCOs (but without them being modeled).
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.NpgsqlDbType">
            <summary>
                The database type used by Npgsql (<see cref="F:NpgsqlTypes.NpgsqlDbType.Json" /> or <see cref="F:NpgsqlTypes.NpgsqlDbType.Jsonb" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.#ctor(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.GetDataReaderMethod">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.CustomizeDataReaderExpression(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.EscapeSqlLiteral(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlOwnedJsonTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping">
            <summary>
                The type mapping for the PostgreSQL pg_lsn type.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/datatype-pg-lsn.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.JsonLogSequenceNumberReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.JsonLogSequenceNumberReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.JsonLogSequenceNumberReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlPgLsnTypeMapping.JsonLogSequenceNumberReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,NpgsqlTypes.NpgsqlLogSequenceNumber)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping">
            <summary>
                The type mapping for PostgreSQL range types.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/rangetypes.html
            </remarks>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.SubtypeMapping">
            <summary>
                The relational type mapping of the range's subtype.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.PgDataTypeName">
            <summary>
                For user-defined ranges, we have no <see cref="T:NpgsqlTypes.NpgsqlDbType" /> and so the PG type name is set on
                <see cref="P:Npgsql.NpgsqlParameter.DataTypeName" /> instead.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.CreatBuiltInRangeMapping(System.String,System.Type,NpgsqlTypes.NpgsqlDbType,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping" /> class for a built-in range type which has a
                <see cref="T:NpgsqlTypes.NpgsqlDbType" /> defined.
            </summary>
            <param name="rangeStoreType">The database type to map</param>
            <param name="rangeClrType">The CLR type to map.</param>
            <param name="rangeNpgsqlDbType">The <see cref="T:NpgsqlTypes.NpgsqlDbType" /> of the built-in range.</param>
            <param name="subtypeMapping">The type mapping for the range subtype.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.CreatUserDefinedRangeMapping(System.String,System.String,System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping" /> class for a user-defined range type which doesn't have a
                <see cref="T:NpgsqlTypes.NpgsqlDbType" /> defined.
            </summary>
            <param name="quotedRangeStoreType">The database type to map, quoted.</param>
            <param name="unquotedRangeStoreType">The database type to map, unquoted.</param>
            <param name="rangeClrType">The CLR type to map.</param>
            <param name="subtypeMapping">The type mapping for the range subtype.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.Clone(NpgsqlTypes.NpgsqlDbType,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                This method exists only to support the compiled model.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRangeTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegconfigTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegconfigTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegconfigTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegconfigTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegconfigTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegconfigTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegdictionaryTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegdictionaryTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegdictionaryTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegdictionaryTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegdictionaryTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRegdictionaryTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRowValueTypeMapping">
            <summary>
                TODO: Update
                Every node in the SQL tree must have a type mapping, but row values aren't actual values (in the sense that they can be sent as
                parameters, or have a literal representation). So we have a dummy type mapping for that.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRowValueTypeMapping.#ctor(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRowValueTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRowValueTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRowValueTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlRowValueTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping">
            <summary>
                The base class for mapping Npgsql-specific string types. It configures parameters with the
                <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.NpgsqlDbType" /> provider-specific type enum.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.NpgsqlDbType">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.#ctor(System.String,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.Clone(NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This method exists only to support the compiled model.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlStringTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTidTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.NpgsqlJsonTimestampReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.NpgsqlJsonTimestampReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.NpgsqlJsonTimestampReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTypeMapping.NpgsqlJsonTimestampReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.DateTime)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.#ctor(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.DateTime)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeOffsetReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeOffsetReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeOffsetReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.NpgsqlJsonTimestampTzDateTimeOffsetReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.#ctor(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.JsonTimeTzReaderWriter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.JsonTimeTzReaderWriter.Instance">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.JsonTimeTzReaderWriter.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimeTzTypeMapping.JsonTimeTzReaderWriter.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsQueryTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsQueryTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsQueryTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsQueryTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsQueryTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsQueryTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsRankingNormalizationTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsRankingNormalizationTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsRankingNormalizationTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsRankingNormalizationTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsRankingNormalizationTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsVectorTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsVectorTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsVectorTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsVectorTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsVectorTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTsVectorTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping">
            <summary>
                The base class for mapping Npgsql-specific types. It configures parameters with the
                <see cref="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.NpgsqlDbType" /> provider-specific type enum.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.NpgsqlDbType">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.#ctor(System.String,System.Type,NpgsqlTypes.NpgsqlDbType,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping" /> class.
            </summary>
            <param name="storeType">The database type to map.</param>
            <param name="clrType">The CLR type to map.</param>
            <param name="npgsqlDbType">The database type used by Npgsql.</param>
            <param name="jsonValueReaderWriter">Handles reading and writing JSON values for instances of the mapped type.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping" /> class.
            </summary>
            <param name="parameters">The parameters for this mapping.</param>
            <param name="npgsqlDbType">The database type of the range subtype.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.GenerateEmbeddedSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value meant to be embedded in another literal value, e.g. in a range.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.GenerateEmbeddedProviderValueSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value without conversion, meant to be embedded in another literal value,
                e.g. in a range.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTypeMapping.GenerateEmbeddedNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a non-null literal value, meant to be embedded in another literal value, e.g. in a range.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlUIntTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlUIntTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlUIntTypeMapping.#ctor(System.String,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlUIntTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlUIntTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlULongTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlULongTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlULongTypeMapping.#ctor(System.String,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlULongTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,NpgsqlTypes.NpgsqlDbType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlULongTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping.Default">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlVarbitTypeMapping.GenerateCodeLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.RetryDelay">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.RetryTimeout">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Create">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.CreateAsync(System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.HasTables">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Delete">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.CreateTables">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.RetriesOnFailure">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,``1},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategyFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategyFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategyFactory.CreateDefaultStrategy(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.SupportsAmbientTransactions">
            <summary>
                Indicates whether the store connection supports ambient transactions
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies,System.Data.Common.DbDataSource)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.ConnectionString">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.DbConnection">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.DbDataSource">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateAdminConnection">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CurrentAmbientTransaction">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CloneWith(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlSqlGenerationHelper">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlSqlGenerationHelper.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlSqlGenerationHelper.DelimitIdentifier(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlSqlGenerationHelper.RequiresQuoting(System.String)">
            <summary>
                Returns whether the given string can be used as an unquoted identifier in PostgreSQL, without quotes.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTransientExceptionDetector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTransientExceptionDetector.ShouldRetryOn(System.Exception)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.StoreTypeMappings">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.ClrTypeMappings">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.EStringTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.#ctor(Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.INpgsqlSingletonOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.LoadUserDefinedTypeMappings(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Npgsql.NpgsqlDataSource)">
            <summary>
                To be used in case user-defined mappings are added late, after this TypeMappingSource has already been initialized.
                This is basically only for test usage.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.SetupEnumMappings(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Npgsql.NpgsqlDataSource)">
            <summary>
                Gets all global enum mappings from the ADO.NET layer and creates mappings for them
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.FindMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.FindBaseMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.FindCollectionMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo,System.Type,System.Type,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.FindRowValueMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.FindUserRangeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.FindContainerMapping(System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Finds the mapping for a container given its CLR type and its containee's type mapping; this is used when inferring type mappings
                for arrays and ranges/multiranges.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlTypeMappingSource.ParseStoreTypeName(System.String,System.Nullable{System.Boolean}@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3">
            <summary>
                A value converter that can convert between array types; accepts an optional <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" /> for the element, but can be
                used without one to convert e.g. from a list to an array.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3.ElementConverter">
            <summary>
                The value converter for the element type of the array.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3.#ctor">
            <summary>
                Constructs a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)">
            <summary>
                Constructs a new instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3" />.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Storage.ValueConversion.NpgsqlArrayConverter`3.ArrayConversionExpression``3(System.Linq.Expressions.LambdaExpression)">
            <summary>
                Generates a lambda expression that accepts an array, and converts it to another array by looping and applying
                a conversion lambda to each of its elements.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandParameters@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.#ctor(Microsoft.EntityFrameworkCore.Update.NonTrackedModificationCommandParameters@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.ProcessSinglePropertyJsonUpdate(Microsoft.EntityFrameworkCore.Update.ColumnModificationParameters@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch">
            <summary>
                The Npgsql-specific implementation for <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />.
            </summary>
            <remarks>
                The usual ModificationCommandBatch implementation is <see cref="T:Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch" />,
                which selects the number of rows modified via a SQL query.
                PostgreSQL actually has no way of selecting the modified row count.
                SQL defines GET DIAGNOSTICS which should provide this, but in PostgreSQL it's only available
                in PL/pgSQL. See http://www.postgresql.org/docs/9.4/static/unsupported-features-sql-standard.html,
                identifier F121-01.
                Instead, the affected row count can be accessed in the PostgreSQL protocol itself, which seems
                cleaner and more efficient anyway (no additional query).
            </remarks>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies,System.Int32)">
            <summary>
                Constructs an instance of the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch" /> class.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.MaxBatchSize">
            <summary>
                The maximum number of <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommand" /> instances that can be added to a single batch; defaults to 1000.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.AddParameter(Microsoft.EntityFrameworkCore.Update.IColumnModification)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.ConsumeAsync(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader,System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.ThrowAggregateUpdateConcurrencyException(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader,System.Int32,System.Int32,System.Int32)">
            <summary>
                Throws an exception indicating the command affected an unexpected number of rows.
            </summary>
            <param name="reader">The data reader.</param>
            <param name="commandIndex">The ordinal of the command.</param>
            <param name="expectedRowsAffected">The expected number of rows affected.</param>
            <param name="rowsAffected">The actual number of rows affected.</param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.ThrowAggregateUpdateConcurrencyExceptionAsync(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Throws an exception indicating the command affected an unexpected number of rows.
            </summary>
            <param name="reader">The data reader.</param>
            <param name="commandIndex">The ordinal of the command.</param>
            <param name="expectedRowsAffected">The expected number of rows affected.</param>
            <param name="rowsAffected">The actual number of rows affected.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns> A task that represents the asynchronous operation.</returns>
            <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatchFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatchFactory.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatchFactory.Create">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandFactory.CreateModificationCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommandParameters@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandFactory.CreateNonTrackedModificationCommand(Microsoft.EntityFrameworkCore.Update.NonTrackedModificationCommandParameters@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendInsertCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendUpdateColumnValue(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Update.IColumnModification,System.Text.StringBuilder,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendStoredProcedureCall(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendObtainNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.INpgsqlSequenceValueGeneratorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.INpgsqlSequenceValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorState,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.INpgsqlValueGeneratorCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.INpgsqlValueGeneratorCache.GetOrAddSequenceState(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceHiLoValueGenerator`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceHiLoValueGenerator`1.#ctor(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator,Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorState,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceHiLoValueGenerator`1.GetNewLowValue">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceHiLoValueGenerator`1.GetNewLowValueAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceHiLoValueGenerator`1.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorFactory.#ctor(Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorState,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorState">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorState.#ctor(Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlSequenceValueGeneratorState.Sequence">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorCache.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorCacheDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorCache" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorCache.GetOrAddSequenceState(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorSelector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorSelector.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelectorDependencies,Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.INpgsqlSequenceValueGeneratorFactory,Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.INpgsqlRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorSelector.Cache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Npgsql.EntityFrameworkCore.PostgreSQL.ValueGeneration.Internal.NpgsqlValueGeneratorSelector.FindForType(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase,System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId">
            <summary>
                <para>
                    Event IDs for PostgreSQL/Npgsql events that correspond to messages logged to an <see cref="T:Microsoft.Extensions.Logging.ILogger" />
                    and events sent to a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
                <para>
                    These IDs are also used with <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" /> to configure the
                    behavior of warnings.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.ColumnFound">
            <summary>
                <para>
                    A column was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.MissingSchemaWarning">
            <summary>
                <para>
                    The database is missing a schema.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.CollationFound">
            <summary>
                <para>
                    A collation was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.MissingTableWarning">
            <summary>
                <para>
                    The database is missing a table.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.ForeignKeyReferencesMissingPrincipalTableWarning">
            <summary>
                <para>
                    A foreign key references a missing table at the principal end.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.TableFound">
            <summary>
                <para>
                    A table was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.SequenceFound">
            <summary>
                <para>
                    A sequence was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.PrimaryKeyFound">
            <summary>
                <para>
                    A primary key was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.UniqueConstraintFound">
            <summary>
                <para>
                    A unique constraint was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.IndexFound">
            <summary>
                <para>
                    An index was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.ForeignKeyFound">
            <summary>
                <para>
                    A foreign key was found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.ForeignKeyPrincipalColumnMissingWarning">
            <summary>
                <para>
                    A principal column referenced by a foreign key was not found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.EnumColumnSkippedWarning">
            <summary>
                <para>
                    Enum column cannot be scaffolded, define a CLR enum type and add the property manually.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.ExpressionIndexSkippedWarning">
            <summary>
                <para>
                    Expression index cannot be scaffolded, expression indices aren't supported and must be added via raw SQL in migrations.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.UnsupportedColumnIndexSkippedWarning">
            <summary>
                <para>
                    Index '{name}' on table {tableName} cannot be scaffolded because it includes a column that cannot be scaffolded (e.g. enum).
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.NpgsqlEfEventId.UnsupportedColumnConstraintSkippedWarning">
            <summary>
                <para>
                    Constraint '{name}' on table {tableName} cannot be scaffolded because it includes a column that cannot be scaffolded (e.g. enum).
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions">
            <summary>
                Npgsql-specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.HasGeneratedTsVectorColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,NpgsqlTypes.NpgsqlTsVector}},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Configures a property on this entity to be a full-text search tsvector column over other given properties.
            </summary>
            <param name="entityTypeBuilder">The builder for the entity being configured.</param>
            <param name="tsVectorPropertyExpression">
                A lambda expression representing the property to be configured as a tsvector column
                (<c>blog => blog.Url</c>).
            </param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="includeExpression">
                <para>
                    A lambda expression representing the property(s) to be included in the tsvector column
                    (<c>blog => blog.Url</c>).
                </para>
                <para>
                    If multiple properties are to be included then specify an anonymous type including the
                    properties (<c>post => new { post.Title, post.BlogId }</c>).
                </para>
            </param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.HasStorageParameter(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Object)">
            <summary>
                Sets a PostgreSQL storage parameter on the table created for this entity.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/static/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS
            </remarks>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="parameterName"> The name of the storage parameter. </param>
            <param name="parameterValue"> The value of the storage parameter. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.HasStorageParameter``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.Object)">
            <summary>
                Sets a PostgreSQL storage parameter on the table created for this entity.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/static/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS
            </remarks>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="parameterName"> The name of the storage parameter. </param>
            <param name="parameterValue"> The value of the storage parameter. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.HasStorageParameter(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Object,System.Boolean)">
            <summary>
                Sets a PostgreSQL storage parameter on the table created for this entity.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/static/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS
            </remarks>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="parameterName"> The name of the storage parameter. </param>
            <param name="parameterValue"> The value of the storage parameter. </param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.CanSetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Object,System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL storage parameter is set on the table created for this entity.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/static/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS
            </remarks>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="parameterName"> The name of the storage parameter. </param>
            <param name="parameterValue"> The value of the storage parameter. </param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the mapped table can be configured as with the storage parameter.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.IsUnlogged(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)">
            <summary>
                Configures the entity to use an unlogged table when targeting Npgsql.
            </summary>
            <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
            <param name="unlogged">True to configure the entity to use an unlogged table; otherwise, false.</param>
            <returns>
                The same builder instance so that multiple calls can be chained.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/sql-createtable.html#SQL-CREATETABLE-UNLOGGED
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.IsUnlogged``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)">
            <summary>
                Configures the mapped table to use an unlogged table when targeting Npgsql.
            </summary>
            <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
            <param name="unlogged">True to configure the entity to use an unlogged table; otherwise, false.</param>
            <returns>
                The same builder instance so that multiple calls can be chained.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/sql-createtable.html#SQL-CREATETABLE-UNLOGGED
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.IsUnlogged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Boolean,System.Boolean)">
            <summary>
                Configures the mapped table to use an unlogged table when targeting Npgsql.
            </summary>
            <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
            <param name="unlogged">True to configure the entity to use an unlogged table; otherwise, false.</param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance so that multiple calls can be chained.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/sql-createtable.html#SQL-CREATETABLE-UNLOGGED
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.CanSetIsUnlogged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Boolean,System.Boolean)">
            <summary>
                Returns a value indicating whether the mapped table can be configured to use an unlogged table when targeting Npgsql.
            </summary>
            <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
            <param name="unlogged">True to configure the entity to use an unlogged table; otherwise, false.</param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance so that multiple calls can be chained.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/sql-createtable.html#SQL-CREATETABLE-UNLOGGED
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.UseCockroachDbInterleaveInParent(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Type,System.Collections.Generic.List{System.String})">
            <summary>
                Specifies that the CockroachDB-specific "interleave in parent" feature should be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.UseCockroachDbInterleaveInParent``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Type,System.Collections.Generic.List{System.String})">
            <summary>
                Specifies that the CockroachDB-specific "interleave in parent" feature should be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.UseXminAsConcurrencyToken(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)">
            <summary>
                Configures using the auto-updating system column <c>xmin</c> as the optimistic concurrency token.
            </summary>
            <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
            <remarks>
                See <see href="https://www.npgsql.org/efcore/modeling/concurrency.html">Concurrency tokens</see>
                for more information on using optimistic concurrency in PostgreSQL.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeBuilderExtensions.UseXminAsConcurrencyToken``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0})">
            <summary>
                Configures using the auto-updating system column <c>xmin</c> as the optimistic concurrency token.
            </summary>
            <remarks>
                See http://www.npgsql.org/efcore/miscellaneous.html#optimistic-concurrency-and-concurrency-tokens
            </remarks>
            <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions">
            <summary>
                Npgsql specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)">
            <summary>
                The PostgreSQL index method to be used. Null selects the default (currently btree).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="method">The name of the index.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasMethod``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String)">
            <summary>
                The PostgreSQL index method to be used. Null selects the default (currently btree).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="method">The name of the index.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)">
            <summary>
                The PostgreSQL index method to be used. Null selects the default (currently btree).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="method">The name of the index.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)">
            <summary>
                The PostgreSQL index method to be used. Null selects the default (currently btree).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="method">The name of the index.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasOperators(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String[])">
            <summary>
                The PostgreSQL index operators to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="operators">The operators to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasOperators``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String[])">
            <summary>
                The PostgreSQL index operators to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="operators">The operators to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasOperators(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                The PostgreSQL index operators to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="operators">The operators to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetOperators(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index operators can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="operators">The operators to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IsTsVectorExpressionIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)">
            <summary>
                Configures this index to be a full-text tsvector expression index.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IsTsVectorExpressionIndex``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String)">
            <summary>
                Configures this index to be a full-text tsvector expression index.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IsTsVectorExpressionIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String)">
            <summary>
                Configures this index to be a full-text tsvector expression index.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetIsTsVectorExpressionIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the index can be configured as a full-text tsvector expression index.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured as a full-text tsvector expression index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.UseCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String[])">
            <summary>
                The PostgreSQL index collation to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.UseCollation``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String[])">
            <summary>
                The PostgreSQL index collation to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.UseCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                The PostgreSQL index collation to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index collation can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder[])">
            <summary>
                The PostgreSQL index NULL sort ordering to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasNullSortOrder``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder[])">
            <summary>
                The PostgreSQL index NULL sort ordering to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder},System.Boolean)">
            <summary>
                The PostgreSQL index NULL sort ordering to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index null sort ordering can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IncludeProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String[])">
            <summary>
                Adds an INCLUDE clause to the index definition with the specified property names.
                This clause specifies a list of columns which will be included as a non-key part in the index.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="propertyNames">An array of property names to be used in INCLUDE clause.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IncludeProperties``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String[])">
            <summary>
                Adds an INCLUDE clause to the index definition with the specified property names.
                This clause specifies a list of columns which will be included as a non-key part in the index.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="propertyNames">An array of property names to be used in INCLUDE clause.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IncludeProperties``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Adds an INCLUDE clause to the index definition with property names from the specified expression.
                This clause specifies a list of columns which will be included as a non-key part in the index.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="includeExpression">
                <para>
                    A lambda expression representing the property(s) to be included in the INCLUDE clause
                    (<c>blog => blog.Url</c>).
                </para>
                <para>
                    If multiple properties are to be included then specify an anonymous type including the
                    properties (<c>post => new { post.Title, post.BlogId }</c>).
                </para>
            </param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IncludeProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Adds an INCLUDE clause to the index definition with the specified property names.
                This clause specifies a list of columns which will be included as a non-key part in the index.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="propertyNames">An array of property names to be used in INCLUDE clause.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the given include properties can be set.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="propertyNames">An array of property names to be used in 'include' clause.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns> <c>true</c> if the given include properties can be set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IsCreatedConcurrently(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)">
            <summary>
                When this option is used, PostgreSQL will build the index without taking any locks that prevent concurrent inserts,
                updates, or deletes on the table; whereas a standard index build locks out writes (but not reads) on the table until it's done.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="createdConcurrently">A value indicating whether the index is created with the "concurrently" option.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IsCreatedConcurrently``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Boolean)">
            <summary>
                When this option is used, PostgreSQL will build the index without taking any locks that prevent concurrent inserts,
                updates, or deletes on the table; whereas a standard index build locks out writes (but not reads) on the table until it's done.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="createdConcurrently">A value indicating whether the index is created with the "concurrently" option.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.IsCreatedConcurrently(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                When this option is used, PostgreSQL will build the index without taking any locks that prevent concurrent inserts,
                updates, or deletes on the table; whereas a standard index build locks out writes (but not reads) on the table until it's done.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="createdConcurrently">A value indicating whether the index is created with the "concurrently" option.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetIsCreatedConcurrently(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                Returns a value indicating whether concurrent creation for the index can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="createdConcurrently">A value indicating whether the index is created with the "concurrently" option.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.AreNullsDistinct(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)">
            <summary>
                Specifies whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="nullsDistinct">Whether nulls should be considered distinct.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.AreNullsDistinct``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Boolean)">
            <summary>
                Specifies whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="nullsDistinct">Whether nulls should be considered distinct.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.AreNullsDistinct(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Boolean,System.Boolean)">
            <summary>
                Specifies whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="nullsDistinct">Whether nulls should be considered distinct.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetAreNullsDistinct(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Boolean,System.Boolean)">
            <summary>
                Specifies whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="nullsDistinct">Whether nulls should be considered distinct.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasStorageParameter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String,System.Object)">
            <summary>
                Sets a PostgreSQL storage parameter on the index.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="parameterName">The name of the storage parameter.</param>
            <param name="parameterValue">The value of the storage parameter.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasStorageParameter``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String,System.Object)">
            <summary>
                Sets a PostgreSQL storage parameter on the index.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="parameterName">The name of the storage parameter.</param>
            <param name="parameterValue">The value of the storage parameter.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasStorageParameter(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Object,System.Boolean)">
            <summary>
                Sets a PostgreSQL storage parameter on the index.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="parameterName">The name of the storage parameter.</param>
            <param name="parameterValue">The value of the storage parameter.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Object,System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL storage parameter is set on the table created for this entity.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/static/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="parameterName">The name of the storage parameter.</param>
            <param name="parameterValue">The value of the storage parameter.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured as with the storage parameter.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder[])">
            <summary>
                The PostgreSQL index sort ordering to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasSortOrder``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder[])">
            <summary>
                The PostgreSQL index sort ordering to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder},System.Boolean)">
            <summary>
                The PostgreSQL index sort ordering to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <param name="values">The sort order to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index sort ordering can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String[])">
            <summary>
                The PostgreSQL index collation to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasCollation``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String[])">
            <summary>
                The PostgreSQL index collation to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.HasCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                The PostgreSQL index collation to be used.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetHasCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index collation can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort options to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetHasMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)">
            <summary>
                The PostgreSQL index method to be used. Null selects the default (currently btree).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="method">The name of the index.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetHasOperators(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index operators can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="operators">The operators to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetToTsVector(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the index can be configured as a full-text tsvector expression index.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured as a full-text tsvector expression index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetHasSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index sort ordering can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetHasNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder},System.Boolean)">
            <summary>
                Returns a value indicating whether the PostgreSQL index null sort ordering can be set.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="values">The sort order to use for each column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the index.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexBuilderExtensions.CanSetInclude(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the given include properties can be set.
            </summary>
            <param name="indexBuilder">The builder for the index being configured.</param>
            <param name="propertyNames">An array of property names to be used in 'include' clause.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns> <c>true</c> if the given include properties can be set. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions">
            <summary>
                Npgsql-specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseHiLo(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Configures the model to use a sequence-based hi-lo pattern to generate values for properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL.
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <param name="name">The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.Boolean)">
            <summary>
                Configures the database sequence used for the hi-lo pattern to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.CanSetHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the given name and schema can be set for the hi-lo sequence.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given name and schema can be set for the hi-lo sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseSerialColumns(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                <para>
                    Configures the model to use the PostgreSQL SERIAL feature to generate values for properties
                    marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL.
                </para>
                <para>
                    This option should be considered deprecated starting with PostgreSQL 10, consider using <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder)" /> instead.
                </para>
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseIdentityAlwaysColumns(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                <para>
                    Configures the model to use the PostgreSQL IDENTITY feature to generate values for properties
                    marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL. Values for these
                    columns will always be generated as identity, and the application will not be able to override
                    this behavior by providing a value.
                </para>
                <para>Available only starting PostgreSQL 10.</para>
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                <para>
                    Configures the model to use the PostgreSQL IDENTITY feature to generate values for properties
                    marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL. Values for these
                    columns will be generated as identity by default, but the application will be able to override
                    this behavior by providing a value.
                </para>
                <para>
                    This is the default behavior when targeting PostgreSQL. Available only starting PostgreSQL 10.
                </para>
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                <para>
                    Configures the model to use the PostgreSQL IDENTITY feature to generate values for properties
                    marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL. Values for these
                    columns will be generated as identity by default, but the application will be able to override
                    this behavior by providing a value.
                </para>
                <para>
                    This is the default behavior when targeting PostgreSQL. Available only starting PostgreSQL 10.
                </para>
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Configures the value generation strategy for the key property, when targeting PostgreSQL.
            </summary>
            <param name="modelBuilder">The builder for the property being configured.</param>
            <param name="valueGenerationStrategy">The value generation strategy.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>
                The same builder instance if the configuration was applied, <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.CanSetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the default value generation strategy.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="valueGenerationStrategy"> The value generation strategy. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the default value generation strategy. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseKeySequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Configures the model to use a sequence per hierarchy to generate values for key properties marked as
                <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting PostgreSQL.
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <param name="nameSuffix">The name that will suffix the table name for each sequence created automatically.</param>
            <param name="schema">The schema of the sequence.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresExtension(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.String)">
            <summary>
                Registers a PostgreSQL extension in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to define the extension.</param>
            <param name="schema">The schema in which to create the extension.</param>
            <param name="name">The name of the extension to create.</param>
            <param name="version">The version of the extension.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/external-extensions.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="modelBuilder" />
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresExtension(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)">
            <summary>
                Registers a PostgreSQL extension in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to define the extension.</param>
            <param name="name">The name of the extension to create.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/external-extensions.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="modelBuilder" />
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.String,System.Boolean)">
            <summary>
                Registers a PostgreSQL extension in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to define the extension.</param>
            <param name="schema">The schema in which to create the extension.</param>
            <param name="name">The name of the extension to create.</param>
            <param name="version">The version of the extension.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/external-extensions.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="modelBuilder" />
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)">
            <summary>
                Registers a PostgreSQL extension in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to define the extension.</param>
            <param name="name">The name of the extension to create.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/external-extensions.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="modelBuilder" />
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.CanSetPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the given PostgreSQL extension can be registered in the model.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and SQL Azure databases with EF Core</see>
                for more information and examples.
            </remarks>
            <param name="modelBuilder">The model builder.</param>
            <param name="schema">The schema in which to create the extension.</param>
            <param name="name">The name of the extension to create.</param>
            <param name="version">The version of the extension.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><see langword="true" /> if the given value can be set as the default increment for SQL Server IDENTITY.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresEnum(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.String[])">
            <summary>
                Registers a user-defined enum type in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to create the enum type.</param>
            <param name="schema">The schema in which to create the enum type.</param>
            <param name="name">The name of the enum type to create.</param>
            <param name="labels">The enum label values.</param>
            <returns>
                The updated <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-enum.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">builder</exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresEnum(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String[])">
            <summary>
                Registers a user-defined enum type in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to create the enum type.</param>
            <param name="name">The name of the enum type to create.</param>
            <param name="labels">The enum label values.</param>
            <returns>
                The updated <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-enum.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">builder</exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresEnum``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,Npgsql.INpgsqlNameTranslator)">
            <summary>
                Registers a user-defined enum type in the model.
            </summary>
            <param name="modelBuilder">The model builder in which to create the enum type.</param>
            <param name="schema">The schema in which to create the enum type.</param>
            <param name="name">The name of the enum type to create.</param>
            <param name="nameTranslator">
                The translator for name and label inference.
                Defaults to <see cref="T:Npgsql.NameTranslation.NpgsqlSnakeCaseNameTranslator" />.
            </param>
            <typeparam name="TEnum"></typeparam>
            <returns>
                The updated <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </returns>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/datatype-enum.html
            </remarks>
            <exception cref="T:System.ArgumentNullException">builder</exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseDatabaseTemplate(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)">
            <summary>
                Specifies the PostgreSQL database to use as a template when creating a new database for this model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresRange(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Registers a user-defined range type in the model.
            </summary>
            <param name="modelBuilder">The model builder on which to create the range type.</param>
            <param name="schema">The schema in which to create the range type.</param>
            <param name="name">The name of the range type to be created.</param>
            <param name="subtype">The subtype (or element type) of the range</param>
            <param name="canonicalFunction">
                An optional PostgreSQL function which converts range values to a canonical form.
            </param>
            <param name="subtypeOpClass">Used to specify a non-default operator class.</param>
            <param name="collation">Used to specify a non-default collation in the range's order.</param>
            <param name="subtypeDiff">
                An optional PostgreSQL function taking two values of the subtype type as argument, and return a double
                precision value representing the difference between the two given values.
            </param>
            <remarks>
                See https://www.postgresql.org/docs/current/static/rangetypes.html,
                https://www.postgresql.org/docs/current/static/sql-createtype.html,
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasPostgresRange(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Registers a user-defined range type in the model.
            </summary>
            <param name="modelBuilder">The model builder on which to create the range type.</param>
            <param name="name">The name of the range type to be created.</param>
            <param name="subtype">The subtype (or element type) of the range</param>
            <remarks>
                See https://www.postgresql.org/docs/current/static/rangetypes.html,
                https://www.postgresql.org/docs/current/static/sql-createtype.html,
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseTablespace(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)">
            <summary>
                Specifies the PostgreSQL tablespace in which to place the new database created for this model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasCollation(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
                Creates a new collation in the database.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-createcollation.html.
            </remarks>
            <param name="modelBuilder">The model builder on which to create the collation.</param>
            <param name="name">The name of the collation to create.</param>
            <param name="locale">Sets LC_COLLATE and LC_CTYPE at once.</param>
            <param name="provider">
                Specifies the provider to use for locale services associated with this collation.
                The available choices depend on the operating system and build options.
            </param>
            <param name="deterministic">
                Specifies whether the collation should use deterministic comparisons.
                Defaults to <c>true</c>.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasCollation(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
                Creates a new collation in the database.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-createcollation.html.
            </remarks>
            <param name="modelBuilder">The model builder on which to create the collation.</param>
            <param name="schema">The schema in which to create the collation, or <c>null</c> for the default schema.</param>
            <param name="name">The name of the collation to create.</param>
            <param name="locale">Sets LC_COLLATE and LC_CTYPE at once.</param>
            <param name="provider">
                Specifies the provider to use for locale services associated with this collation.
                The available choices depend on the operating system and build options.
            </param>
            <param name="deterministic">
                Specifies whether the collation should use deterministic comparisons.
                Defaults to <c>true</c>.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.HasCollation(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
                Creates a new collation in the database.
            </summary>
            <remarks>
                See https://www.postgresql.org/docs/current/sql-createcollation.html.
            </remarks>
            <param name="modelBuilder">The model builder on which to create the collation.</param>
            <param name="schema">The schema in which to create the collation, or <c>null</c> for the default schema.</param>
            <param name="name">The name of the collation to create.</param>
            <param name="lcCollate">Use the specified operating system locale for the LC_COLLATE locale category.</param>
            <param name="lcCtype">Use the specified operating system locale for the LC_CTYPE locale category.</param>
            <param name="provider">
                Specifies the provider to use for locale services associated with this collation.
                The available choices depend on the operating system and build options.
            </param>
            <param name="deterministic">
                Specifies whether the collation should use deterministic comparisons.
                Defaults to <c>true</c>.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseDefaultColumnCollation(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)">
            <summary>
                Configures the default collation for all columns in the database. This causes EF Core to specify an explicit
                collation when creating each column (unless overridden).
            </summary>
            <remarks>
                <p>
                    An alternative is to specify a database collation via
                    <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.UseCollation(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />,
                    which will specify the query on <c>CREATE DATABASE</c> instead of for each and every column. However,
                    PostgreSQL support is limited for the collations that can be specific via this mechanism; ICU collations -
                    which include all case-insensitive collations - are currently unsupported.
                </p>
                <p>
                    For more information, see https://www.postgresql.org/docs/current/collation.html.
                </p>
            </remarks>
            <param name="modelBuilder">The model builder.</param>
            <param name="collation">The collation.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.UseDefaultColumnCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)">
            <summary>
                Configures the default collation for all columns in the database. This causes EF Core to specify an explicit
                collation when creating each column (unless overridden).
            </summary>
            <remarks>
                <p>
                    An alternative is to specify a database collation via
                    <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.UseCollation(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />,
                    which will specify the query on <c>CREATE DATABASE</c> instead of for each and every column. However,
                    PostgreSQL support is limited for the collations that can be specific via this mechanism; ICU collations -
                    which include all case-insensitive collations - are currently unsupported.
                </p>
                <p>
                    For more information, see https://www.postgresql.org/docs/current/collation.html.
                </p>
            </remarks>
            <param name="modelBuilder">The model builder.</param>
            <param name="collation">The collation.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelBuilderExtensions.CanSetDefaultColumnCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the default column collation.
            </summary>
            <param name="modelBuilder">The model builder.</param>
            <param name="collation">The collation.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the given value can be set as the collation.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions">
            <summary>
                Npgsql specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)">
            <summary>
                Configures the property to use a sequence-based hi-lo pattern to generate values for new entities,
                when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <param name="name"> The comment of the sequence.</param>
            <param name="schema"> The schema of the sequence.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseHiLo``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String,System.String)">
            <summary>
                Configures the property to use a sequence-based hi-lo pattern to generate values for new entities,
                when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <param name="name"> The comment of the sequence.</param>
            <param name="schema"> The schema of the sequence.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.String,System.Boolean)">
            <summary>
                Configures the database sequence used for the hi-lo pattern to generate values for the key property,
                when targeting SQL Server.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <param name="name"> The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.CanSetHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the given name and schema can be set for the hi-lo sequence.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <param name="name"> The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the given name and schema can be set for the hi-lo sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)">
            <summary>
                Configures the key property to use a sequence-based key value generation pattern to generate values for new entities,
                when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="name">The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseSequence``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String,System.String)">
            <summary>
                Configures the key property to use a sequence-based key value generation pattern to generate values for new entities,
                when targeting SQL Server. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-Npgsql">Accessing SQL Server and SQL Azure databases with EF Core</see>
                for more information and examples.
            </remarks>
            <typeparam name="TProperty">The type of the property being configured.</typeparam>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="name">The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.String,System.Boolean)">
            <summary>
                Configures the database sequence used for the key value generation pattern to generate values for the key property,
                when targeting PostgreSQL.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="name">The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.CanSetSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.String,System.Boolean)">
            <summary>
                Returns a value indicating whether the given name and schema can be set for the key value generation sequence.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="name">The name of the sequence.</param>
            <param name="schema">The schema of the sequence.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><see langword="true" /> if the given name and schema can be set for the key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseSerialColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)">
            <summary>
                Configures the property to use the PostgreSQL SERIAL feature to generate values for new entities,
                when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <para>
                This option should be considered deprecated starting with PostgreSQL 10, consider using <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" /> instead.
            </para>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseSerialColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})">
            <summary>
                Configures the property to use the PostgreSQL SERIAL feature to generate values for new entities,
                when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <para>
                This option should be considered deprecated starting with PostgreSQL 10, consider using <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" /> instead.
            </para>
            <typeparam name="TProperty"> The type of the property being configured.</typeparam>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)">
            <summary>
                <para>
                    Configures the property to use the PostgreSQL IDENTITY feature to generate values for new entities,
                    when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
                    Values for this property will always be generated as identity, and the application will not be able
                    to override this behavior by providing a value.
                </para>
                <para>Available only starting PostgreSQL 10.</para>
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})">
            <summary>
                <para>
                    Configures the property to use the PostgreSQL IDENTITY feature to generate values for new entities,
                    when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
                    Values for this property will always be generated as identity, and the application will not be able
                    to override this behavior by providing a value.
                </para>
                <para>Available only starting PostgreSQL 10.</para>
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)">
            <summary>
                <para>
                    Configures the property to use the PostgreSQL IDENTITY feature to generate values for new entities,
                    when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
                    Values for this property will be generated as identity by default, but the application will be able
                    to override this behavior by providing a value.
                </para>
                <para>
                    This is the default behavior when targeting PostgreSQL. Available only starting PostgreSQL 10.
                </para>
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})">
            <summary>
                <para>
                    Configures the property to use the PostgreSQL IDENTITY feature to generate values for new entities,
                    when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
                    Values for this property will be generated as identity by default, but the application will be able
                    to override this behavior by providing a value.
                </para>
                <para>
                    This is the default behavior when targeting PostgreSQL. Available only starting PostgreSQL 10.
                </para>
            </summary>
            <typeparam name="TProperty"> The type of the property being configured.</typeparam>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)">
            <summary>
                <para>
                    Configures the property to use the PostgreSQL IDENTITY feature to generate values for new entities,
                    when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
                    Values for this property will be generated as identity by default, but the application will be able
                    to override this behavior by providing a value.
                </para>
                <para>
                    This internally calls <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" />.
                    This is the default behavior when targeting PostgreSQL. Available only starting PostgreSQL 10.
                </para>
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})">
            <summary>
                <para>
                    Configures the property to use the PostgreSQL IDENTITY feature to generate values for new entities,
                    when targeting PostgreSQL. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
                    Values for this property will be generated as identity by default, but the application will be able
                    to override this behavior by providing a value.
                </para>
                <para>
                    This internally calls <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" />.
                    This is the default behavior when targeting PostgreSQL. Available only starting PostgreSQL 10.
                </para>
            </summary>
            <typeparam name="TProperty"> The type of the property being configured.</typeparam>
            <param name="propertyBuilder"> The builder for the property being configured.</param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Configures the value generation strategy for the key property, when targeting PostgreSQL.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="valueGenerationStrategy">The value generation strategy.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>
                The same builder instance if the configuration was applied, <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.CanSetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the value generation strategy.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="valueGenerationStrategy">The value generation strategy.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the given value can be set as the default value generation strategy.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasIdentityOptions(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
                Sets the sequence options on an identity column. The column must be set as identity via
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" /> or <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" />.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="startValue">
                The starting value for the sequence.
                The default starting value is <paramref name="minValue" /> for ascending sequences and <paramref name="maxValue" /> for
                descending     ones.
            </param>
            <param name="incrementBy">The amount to increment between values. Defaults to 1.</param>
            <param name="minValue">
                The minimum value for the sequence.
                The default for an ascending sequence is 1. The default for a descending sequence is the minimum value of the data type.
            </param>
            <param name="maxValue">
                The maximum value for the sequence.
                The default for an ascending sequence is the maximum value of the data type. The default for a descending sequence is -1.
            </param>
            <param name="cyclic">
                Sets whether or not the sequence will start again from the beginning once the maximum value is reached.
                Defaults to false.
            </param>
            <param name="numbersToCache">
                Specifies how many sequence numbers are to be pre0allocated and stored in memory for faster access.
                The minimum value is 1 (only one value can be generated at a time, i.e., no cache), and this is also the default.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasIdentityOptions``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
                Sets the sequence options on an identity column. The column must be set as identity via
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" /> or <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" />.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="startValue">
                The starting value for the sequence.
                The default starting value is <paramref name="minValue" /> for ascending sequences and <paramref name="maxValue" /> for descending
                ones.
            </param>
            <param name="incrementBy">The amount to increment between values. Defaults to 1.</param>
            <param name="minValue">
                The minimum value for the sequence.
                The default for an ascending sequence is 1. The default for a descending sequence is the minimum value of the data type.
            </param>
            <param name="maxValue">
                The maximum value for the sequence.
                The default for an ascending sequence is the maximum value of the data type. The default for a descending sequence is -1.
            </param>
            <param name="cyclic">
                Sets whether or not the sequence will start again from the beginning once the maximum value is reached.
                Defaults to false.
            </param>
            <param name="numbersToCache">
                Specifies how many sequence numbers are to be pre-allocated and stored in memory for faster access.
                The minimum value is 1 (only one value can be generated at a time, i.e., no cache), and this is also the default.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasIdentityOptions(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
                Sets the sequence options on an identity column. The column must be set as identity via
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" /> or <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)" />.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="startValue">
                The starting value for the sequence.
                The default starting value is <paramref name="minValue" /> for ascending sequences and <paramref name="maxValue" /> for descending
                ones.
            </param>
            <param name="incrementBy">The amount to increment between values. Defaults to 1.</param>
            <param name="minValue">
                The minimum value for the sequence.
                The default for an ascending sequence is 1. The default for a descending sequence is the minimum value of the data type.
            </param>
            <param name="maxValue">
                The maximum value for the sequence.
                The default for an ascending sequence is the maximum value of the data type. The default for a descending sequence is -1.
            </param>
            <param name="cyclic">
                Sets whether or not the sequence will start again from the beginning once the maximum value is reached.
                Defaults to false.
            </param>
            <param name="numbersToCache">
                Specifies how many sequence numbers are to be pre-allocated and stored in memory for faster access.
                The minimum value is 1 (only one value can be generated at a time, i.e., no cache), and this is also the default.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.CanSetIdentityOptions(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
                Returns a value indicating whether the sequence options can be set on the identity column.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="startValue">
                The starting value for the sequence. The default starting value is <paramref name="minValue" /> for ascending sequences and
                <paramref name="maxValue" /> for descending ones.
            </param>
            <param name="incrementBy">The amount to increment between values. Defaults to 1.</param>
            <param name="minValue">
                The minimum value for the sequence.
                The default for an ascending sequence is 1. The default for a descending sequence is the minimum value of the data type.
            </param>
            <param name="maxValue">
                The maximum value for the sequence.
                The default for an ascending sequence is the maximum value of the data type. The default for a descending sequence is -1.
            </param>
            <param name="cyclic">
                Sets whether or not the sequence will start again from the beginning once the maximum value is reached.
                Defaults to false.
            </param>
            <param name="numbersToCache">
                Specifies how many sequence numbers are to be pre-allocated and stored in memory for faster access.
                The minimum value is 1 (only one value can be generated at a time, i.e., no cache), and this is also the default.
            </param>
            <returns>The same builder instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasPostgresArrayConversion``2(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0[]},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``0}})">
            <summary>
                Configures a PostgreSQL array conversion.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasPostgresArrayConversion``2(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{System.Collections.Generic.List{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``0}})">
            <summary>
                Configures a PostgreSQL array conversion.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasPostgresArrayConversion``2(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0[]},Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)">
            <summary>
                Configures a PostgreSQL array conversion.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.HasPostgresArrayConversion``2(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{System.Collections.Generic.List{``0}},Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)">
            <summary>
                Configures a PostgreSQL array conversion.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.IsGeneratedTsVectorColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String[])">
            <summary>
                Configures the property to be a full-text search tsvector column over the given properties.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="includedPropertyNames">An array of property names to be included in the tsvector.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.IsGeneratedTsVectorColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{NpgsqlTypes.NpgsqlTsVector},System.String,System.String[])">
            <summary>
                Configures the property to be a full-text search tsvector column over the given properties.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="includedPropertyNames">An array of property names to be included in the tsvector.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.IsGeneratedTsVectorColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Configures the property to be a full-text search tsvector column over the given properties.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="includedPropertyNames">An array of property names to be included in the tsvector.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.CanSetIsGeneratedTsVectorColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Returns a value indicating whether the property can be configured as a full-text search tsvector column.
            </summary>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="includedPropertyNames">An array of property names to be included in the tsvector.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the property can be configured as a full-text search tsvector column.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Sets the compression method for the column.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="compressionMethod">The compression method.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseCompressionMethod``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Sets the compression method for the column.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="compressionMethod">The compression method.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.Boolean)">
            <summary>
                Sets the compression method for the column.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="compressionMethod">The compression method.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>A builder to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.CanSetCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,System.Boolean)">
            <summary>
                Whether the compression method for the column can be set.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
            <param name="propertyBuilder">The builder for the property being configured.</param>
            <param name="compressionMethod">The compression method.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns><c>true</c> if the index can be configured with the method</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions">
            <summary>
                Provides extension methods supporting aggregate function translation for PostgreSQL.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.ArrayAgg``1(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Collects all the input values, including nulls, into a PostgreSQL array.
                Corresponds to the PostgreSQL <c>array_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="input">The input values to be aggregated into an array.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.JsonAgg``1(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Collects all the input values, including nulls, into a json array. Values are converted to JSON as per <c>to_json</c> or
                <c>to_jsonb</c>. Corresponds to the PostgreSQL <c>json_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="input">The input values to be aggregated into a JSON array.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.JsonbAgg``1(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Collects all the input values, including nulls, into a jsonb array. Values are converted to JSON as per <c>to_json</c> or
                <c>to_jsonb</c>. Corresponds to the PostgreSQL <c>jsonb_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="input">The input values to be aggregated into a JSON array.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.Sum(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.TimeSpan})">
            <summary>
                Computes the sum of the non-null input intervals. Corresponds to the PostgreSQL <c>sum</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="input">The input values to be summed.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.Average(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.TimeSpan})">
            <summary>
                Computes the average (arithmetic mean) of the non-null input intervals. Corresponds to the PostgreSQL <c>avg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="input">The input values to be computed into an average.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.JsonObjectAgg``2(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}})">
            <summary>
                Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per
                <c>to_json</c>. Values can be <see langword="null" />, but not keys.
                Corresponds to the PostgreSQL <c>json_object_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="keyValuePairs">An enumerable of key-value pairs to be aggregated into a JSON object.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.JsonObjectAgg``3(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}})">
            <summary>
                Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per
                <c>to_json</c>. Values can be <see langword="null" />, but not keys.
                Corresponds to the PostgreSQL <c>json_object_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="keyValuePairs">An enumerable of key-value pairs to be aggregated into a JSON object.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.JsonbObjectAgg``2(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}})">
            <summary>
                Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per
                <c>to_jsonb</c>. Values can be <see langword="null" />, but not keys.
                Corresponds to the PostgreSQL <c>jsonb_object_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="keyValuePairs">An enumerable of key-value pairs to be aggregated into a JSON object.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.JsonbObjectAgg``3(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}})">
            <summary>
                Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per
                <c>to_jsonb</c>. Values can be <see langword="null" />, but not keys.
                Corresponds to the PostgreSQL <c>jsonb_object_agg</c> aggregate function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="keyValuePairs">An enumerable of key-value pairs to be aggregated into a JSON object.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int16})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
                Returns the sample standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int16})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.StandardDeviationPopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
                Returns the population standard deviation of all values in the specified expression.
                Corresponds to the PostgreSQL <c>stddev_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population standard deviation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int16})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
                Returns the sample variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed sample variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int16})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.VariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
                Returns the population variance of all values in the specified expression.
                Corresponds to the PostgreSQL <c>var_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
            <returns>The computed population variance.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.Correlation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the correlation coefficient. Corresponds to the PostgreSQL <c>corr</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.CovariancePopulation(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the population covariance. Corresponds to the PostgreSQL <c>covar_pop</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.CovarianceSample(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the sample covariance. Corresponds to the PostgreSQL <c>covar_samp</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrAverageX(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the average of the independent variable, <c>sum(X)/N</c>.
                Corresponds to the PostgreSQL <c>regr_avgx</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrAverageY(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the average of the dependent variable, <c>sum(Y)/N</c>.
                Corresponds to the PostgreSQL <c>regr_avgy</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrCount(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the number of rows in which both inputs are non-null.
                Corresponds to the PostgreSQL <c>regr_count</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrIntercept(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the y-intercept of the least-squares-fit linear equation determined by the (X, Y) pairs.
                Corresponds to the PostgreSQL <c>regr_intercept</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrR2(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the square of the correlation coefficient.
                Corresponds to the PostgreSQL <c>regr_r2</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrSlope(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the slope of the least-squares-fit linear equation determined by the (X, Y) pairs.
                Corresponds to the PostgreSQL <c>regr_slope</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrSXX(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the “sum of squares” of the independent variable, <c>sum(X^2) - sum(X)^2/N</c>.
                Corresponds to the PostgreSQL <c>regr_sxx</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAggregateDbFunctionsExtensions.RegrSXY(Microsoft.EntityFrameworkCore.DbFunctions,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})">
            <summary>
                Computes the “sum of products” of independent times dependent variables, <c>sum(X*Y) - sum(X) * sum(Y)/N</c>.
                Corresponds to the PostgreSQL <c>regr_sxy</c> function.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions">
            <summary>
                Provides Npgsql-specific extension methods on <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.ILike(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                An implementation of the PostgreSQL ILIKE operation, which is an insensitive LIKE.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="matchExpression">The string that is to be matched.</param>
            <param name="pattern">The pattern which may involve wildcards %,_,[,],^.</param>
            <returns><see langword="true" /> if there is a match.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.ILike(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String,System.String)">
            <summary>
                An implementation of the PostgreSQL ILIKE operation, which is an insensitive LIKE.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="matchExpression">The string that is to be matched.</param>
            <param name="pattern">The pattern which may involve wildcards %,_,[,],^.</param>
            <param name="escapeCharacter">
                The escape character (as a single character string) to use in front of %,_,[,],^
                if they are not used as wildcards.
            </param>
            <returns><see langword="true" /> if there is a match.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.StringToArray(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Splits <paramref name="value" /> at occurrences of delimiter and forms the resulting fields into a text array.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="value">The string to be split.</param>
            <param name="delimiter">
                If <c>null</c>, each character in the string will become a separate element in the array.
                If an empty string, the string is treated as a single field.
            </param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.StringToArray(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String,System.String)">
            <summary>
                Splits <paramref name="value" /> at occurrences of delimiter and forms the resulting fields into a text array.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="value">The string to be split.</param>
            <param name="delimiter">
                If <c>null</c>, each character in the string will become a separate element in the array.
                If an empty string, the string is treated as a single field.
            </param>
            <param name="nullString">Fields matching this value string are replaced by <c>null</c>.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.Reverse(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Reverses a string by calling PostgreSQL <c>reverse()</c>.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="value">The string that is to be reversed.</param>
            <returns>The reversed string.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.GreaterThan(Microsoft.EntityFrameworkCore.DbFunctions,System.Runtime.CompilerServices.ITuple,System.Runtime.CompilerServices.ITuple)">
            <summary>
                Returns whether the row value represented by <paramref name="a" /> is greater than the row value represented by
                <paramref name="b" />.
            </summary>
            <remarks>
                For more information on row value comparisons, see
                <see href="https://www.postgresql.org/docs/current/functions-comparisons.html#ROW-WISE-COMPARISON">
                    the PostgreSQL documentation.
                </see>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.LessThan(Microsoft.EntityFrameworkCore.DbFunctions,System.Runtime.CompilerServices.ITuple,System.Runtime.CompilerServices.ITuple)">
            <summary>
                Returns whether the row value represented by <paramref name="a" /> is less than the row value represented by <paramref name="b" />.
            </summary>
            <remarks>
                For more information on row value comparisons, see
                <see href="https://www.postgresql.org/docs/current/functions-comparisons.html#ROW-WISE-COMPARISON">
                    the PostgreSQL documentation.
                </see>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.GreaterThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.Runtime.CompilerServices.ITuple,System.Runtime.CompilerServices.ITuple)">
            <summary>
                Returns whether the row value represented by <paramref name="a" /> is greater than or equal to the row value represented by
                <paramref name="b" />.
            </summary>
            <remarks>
                For more information on row value comparisons, see
                <see href="https://www.postgresql.org/docs/current/functions-comparisons.html#ROW-WISE-COMPARISON">
                    the PostgreSQL documentation.
                </see>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.LessThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.Runtime.CompilerServices.ITuple,System.Runtime.CompilerServices.ITuple)">
            <summary>
                Returns whether the row value represented by <paramref name="a" /> is less than or equal to the row value represented by
                <paramref name="b" />.
            </summary>
            <remarks>
                For more information on row value comparisons, see
                <see href="https://www.postgresql.org/docs/current/functions-comparisons.html#ROW-WISE-COMPARISON">
                    the PostgreSQL documentation.
                </see>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.Distance(Microsoft.EntityFrameworkCore.DbFunctions,System.DateOnly,System.DateOnly)">
            <summary>
                Returns the distance between two dates as a number of days, particularly suitable for sorting where the appropriate index is
                defined.
            </summary>
            <remarks>
                This requires the <c>btree_gist</c> built-in PostgreSQL extension, see
                <see href="https://www.postgresql.org/docs/current/btree-gist.html" />.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbFunctionsExtensions.Distance(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Returns the distance between two timestamps as a PostgreSQL <c>interval</c>, particularly suitable for sorting where the appropriate
                index is defined.
            </summary>
            <remarks>
                This requires the <c>btree_gist</c> built-in PostgreSQL extension, see
                <see href="https://www.postgresql.org/docs/current/btree-gist.html" />.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions">
            <summary>
                Provides CLR methods that get translated to database functions when used in LINQ to Entities queries.
                The methods on this class are accessed via <see cref="P:Microsoft.EntityFrameworkCore.EF.Functions" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.ArrayToTsVector(Microsoft.EntityFrameworkCore.DbFunctions,System.String[])">
            <summary>
                Convert <paramref name="lexemes" /> to a tsvector.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/functions-textsearch.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.ToTsVector(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Reduce <paramref name="document" /> to tsvector.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-DOCUMENTS
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.ToTsVector(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Reduce <paramref name="document" /> to tsvector using the text search configuration specified
                by <paramref name="config" />.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-DOCUMENTS
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.PlainToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Produce tsquery from <paramref name="query" /> ignoring punctuation.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.PlainToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Produce tsquery from <paramref name="query" /> ignoring punctuation and using the text search
                configuration specified by <paramref name="config" />.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.PhraseToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Produce tsquery that searches for a phrase from <paramref name="query" /> ignoring punctuation.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.PhraseToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Produce tsquery that searches for a phrase from <paramref name="query" /> ignoring punctuation
                and using the text search configuration specified by <paramref name="config" />.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.ToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Normalize words in <paramref name="query" /> and convert to tsquery. If your input
                contains punctuation that should not be treated as text search operators, use
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.PlainToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String)" /> instead.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.ToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Normalize words in <paramref name="query" /> and convert to tsquery using the text search
                configuration specified by <paramref name="config" />. If your input contains punctuation
                that should not be treated as text search operators, use
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.PlainToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)" /> instead.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.WebSearchToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Convert <paramref name="query" /> tsquery using the simplified websearch syntax.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.WebSearchToTsQuery(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Convert <paramref name="query" /> tsquery using the simplified websearch syntax and the text
                search configuration specified by <paramref name="config" />.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.Unaccent(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns a new string that removes diacritics from characters in the given <paramref name="text" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="regDictionary">A specific text search dictionary.</param>
            <param name="text">The text to remove the diacritics.</param>
            <remarks>
                <para>The method call is translated to <c>unaccent(regdictionary, text)</c>.</para>
                See https://www.postgresql.org/docs/current/unaccent.html.
            </remarks>
            <returns>A string without diacritics.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchDbFunctionsExtensions.Unaccent(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Returns a new string that removes diacritics from characters in the given <paramref name="text" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="text">The text to remove the diacritics.</param>
            <remarks>
                <para>The method call is translated to <c>unaccent(text)</c>.</para>
                See https://www.postgresql.org/docs/current/unaccent.html.
            </remarks>
            <returns>A string without diacritics.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions">
            <summary>
                Provides EF Core extension methods for Npgsql full-text search types.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.And(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                AND tsquerys together. Generates the "&amp;&amp;" operator.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Or(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                OR tsquerys together. Generates the "||" operator.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.ToNegative(NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Negate a tsquery. Generates the "!!" operator.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Contains(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Returns whether <paramref name="query1" /> contains <paramref name="query2" />.
                Generates the "@&gt;" operator.
                http://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.IsContainedIn(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Returns whether <paramref name="query1" /> is contained within <paramref name="query2" />.
                Generates the "&lt;@" operator.
                http://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.GetNodeCount(NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Returns the number of lexemes plus operators in <paramref name="query" />.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.GetQueryTree(NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Get the indexable part of <paramref name="query" />.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.GetResultHeadline(NpgsqlTypes.NpgsqlTsQuery,System.String)">
            <summary>
                Returns a string suitable for display containing a query match.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-HEADLINE
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.GetResultHeadline(NpgsqlTypes.NpgsqlTsQuery,System.String,System.String)">
            <summary>
                Returns a string suitable for display containing a query match.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-HEADLINE
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.GetResultHeadline(NpgsqlTypes.NpgsqlTsQuery,System.String,System.String,System.String)">
            <summary>
                Returns a string suitable for display containing a query match using the text
                search configuration specified by <paramref name="config" />.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-HEADLINE
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Rewrite(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Searches <paramref name="query" /> for occurrences of <paramref name="target" />, and replaces
                each occurrence with a <paramref name="substitute" />. All parameters are of type tsquery.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Rewrite(NpgsqlTypes.NpgsqlTsQuery,System.String)">
            <summary>
                For each row of the SQL <paramref name="select" /> result, occurrences of the first column value (the target)
                are replaced by the second column value (the substitute) within the current <paramref name="query" /> value.
                The <paramref name="select" /> must yield two columns of tsquery type.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.ToPhrase(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Returns a tsquery that searches for a match to <paramref name="query1" /> followed by a match
                to <paramref name="query2" />.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.ToPhrase(NpgsqlTypes.NpgsqlTsQuery,NpgsqlTypes.NpgsqlTsQuery,System.Int32)">
            <summary>
                Returns a tsquery that searches for a match to <paramref name="query1" /> followed by a match
                to <paramref name="query2" /> at a distance of <paramref name="distance" /> lexemes using
                the &lt;N&gt; tsquery operator
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Matches(NpgsqlTypes.NpgsqlTsVector,System.String)">
            <summary>
                This method generates the "@@" match operator. The <paramref name="query" /> parameter is
                assumed to be a plain search query and will be converted to a tsquery using plainto_tsquery.
                http://www.postgresql.org/docs/current/static/textsearch-intro.html#TEXTSEARCH-MATCHING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Matches(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                This method generates the "@@" match operator.
                http://www.postgresql.org/docs/current/static/textsearch-intro.html#TEXTSEARCH-MATCHING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Concat(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsVector)">
            <summary>
                Returns a vector which combines the lexemes and positional information of <paramref name="vector1" />
                and <paramref name="vector2" /> using the || tsvector operator. Positions and weight labels are retained
                during the concatenation.
                https://www.postgresql.org/docs/10/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.SetWeight(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsVector.Lexeme.Weight)">
            <summary>
                Assign weight to each element of <paramref name="vector" /> and return a new
                weighted tsvector.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.SetWeight(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsVector.Lexeme.Weight,System.String[])">
            <summary>
                Assign weight to elements of <paramref name="vector" /> that are in <paramref name="lexemes" /> and
                return a new weighted tsvector.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.SetWeight(NpgsqlTypes.NpgsqlTsVector,System.Char)">
            <summary>
                Assign weight to each element of <paramref name="vector" /> and return a new
                weighted tsvector.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.SetWeight(NpgsqlTypes.NpgsqlTsVector,System.Char,System.String[])">
            <summary>
                Assign weight to elements of <paramref name="vector" /> that are in <paramref name="lexemes" /> and
                return a new weighted tsvector.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Delete(NpgsqlTypes.NpgsqlTsVector,System.String)">
            <summary>
                Return a new vector with <paramref name="lexeme" /> removed from <paramref name="vector" />
                https://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Delete(NpgsqlTypes.NpgsqlTsVector,System.String[])">
            <summary>
                Return a new vector with <paramref name="lexemes" /> removed from <paramref name="vector" />
                https://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Filter(NpgsqlTypes.NpgsqlTsVector,System.Char[])">
            <summary>
                Returns a new vector with only lexemes having weights specified in <paramref name="weights" />.
                https://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.GetLength(NpgsqlTypes.NpgsqlTsVector)">
            <summary>
                Returns the number of lexemes in <paramref name="vector" />.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.ToStripped(NpgsqlTypes.NpgsqlTsVector)">
            <summary>
                Removes weights and positions from <paramref name="vector" /> and returns
                a new stripped tsvector.
                http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Rank(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" />.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Rank(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsQuery,Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> while normalizing
                the result according to the behaviors specified by <paramref name="normalization" />.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Rank(NpgsqlTypes.NpgsqlTsVector,System.Single[],NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> with custom
                weighting for word instances depending on their labels (D, C, B or A).
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.Rank(NpgsqlTypes.NpgsqlTsVector,System.Single[],NpgsqlTypes.NpgsqlTsQuery,Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> while normalizing
                the result according to the behaviors specified by <paramref name="normalization" />
                and using custom weighting for word instances depending on their labels (D, C, B or A).
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.RankCoverDensity(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover
                density method.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.RankCoverDensity(NpgsqlTypes.NpgsqlTsVector,NpgsqlTypes.NpgsqlTsQuery,Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover
                density method while normalizing the result according to the behaviors specified by
                <paramref name="normalization" />.
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.RankCoverDensity(NpgsqlTypes.NpgsqlTsVector,System.Single[],NpgsqlTypes.NpgsqlTsQuery)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover
                density method with custom weighting for word instances depending on their labels (D, C, B or A).
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions.RankCoverDensity(NpgsqlTypes.NpgsqlTsVector,System.Single[],NpgsqlTypes.NpgsqlTsQuery,Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization)">
            <summary>
                Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover density
                method while normalizing the result according to the behaviors specified by <paramref name="normalization" />
                and using custom weighting for word instances depending on their labels (D, C, B or A).
                http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions">
            <summary>
                Provides CLR methods that get translated to database functions when used in LINQ to Entities queries.
                The methods on this class are accessed via <see cref="P:Microsoft.EntityFrameworkCore.EF.Functions" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchSoundex(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                The soundex function converts a string to its Soundex code.
            </summary>
            <remarks>
                The method call is translated to <c>soundex(text)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchDifference(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                The difference function converts two strings to their Soundex codes and
                then returns the number of matching code positions. Since Soundex codes
                have four characters, the result ranges from zero to four, with zero being
                no match and four being an exact match.
            </summary>
            <remarks>
                The method call is translated to <c>difference(source, target)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchLevenshtein(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns the Levenshtein distance between two strings.
            </summary>
            <remarks>
                The method call is translated to <c>levenshtein(source, target)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchLevenshtein(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
                Returns the Levenshtein distance between two strings.
            </summary>
            <remarks>
                The method call is translated to <c>levenshtein(source, target, insertionCost, deletionCost, substitutionCost)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchLevenshteinLessEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String,System.Int32)">
            <summary>
                levenshtein_less_equal is an accelerated version of the Levenshtein function for use when only small distances are of interest.
                If the actual distance is less than or equal to maximum distance, then levenshtein_less_equal returns the correct distance;
                otherwise it returns some value greater than maximum distance. If maximum distance is negative then the behavior is the same as
                levenshtein.
            </summary>
            <remarks>
                The method call is translated to <c>levenshtein_less_equal(source, target, maximumDistance)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchLevenshteinLessEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                levenshtein_less_equal is an accelerated version of the Levenshtein function for use when only small distances are of interest.
                If the actual distance is less than or equal to maximum distance, then levenshtein_less_equal returns the correct distance;
                otherwise it returns some value greater than maximum distance. If maximum distance is negative then the behavior is the same as
                levenshtein.
            </summary>
            <remarks>
                The method call is translated to
                <c>levenshtein_less_equal(source, target, insertionCost, deletionCost, substitutionCost, maximumDistance)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchMetaphone(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.Int32)">
            <summary>
                The metaphone function converts a string to its Metaphone code.
            </summary>
            <remarks>
                The method call is translated to <c>metaphone(text, maximumOutputLength)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchDoubleMetaphone(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                The dmetaphone function converts a string to its primary Double Metaphone code.
            </summary>
            <remarks>
                The method call is translated to <c>dmetaphone(text)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlFuzzyStringMatchDbFunctionsExtensions.FuzzyStringMatchDoubleMetaphoneAlt(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                The dmetaphone_alt function converts a string to its alternate Double Metaphone code.
            </summary>
            <remarks>
                The method call is translated to <c>dmetaphone_alt(text)</c>.
                See https://www.postgresql.org/docs/current/fuzzystrmatch.html.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions">
            <summary>
                Provides methods for supporting translation to PostgreSQL JSON operators and functions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions.JsonContains(Microsoft.EntityFrameworkCore.DbFunctions,System.Object,System.Object)">
            <summary>
                Checks if <paramref name="json" /> contains <paramref name="contained" /> as top-level entries.
            </summary>
            <param name="_">DbFunctions instance</param>
            <param name="json">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string property mapped to JSON,
                or a user POCO mapped to JSON.
            </param>
            <param name="contained">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <remarks>
                This operation is only supported with PostgreSQL <c>jsonb</c>, not <c>json</c>.
                See https://www.postgresql.org/docs/current/functions-json.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions.JsonContained(Microsoft.EntityFrameworkCore.DbFunctions,System.Object,System.Object)">
            <summary>
                Checks if <paramref name="contained" /> is contained in <paramref name="json" /> as top-level entries.
            </summary>
            <param name="_">DbFunctions instance</param>
            <param name="contained">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <param name="json">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <remarks>
                This operation is only supported with PostgreSQL <c>jsonb</c>, not <c>json</c>.
                See https://www.postgresql.org/docs/current/functions-json.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions.JsonExists(Microsoft.EntityFrameworkCore.DbFunctions,System.Object,System.String)">
            <summary>
                Checks if <paramref name="key" /> exists as a top-level key within <paramref name="json" />.
            </summary>
            <param name="_">DbFunctions instance</param>
            <param name="json">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <param name="key">A key to be checked inside <paramref name="json" />.</param>
            <remarks>
                This operation is only supported with PostgreSQL <c>jsonb</c>, not <c>json</c>.
                See https://www.postgresql.org/docs/current/functions-json.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions.JsonExistAny(Microsoft.EntityFrameworkCore.DbFunctions,System.Object,System.String[])">
            <summary>
                Checks if any of the given <paramref name="keys" /> exist as top-level keys within <paramref name="json" />.
            </summary>
            <param name="_">DbFunctions instance</param>
            <param name="json">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <param name="keys">A set of keys to be checked inside <paramref name="json" />.</param>
            <remarks>
                This operation is only supported with PostgreSQL <c>jsonb</c>, not <c>json</c>.
                See https://www.postgresql.org/docs/current/functions-json.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions.JsonExistAll(Microsoft.EntityFrameworkCore.DbFunctions,System.Object,System.String[])">
            <summary>
                Checks if all of the given <paramref name="keys" /> exist as top-level keys within <paramref name="json" />.
            </summary>
            <param name="_">DbFunctions instance</param>
            <param name="json">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <param name="keys">A set of keys to be checked inside <paramref name="json" />.</param>
            <remarks>
                This operation is only supported with PostgreSQL <c>jsonb</c>, not <c>json</c>.
                See https://www.postgresql.org/docs/current/functions-json.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlJsonDbFunctionsExtensions.JsonTypeof(Microsoft.EntityFrameworkCore.DbFunctions,System.Object)">
            <summary>
                Returns the type of the outermost JSON value as a text string.
                Possible types are object, array, string, number, boolean, and null.
            </summary>
            <param name="_">DbFunctions instance</param>
            <param name="json">
                A JSON column or value. Can be a <see cref="T:System.Text.Json.JsonDocument" />, a string, or a user POCO mapped to JSON.
            </param>
            <remarks>
                See https://www.postgresql.org/docs/current/functions-json.html.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions">
            <summary>
                Provides extension methods for multiranges supporting PostgreSQL translation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0}[],``0)">
            <summary>
                Determines whether a multirange contains a specified value.
            </summary>
            <param name="multirange">The multirange in which to locate the value.</param>
            <param name="value">The value to locate in the range.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified value; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0}[],``0)" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},``0)">
            <summary>
                Determines whether a multirange contains a specified value.
            </summary>
            <param name="multirange">The multirange in which to locate the value.</param>
            <param name="value">The value to locate in the range.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified value; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},``0)" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange contains a specified multirange.
            </summary>
            <param name="multirange1">The multirange in which to locate the specified multirange.</param>
            <param name="multirange2">The specified multirange to locate in the multirange.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange contains a specified multirange.
            </summary>
            <param name="multirange1">The multirange in which to locate the specified multirange.</param>
            <param name="multirange2">The specified multirange to locate in the multirange.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange contains a specified range.
            </summary>
            <param name="multirange1">The multirange in which to locate the specified range.</param>
            <param name="multirange2">The specified range to locate in the multirange.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ
                query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange contains a specified range.
            </summary>
            <param name="multirange1">The multirange in which to locate the specified range.</param>
            <param name="multirange2">The specified range to locate in the multirange.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Contains``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange is contained by a specified multirange.
            </summary>
            <param name="multirange1">The specified multirange to locate in the multirange.</param>
            <param name="multirange2">The multirange in which to locate the specified multirange.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange is contained by a specified multirange.
            </summary>
            <param name="multirange1">The specified multirange to locate in the multirange.</param>
            <param name="multirange2">The multirange in which to locate the specified multirange.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a range is contained by a specified multirange.
            </summary>
            <param name="range">The specified range to locate in the multirange.</param>
            <param name="multirange">The multirange in which to locate the specified range.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a range is contained by a specified multirange.
            </summary>
            <param name="range">The specified range to locate in the multirange.</param>
            <param name="multirange">The multirange in which to locate the specified range.</param>
            <returns>
                <value>true</value>
                if the multirange contains the specified range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange overlaps another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the multiranges overlap (share points in common); otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange overlaps another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the multiranges overlap (share points in common); otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange overlaps another range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange and range overlap (share points in common); otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ
                query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange overlaps another range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange and range overlap (share points in common); otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Overlaps``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange is strictly to the left of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange is strictly to the left of the second multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange is strictly to the left of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange is strictly to the left of the second multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part
                of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange is strictly to the left of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange is strictly to the left of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange is strictly to the left of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange is strictly to the left of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange is strictly to the right of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange is strictly to the right of the second multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange is strictly to the right of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange is strictly to the right of the second multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part
                of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange is strictly to the right of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange is strictly to the right of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange is strictly to the right of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange is strictly to the right of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsStrictlyRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange does not extend to the left of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange does not extend to the left of the multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange does not extend to the left of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange does not extend to the left of the multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as
                part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange does not extend to the left of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The multirange.</param>
            <returns>
                <value>true</value>
                if the multirange does not extend to the left of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange does not extend to the left of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The multirange.</param>
            <returns>
                <value>true</value>
                if the multirange does not extend to the left of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of
                an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange does not extend to the right of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange does not extend to the right of the multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of
                an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange does not extend to the right of another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the first multirange does not extend to the right of the multirange; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as
                part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange does not extend to the right of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The multirange.</param>
            <returns>
                <value>true</value>
                if the multirange does not extend to the right of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange does not extend to the right of a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The multirange.</param>
            <returns>
                <value>true</value>
                if the multirange does not extend to the right of the range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.DoesNotExtendRightOf``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of
                an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Determines whether a multirange is adjacent to another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the multiranges are adjacent; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Determines whether a multirange is adjacent to another multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>
                <value>true</value>
                if the multiranges are adjacent; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of
                an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange is adjacent to a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange and range are adjacent; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a multirange is adjacent to a range.
            </summary>
            <param name="multirange">The multirange.</param>
            <param name="range">The range.</param>
            <returns>
                <value>true</value>
                if the multirange and range are adjacent; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.IsAdjacentTo``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Union``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Returns the set union, which means unique elements that appear in either of two multiranges.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>A multirange containing the unique elements that appear in either multirange.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Union``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core LINQ
                query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Union``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Returns the set union, which means unique elements that appear in either of two multiranges.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>A multirange containing the unique elements that appear in either multirange.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Union``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Intersect``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Returns the set intersection, which means elements that appear in each of two multiranges.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>A multirange containing the elements that appear in both ranges.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Intersect``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Intersect``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Returns the set intersection, which means elements that appear in each of two multiranges.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>A multirange containing the elements that appear in both ranges.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Intersect``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an
                EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Except``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Returns the set difference, which means the elements of one multirange that do not appear in a second multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>A multirange containing the elements that appear in the first range, but not the second range.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Except``1(NpgsqlTypes.NpgsqlRange{``0}[],NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core LINQ
                query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Except``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Returns the set difference, which means the elements of one multirange that do not appear in a second multirange.
            </summary>
            <param name="multirange1">The first multirange.</param>
            <param name="multirange2">The second multirange.</param>
            <returns>A multirange containing the elements that appear in the first range, but not the second range.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Except``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}},System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Merge``1(NpgsqlTypes.NpgsqlRange{``0}[])">
            <summary>
                Computes the smallest range that includes the entire multirange.
            </summary>
            <param name="multirange">The multirange.</param>
            <returns>The smallest range that includes the entire multirange.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Merge``1(NpgsqlTypes.NpgsqlRange{``0}[])" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Merge``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Computes the smallest range that includes the entire multirange.
            </summary>
            <param name="multirange">The multirange.</param>
            <returns>The smallest range that includes the entire multirange.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlMultirangeDbFunctionsExtensions.Merge``1(System.Collections.Generic.List{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF
                Core LINQ query.
            </exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions">
            <summary>
                Provides extension methods supporting operator translation for PostgreSQL network types.
            </summary>
            <remarks>
                See: https://www.postgresql.org/docs/current/static/functions-net.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.LessThan(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> is less than another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The left-hand inet.</param>
            <param name="other">The right-hand inet.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> is less than the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.LessThan(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Determines whether an <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is less than another <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The left-hand macaddr.</param>
            <param name="other">The right-hand macaddr.</param>
            <returns>
                True if the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is less than the other <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.LessThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> is less than or equal to another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The left-hand inet.</param>
            <param name="other">The right-hand inet.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> is less than or equal to the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.LessThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Determines whether an <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is less than or equal to another <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The left-hand macaddr.</param>
            <param name="other">The right-hand macaddr.</param>
            <returns>
                True if the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is less than or equal to the other <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.GreaterThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> is greater than or equal to another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The left-hand inet.</param>
            <param name="other">The right-hand inet.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> is greater than or equal to the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.GreaterThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Determines whether an <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is greater than or equal to another <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The left-hand macaddr.</param>
            <param name="other">The right-hand macaddr.</param>
            <returns>
                True if the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is greater than or equal to the other <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.GreaterThan(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> is greater than another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The left-hand inet.</param>
            <param name="other">The right-hand inet.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> is greater than the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.GreaterThan(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Determines whether an <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is greater than another <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The left-hand macaddr.</param>
            <param name="other">The right-hand macaddr.</param>
            <returns>
                True if the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> is greater than the other <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> is contained within another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to locate.</param>
            <param name="other">The inet to search.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> is contained within the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainedByOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> is contained within or equal to another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to locate.</param>
            <param name="other">The inet to search.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> is contained within or equal to the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Contains(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> contains another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The IP address to search.</param>
            <param name="other">The IP address to locate.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> contains the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> contains or is equal to another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The IP address to search.</param>
            <param name="other">The IP address to locate.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> contains or is equal to the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Determines whether an <see cref="T:NpgsqlTypes.NpgsqlInet" /> contains or is contained by another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The IP address to search.</param>
            <param name="other">The IP address to locate.</param>
            <returns>
                True if the <see cref="T:NpgsqlTypes.NpgsqlInet" /> contains or is contained by the other <see cref="T:NpgsqlTypes.NpgsqlInet" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseNot(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Computes the bitwise NOT operation on an <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to negate.</param>
            <returns>
                The result of the bitwise NOT operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseNot(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Computes the bitwise NOT operation on an <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The macaddr to negate.</param>
            <returns>
                The result of the bitwise NOT operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseAnd(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Computes the bitwise AND of two <see cref="T:NpgsqlTypes.NpgsqlInet" /> instances.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The left-hand inet.</param>
            <param name="other">The right-hand inet.</param>
            <returns>
                The result of the bitwise AND operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseAnd(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Computes the bitwise AND of two <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instances.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The left-hand macaddr.</param>
            <param name="other">The right-hand macaddr.</param>
            <returns>
                The result of the bitwise AND operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseOr(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Computes the bitwise OR of two <see cref="T:NpgsqlTypes.NpgsqlInet" /> instances.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The left-hand inet.</param>
            <param name="other">The right-hand inet.</param>
            <returns>
                The result of the bitwise OR operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseOr(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Computes the bitwise OR of two <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instances.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macaddr">The left-hand macaddr.</param>
            <param name="other">The right-hand macaddr.</param>
            <returns>
                The result of the bitwise OR operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Add(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,System.Int32)">
            <summary>
                Adds the <paramref name="value" /> to the <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet.</param>
            <param name="value">The value to add.</param>
            <returns>
                The <see cref="T:NpgsqlTypes.NpgsqlInet" /> augmented by the <paramref name="value" />.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Subtract(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,System.Int64)">
            <summary>
                Subtracts the <paramref name="value" /> from the <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet.</param>
            <param name="value">The value to subtract.</param>
            <returns>
                The <see cref="T:NpgsqlTypes.NpgsqlInet" /> augmented by the <paramref name="value" />.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Subtract(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Subtracts one <see cref="T:NpgsqlTypes.NpgsqlInet" /> from another <see cref="T:NpgsqlTypes.NpgsqlInet" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet from which to subtract.</param>
            <param name="other">The inet to subtract.</param>
            <returns>
                The numeric difference between the two given addresses.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Abbreviate(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Returns the abbreviated display format as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to abbreviate.</param>
            <returns>
                The abbreviated display format as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Abbreviate(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlCidr)">
            <summary>
                Returns the abbreviated display format as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to abbreviate.</param>
            <returns>
                The abbreviated display format as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Broadcast(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Returns the broadcast address for a network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet used to derive the broadcast address.</param>
            <returns>
                The broadcast address for a network.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Family(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Extracts the family of an address; 4 for IPv4, 6 for IPv6.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet used to derive the family.</param>
            <returns>
                The family of an address; 4 for IPv4, 6 for IPv6.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Host(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Extracts the host (i.e. the IP address) as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet from which to extract the host.</param>
            <returns>
                The host (i.e. the IP address) as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.HostMask(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Constructs the host mask for the network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet used to construct the host mask.</param>
            <returns>
                The constructed host mask.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.MaskLength(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Extracts the length of the subnet mask.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet used to extract the subnet length.</param>
            <returns>
                The length of the subnet mask.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Netmask(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Constructs the subnet mask for the network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet used to construct the subnet mask.</param>
            <returns>
                The subnet mask for the network.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Network(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Extracts the network part of the address.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet used to extract the network.</param>
            <returns>
                The network part of the address.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.SetMaskLength(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,System.Int32)">
            <summary>
                Sets the length of the subnet mask.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to modify.</param>
            <param name="length">The subnet mask length to set.</param>
            <returns>
                The network with a subnet mask of the specified length.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.SetMaskLength(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlCidr,System.Int32)">
            <summary>
                Sets the length of the subnet mask.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to modify.</param>
            <param name="length">The subnet mask length to set.</param>
            <returns>
                The network with a subnet mask of the specified length.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Text(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Extracts the IP address and subnet mask as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to extract as text.</param>
            <returns>
                The IP address and subnet mask as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.SameFamily(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Tests if the addresses are in the same family.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The primary inet.</param>
            <param name="other">The other inet.</param>
            <returns>
                True if the addresses are in the same family; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Merge(Microsoft.EntityFrameworkCore.DbFunctions,NpgsqlTypes.NpgsqlInet,NpgsqlTypes.NpgsqlInet)">
            <summary>
                Constructs the smallest network which includes both of the given networks.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The first inet.</param>
            <param name="other">The second inet.</param>
            <returns>
                The smallest network which includes both of the given networks.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Truncate(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Sets the last 3 bytes of the MAC address to zero. For macaddr8, the last 5 bytes are set to zero.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macAddress">The MAC address to truncate.</param>
            <returns>
                The MAC address with the last 3 bytes set to zero. For macaddr8, the last 5 bytes are set to zero.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Set7BitMac8(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
                Sets the 7th bit to one, also known as modified EUI-64, for inclusion in an IPv6 address.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="macAddress">The MAC address to modify.</param>
            <returns>
                The MAC address with the 7th bit set to one.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.LessThan(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) is less than another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The left-hand cidr.</param>
            <param name="other">The right-hand cidr.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) is less than the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.LessThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) is less than or equal to another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The left-hand cidr.</param>
            <param name="other">The right-hand cidr.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) is less than or equal to the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.GreaterThanOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) is greater than or equal to another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The left-hand cidr.</param>
            <param name="other">The right-hand cidr.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) is greater than or equal to the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.GreaterThan(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) is greater than another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The left-hand cidr.</param>
            <param name="other">The right-hand cidr.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) is greater than the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.IPAddress,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an <see cref="T:System.Net.IPAddress" /> is contained within a network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to locate.</param>
            <param name="other">The cidr to search.</param>
            <returns>
                True if the <see cref="T:System.Net.IPAddress" /> is contained within the network; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.Net.IPAddress)">
            <summary>
                Determines whether a network contains or is equal to another <see cref="T:System.Net.IPAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The network to search.</param>
            <param name="other">The IP address to locate.</param>
            <returns>
                True if the network contains or is equal to the other <see cref="T:System.Net.IPAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) is contained within another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to locate.</param>
            <param name="other">The cidr to search.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) is contained within the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainedByOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.IPAddress,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an <see cref="T:System.Net.IPAddress" /> is contained within or equal to a network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The inet to locate.</param>
            <param name="other">The cidr to search.</param>
            <returns>
                True if the <see cref="T:System.Net.IPAddress" /> is contained within or equal to the network; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainedByOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) is contained within or equal to another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to locate.</param>
            <param name="other">The cidr to search.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) is contained within or equal to the other (IPAddress Address, int Subnet); otherwise,
                false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Contains(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.Net.IPAddress)">
            <summary>
                Determines whether a network contains another <see cref="T:System.Net.IPAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The network to search.</param>
            <param name="other">The IP address to locate.</param>
            <returns>
                True if the network contains the other <see cref="T:System.Net.IPAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Contains(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) contains another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to search.</param>
            <param name="other">The cidr to locate.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) contains the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrEqual(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) contains or is equal to another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to search.</param>
            <param name="other">The cidr to locate.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) contains or is equal to the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.Net.IPAddress)">
            <summary>
                Determines whether a network contains or is contained by an <see cref="T:System.Net.IPAddress" />.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The network to search.</param>
            <param name="other">The IP address to locate.</param>
            <returns>
                True if the network contains or is contained by the <see cref="T:System.Net.IPAddress" />; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,System.Net.IPAddress,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an <see cref="T:System.Net.IPAddress" /> contains or is contained by a network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="inet">The IP address to search.</param>
            <param name="other">The network to locate.</param>
            <returns>
                True if the <see cref="T:System.Net.IPAddress" /> contains or is contained by the network; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.ContainsOrContainedBy(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Determines whether an (IPAddress Address, int Subnet) contains or is contained by another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to search.</param>
            <param name="other">The cidr to locate.</param>
            <returns>
                True if the (IPAddress Address, int Subnet) contains or is contained by the other (IPAddress Address, int Subnet); otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseNot(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Computes the bitwise NOT operation on an (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to negate.</param>
            <returns>
                The result of the bitwise NOT operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseAnd(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Computes the bitwise AND of two (IPAddress Address, int Subnet) instances.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The left-hand cidr.</param>
            <param name="other">The right-hand cidr.</param>
            <returns>
                The result of the bitwise AND operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.BitwiseOr(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Computes the bitwise OR of two (IPAddress Address, int Subnet) instances.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The left-hand cidr.</param>
            <param name="other">The right-hand cidr.</param>
            <returns>
                The result of the bitwise OR operation.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Add(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.Int32)">
            <summary>
                Adds the <paramref name="value" /> to the (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr.</param>
            <param name="value">The value to add.</param>
            <returns>
                The (IPAddress Address, int Subnet) augmented by the <paramref name="value" />.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Subtract(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.Int32)">
            <summary>
                Subtracts the <paramref name="value" /> from the (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The inet.</param>
            <param name="value">The value to subtract.</param>
            <returns>
                The (IPAddress Address, int Subnet) augmented by the <paramref name="value" />.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Subtract(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Subtracts one (IPAddress Address, int Subnet) from another (IPAddress Address, int Subnet).
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr from which to subtract.</param>
            <param name="other">The cidr to subtract.</param>
            <returns>
                The difference between the two addresses.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Abbreviate(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Returns the abbreviated display format as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to abbreviate.</param>
            <returns>
                The abbreviated display format as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Broadcast(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Returns the broadcast address for a network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr used to derive the broadcast address.</param>
            <returns>
                The broadcast address for a network.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Family(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Extracts the family of an address; 4 for IPv4, 6 for IPv6.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr used to derive the family.</param>
            <returns>
                The family of an address; 4 for IPv4, 6 for IPv6.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Host(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Extracts the host (i.e. the IP address) as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr from which to extract the host.</param>
            <returns>
                The host (i.e. the IP address) as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.HostMask(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Constructs the host mask for the network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr used to construct the host mask.</param>
            <returns>
                The constructed host mask.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.MaskLength(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Extracts the length of the subnet mask.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr used to extract the subnet length.</param>
            <returns>
                The length of the subnet mask.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Netmask(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Constructs the subnet mask for the network.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr used to construct the subnet mask.</param>
            <returns>
                The subnet mask for the network.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Network(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Extracts the network part of the address.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr used to extract the network.</param>
            <returns>
                The network part of the address.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.SetMaskLength(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.Int32)">
            <summary>
                Sets the length of the subnet mask.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to modify.</param>
            <param name="length">The subnet mask length to set.</param>
            <returns>
                The network with a subnet mask of the specified length.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Text(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Extracts the IP address and subnet mask as text.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The cidr to extract as text.</param>
            <returns>
                The IP address and subnet mask as text.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.SameFamily(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Tests if the addresses are in the same family.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The primary cidr.</param>
            <param name="other">The other cidr.</param>
            <returns>
                True if the addresses are in the same family; otherwise, false.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlNetworkDbFunctionsExtensions.Merge(Microsoft.EntityFrameworkCore.DbFunctions,System.ValueTuple{System.Net.IPAddress,System.Int32},System.ValueTuple{System.Net.IPAddress,System.Int32})">
            <summary>
                Constructs the smallest network which includes both of the given networks.
            </summary>
            <param name="_">The <see cref="T:Microsoft.EntityFrameworkCore.DbFunctions" /> instance.</param>
            <param name="cidr">The first cidr.</param>
            <param name="other">The second cidr.</param>
            <returns>
                The smallest network which includes both of the given networks.
            </returns>
            <exception cref="T:System.NotSupportedException">
                This method is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions">
            <summary>
                Provides extension methods for <see cref="T:NpgsqlTypes.NpgsqlRange`1" /> supporting PostgreSQL translation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0},``0)">
            <summary>
                Determines whether a range contains a specified value.
            </summary>
            <param name="range">The range in which to locate the value.</param>
            <param name="value">The value to locate in the range.</param>
            <typeparam name="T">The type of the elements of <paramref name="range" />.</typeparam>
            <returns>
                <value>true</value>
                if the range contains the specified value; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0},``0)" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range contains a specified range.
            </summary>
            <param name="a">The range in which to locate the specified range.</param>
            <param name="b">The specified range to locate in the range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the range contains the specified range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Contains``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ
                query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range is contained by a specified range.
            </summary>
            <param name="a">The specified range to locate in the range.</param>
            <param name="b">The range in which to locate the specified range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the range contains the specified range; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.ContainedBy``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Overlaps``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range overlaps another range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the ranges overlap (share points in common); otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Overlaps``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.IsStrictlyLeftOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range is strictly to the left of another range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the first range is strictly to the left of the second; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.IsStrictlyLeftOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.IsStrictlyRightOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range is strictly to the right of another range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the first range is strictly to the right of the second; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.IsStrictlyRightOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range does not extend to the left of another range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the first range does not extend to the left of the second; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.DoesNotExtendLeftOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.DoesNotExtendRightOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range does not extend to the right of another range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the first range does not extend to the right of the second; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.DoesNotExtendRightOf``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.IsAdjacentTo``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Determines whether a range is adjacent to another range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                <value>true</value>
                if the ranges are adjacent; otherwise,
                <value>false</value>
                .
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.IsAdjacentTo``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Union``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Returns the set union, which means unique elements that appear in either of two ranges.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>A range containing the unique elements that appear in either range.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Union``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Intersect``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Returns the set intersection, which means elements that appear in each of two ranges.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>A range containing the elements that appear in both ranges.</returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Intersect``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Except``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Returns the set difference, which means the elements of one range that do not appear in a second range.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                The elements that appear in the first range, but not the second range.
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Except``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Merge``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})">
            <summary>
                Returns the smallest range which includes both of the given ranges.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <typeparam name="T">The type of the elements of <paramref name="a" />.</typeparam>
            <returns>
                The smallest range which includes both of the given ranges.
            </returns>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.Merge``1(NpgsqlTypes.NpgsqlRange{``0},NpgsqlTypes.NpgsqlRange{``0})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.RangeAgg``1(System.Collections.Generic.IEnumerable{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Computes the union of the non-null input ranges. Corresponds to the PostgreSQL <c>range_agg</c> aggregate function.
            </summary>
            <param name="input">The ranges to be aggregated via union into a multirange.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.RangeAgg``1(System.Collections.Generic.IEnumerable{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF Core LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.RangeIntersectAgg``1(System.Collections.Generic.IEnumerable{NpgsqlTypes.NpgsqlRange{``0}})">
            <summary>
                Computes the intersection of the non-null input ranges. Corresponds to the PostgreSQL <c>range_intersect_agg</c> aggregate function.
            </summary>
            <param name="input">The ranges on which to perform the intersection operation.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.RangeIntersectAgg``1(System.Collections.Generic.IEnumerable{NpgsqlTypes.NpgsqlRange{``0}})" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.RangeIntersectAgg``1(System.Collections.Generic.IEnumerable{NpgsqlTypes.NpgsqlRange{``0}[]})">
            <summary>
                Computes the intersection of the non-null input multiranges.
                Corresponds to the PostgreSQL <c>range_intersect_agg</c> aggregate function.
            </summary>
            <param name="input">The multiranges on which to perform the intersection operation.</param>
            <seealso href="https://www.postgresql.org/docs/current/functions-aggregate.html">PostgreSQL documentation for aggregate functions.</seealso>
            <exception cref="T:System.NotSupportedException">
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlRangeDbFunctionsExtensions.RangeIntersectAgg``1(System.Collections.Generic.IEnumerable{NpgsqlTypes.NpgsqlRange{``0}[]})" /> is only intended for use via SQL translation as part of an EF Core
                LINQ query.
            </exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions">
            <summary>
                Provides CLR methods that get translated to database functions when used in LINQ to Entities queries.
                The methods on this class are accessed via <see cref="P:Microsoft.EntityFrameworkCore.EF.Functions" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsShow(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Returns an array of all the trigrams in the given <paramref name="text" />.
                (In practice this is seldom useful except for debugging.)
            </summary>
            <remarks>
                The method call is translated to <c>show_trgm(text)</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsSimilarity(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns a number that indicates how similar the two arguments are.
                The range of the result is zero (indicating that the two strings are
                completely dissimilar) to one (indicating that the two strings are identical).
            </summary>
            <remarks>
                The method call is translated to <c>similarity(source, target)</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsWordSimilarity(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns a number that indicates the greatest similarity between the set of trigrams
                in the first string and any continuous extent of an ordered set of trigrams
                in the second string.
            </summary>
            <remarks>
                The method call is translated to <c>word_similarity(source, target)</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsStrictWordSimilarity(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Same as word_similarity(text, text), but forces extent boundaries to match word boundaries.
                Since we don't have cross-word trigrams, this function actually returns greatest similarity
                between first string and any continuous extent of words of the second string.
            </summary>
            <remarks>
                The method call is translated to <c>strict_word_similarity(source, target)</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsAreSimilar(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns true if its arguments have a similarity that is greater than the current similarity
                threshold set by pg_trgm.similarity_threshold.
            </summary>
            <remarks>
                The method call is translated to <c>source % target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsAreWordSimilar(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns true if the similarity between the trigram set in the first argument and a continuous
                extent of an ordered trigram set in the second argument is greater than the current word similarity
                threshold set by pg_trgm.word_similarity_threshold parameter.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;% target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsAreNotWordSimilar(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Commutator of the &lt;% operator.
            </summary>
            <remarks>
                The method call is translated to <c>source %&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsAreStrictWordSimilar(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns true if its second argument has a continuous extent of an ordered trigram set that
                matches word boundaries, and its similarity to the trigram set of the first argument is greater
                than the current strict word similarity threshold set by the pg_trgm.strict_word_similarity_threshold
                parameter.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;&lt;% target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsAreNotStrictWordSimilar(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Commutator of the &lt;&lt;% operator.
            </summary>
            <remarks>
                The method call is translated to <c>source %&gt;&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsSimilarityDistance(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns the "distance" between the arguments, that is one minus the similarity() value.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;-&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsWordSimilarityDistance(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns the "distance" between the arguments, that is one minus the word_similarity() value.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;&lt;-&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsWordSimilarityDistanceInverted(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Commutator of the &lt;&lt;-&gt; operator.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;-&gt;&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsStrictWordSimilarityDistance(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Returns the "distance" between the arguments, that is one minus the strict_word_similarity() value.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;&lt;&lt;-&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlTrigramsDbFunctionsExtensions.TrigramsStrictWordSimilarityDistanceInverted(Microsoft.EntityFrameworkCore.DbFunctions,System.String,System.String)">
            <summary>
                Commutator of the &lt;&lt;&lt;-&gt; operator.
            </summary>
            <remarks>
                The method call is translated to <c>source &lt;-&gt;&gt;&gt; target</c>.
                See https://www.postgresql.org/docs/current/pgtrgm.html.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> for Npgsql-specific metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.GetStorageParameters(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)">
            <summary>
                Gets all storage parameters for the table mapped to the entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.GetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                Gets a storage parameter for the table mapped to the entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.SetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String,System.Object)">
            <summary>
                Sets a storage parameter on the table mapped to the entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.SetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String,System.Object,System.Boolean)">
            <summary>
                Sets a storage parameter on the table mapped to the entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.GetStorageParameterConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String)">
            <summary>
                Gets the configuration source for a storage parameter for the table mapped to the entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.GetIsUnlogged(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)">
            <summary>
                Gets whether the table to which the entity is mapped is unlogged.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.SetIsUnlogged(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Boolean)">
            <summary>
                Sets whether the table to which the entity is mapped is unlogged.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.SetIsUnlogged(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean,System.Boolean)">
            <summary>
                Sets whether the table to which the entity is mapped is unlogged.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.GetIsUnloggedConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)">
            <summary>
                Gets the configuration source for whether the table to which the entity is mapped is unlogged.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlEntityTypeExtensions.GetCockroachDbInterleaveInParent(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)">
            <summary>
                Gets the CockroachDB-specific interleave-in-parent setting for the table to which the entity is mapped.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" /> for Npgsql-specific metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetMethod(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns the index method to be used, or <c>null</c> if it hasn't been specified.
                <c>null</c> selects the default (currently <c>btree</c>).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetMethod(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.String)">
            <summary>
                Sets the index method to be used, or <c>null</c> if it hasn't been specified.
                <c>null</c> selects the default (currently <c>btree</c>).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetMethod(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String,System.Boolean)">
            <summary>
                Sets the index method to be used, or <c>null</c> if it hasn't been specified.
                <c>null</c> selects the default (currently <c>btree</c>).
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetMethodConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index method.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index method.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetOperators(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns the column operators to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetOperators(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                Sets the column operators to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetOperators(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Sets the column operators to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-opclass.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetOperatorsConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index operators.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index operators.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns the column collations to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                Sets the column collations to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Sets the column collations to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-collations.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetCollationConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index collations.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index collations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns the column NULL sort orders to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder})">
            <summary>
                Sets the column NULL sort orders to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetNullSortOrder(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NullSortOrder},System.Boolean)">
            <summary>
                Sets the column NULL sort orders to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetNullSortOrderConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index null sort orders.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index null sort orders.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns included property names, or <c>null</c> if they have not been specified.
            </summary>
            <param name="index">The index.</param>
            <returns>The included property names, or <c>null</c> if they have not been specified.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                Sets included property names.
            </summary>
            <param name="index">The index.</param>
            <param name="properties">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Sets included property names.
            </summary>
            <param name="index">The index.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <param name="properties">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetIncludePropertiesConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.IsCreatedConcurrently(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns a value indicating whether the index is created concurrently.
            </summary>
            <param name="index">The index.</param>
            <returns><c>true</c> if the index is created concurrently.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetIsCreatedConcurrently(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})">
            <summary>
                Sets a value indicating whether the index is created concurrently.
            </summary>
            <param name="index">The index.</param>
            <param name="createdConcurrently">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetIsCreatedConcurrently(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                Sets a value indicating whether the index is created concurrently.
            </summary>
            <param name="index">The index.</param>
            <param name="createdConcurrently">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetIsCreatedConcurrentlyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is created concurrently.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is created concurrently.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetAreNullsDistinct(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetAreNullsDistinct(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})">
            <summary>
                Sets whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetAreNullsDistinct(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                Sets whether for a unique index, null values should be considered distinct (not equal).
                The default is that they are distinct, so that a unique index could contain multiple null values in a column.
            </summary>
            <remarks>
                http://www.postgresql.org/docs/current/static/sql-createindex.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetAreNullsDistinctConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether nulls are considered distinct.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetTsVectorConfig(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns the text search configuration for this tsvector expression index, or <c>null</c> if this is not a
                tsvector expression index.
            </summary>
            <param name="index">The index.</param>
            <remarks>
                https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetTsVectorConfig(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.String)">
            <summary>
                Sets the text search configuration for this tsvector expression index, or <c>null</c> if this is not a
                tsvector expression index.
            </summary>
            <param name="index">The index.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <remarks>
                https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetTsVectorConfig(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String,System.Boolean)">
            <summary>
                Sets the index to tsvector config name to be used.
            </summary>
            <param name="index">The index.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <remarks>
                https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetTsVectorConfigConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the tsvector config.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the tsvector config.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetStorageParameters(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Gets all storage parameters for the index.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.IIndex,System.String)">
            <summary>
                Gets a storage parameter for the index.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.String,System.Object)">
            <summary>
                Sets a storage parameter on the index.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetStorageParameter(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String,System.Object,System.Boolean)">
            <summary>
                Sets a storage parameter on the index.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetStorageParameterConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String)">
            <summary>
                Gets the configuration source for a storage parameter for the table mapped to the entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetSortOrder(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)">
            <summary>
                Returns the column sort orders to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetSortOrder(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder})">
            <summary>
                Sets the column sort orders to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.SetSortOrder(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.SortOrder},System.Boolean)">
            <summary>
                Sets the column sort orders to be used, or <c>null</c> if they have not been specified.
            </summary>
            <remarks>
                https://www.postgresql.org/docs/current/static/indexes-ordering.html
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlIndexExtensions.GetSortOrderConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index sort orders.
            </summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index sort orders.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions">
            <summary>
                Model extension methods for Npgsql-specific metadata.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>.
            </remarks>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.DefaultHiLoSequenceName">
            <summary>
                The default name for the hi-lo sequence.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.DefaultSequenceNameSuffix">
            <summary>
                The default prefix for sequences applied to properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                Returns the name to use for the default hi-lo sequence.
            </summary>
            <param name="model"> The model. </param>
            <returns> The name to use for the default hi-lo sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                Sets the name to use for the default hi-lo sequence.
            </summary>
            <param name="model"> The model. </param>
            <param name="name"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                Sets the name to use for the default hi-lo sequence.
            </summary>
            <param name="model"> The model. </param>
            <param name="name"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetHiLoSequenceNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default hi-lo sequence name.
            </summary>
            <param name="model"> The model. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default hi-lo sequence name. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                Returns the schema to use for the default hi-lo sequence.
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)" />
            </summary>
            <param name="model"> The model. </param>
            <returns> The schema to use for the default hi-lo sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                Sets the schema to use for the default hi-lo sequence.
            </summary>
            <param name="model"> The model. </param>
            <param name="value"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                Sets the schema to use for the default hi-lo sequence.
            </summary>
            <param name="model"> The model. </param>
            <param name="value"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetHiLoSequenceSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default hi-lo sequence schema.
            </summary>
            <param name="model"> The model. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default hi-lo sequence schema. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetSequenceNameSuffix(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                Returns the suffix to append to the name of automatically created sequences.
            </summary>
            <param name="model">The model.</param>
            <returns>The name to use for the default key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetSequenceNameSuffix(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                Sets the suffix to append to the name of automatically created sequences.
            </summary>
            <param name="model">The model.</param>
            <param name="name">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetSequenceNameSuffix(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                Sets the suffix to append to the name of automatically created sequences.
            </summary>
            <param name="model">The model.</param>
            <param name="name">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The configured value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetSequenceNameSuffixConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default value generation sequence name suffix.
            </summary>
            <param name="model">The model.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default key value generation sequence name.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                Returns the schema to use for the default value generation sequence.
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyBuilderExtensions.UseSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)" />
            </summary>
            <param name="model">The model.</param>
            <returns>The schema to use for the default key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                Sets the schema to use for the default key value generation sequence.
            </summary>
            <param name="model">The model.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                Sets the schema to use for the default key value generation sequence.
            </summary>
            <param name="model">The model.</param>
            <param name="value">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The configured value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetSequenceSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default key value generation sequence schema.
            </summary>
            <param name="model">The model.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default key value generation sequence schema.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                Returns the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for properties
                of keys in the model, unless the property has a strategy explicitly set.
            </summary>
            <param name="model"> The model. </param>
            <returns> The default <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy})">
            <summary>
                Attempts to set the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for properties
                of keys in the model that don't have a strategy explicitly set.
            </summary>
            <param name="model"> The model. </param>
            <param name="value"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Attempts to set the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for properties
                of keys in the model that don't have a strategy explicitly set.
            </summary>
            <param name="model"> The model. </param>
            <param name="value"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetValueGenerationStrategyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.
            </summary>
            <param name="model"> The model. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetPostgresExtensions(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetOrAddPostgresEnum(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetPostgresEnums(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetOrAddPostgresRange(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.PostgresRanges(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetDatabaseTemplate(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetDatabaseTemplate(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetDatabaseTemplate(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetDatabaseTemplateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetTablespace(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetTablespace(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetTablespace(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetTablespaceConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetOrAddCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetCollations(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetDefaultColumnCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                Gets the default collation for all columns in the database, or <see langword="null" /> if none is defined.
                This causes EF Core to specify an explicit collation when creating all column, unless one is overridden
                on a column.
            </summary>
            <remarks>
                <p>
                    See <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" /> for another approach to defining a
                    database-wide collation.
                </p>
                <p>
                    For more information, see https://www.postgresql.org/docs/current/collation.html.
                </p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetDefaultColumnCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                Sets the default collation for all columns in the database, or <c>null</c> if none is defined.
                This causes EF Core to specify an explicit collation when creating all column, unless one is overridden
                on a column.
            </summary>
            <remarks>
                <p>
                    See <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" /> for another approach to defining a
                    database-wide collation.
                </p>
                <p>
                    For more information, see https://www.postgresql.org/docs/current/collation.html.
                </p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetDefaultColumnCollation(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)">
            <summary>
                Sets the default collation for all columns in the database, or <c>null</c> if none is defined.
                This causes EF Core to specify an explicit collation when creating all column, unless one is overridden
                on a column.
            </summary>
            <remarks>
                <p>
                    See <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
                    for another approach to defining a database-wide collation.
                </p>
                <p>
                    For more information, see https://www.postgresql.org/docs/current/collation.html.
                </p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.GetDefaultColumnCollationConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default column collation.
            </summary>
            <param name="model">The model.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default column collation.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions">
            <summary>
                Property extension methods for Npgsql-specific metadata.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the name to use for the hi-lo sequence.
            </summary>
            <param name="property"> The property.</param>
            <returns>The name to use for the hi-lo sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the name to use for the hi-lo sequence.
            </summary>
            <param name="property"> The property. </param>
            <param name="storeObject"> The identifier of the store object. </param>
            <returns> The name to use for the hi-lo sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)">
            <summary>
                Sets the name to use for the hi-lo sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="name">The sequence name to use.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetHiLoSequenceName(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)">
            <summary>
                Sets the name to use for the hi-lo sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="name">The sequence name to use.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetHiLoSequenceNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the hi-lo sequence name.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the hi-lo sequence name.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the schema to use for the hi-lo sequence.
            </summary>
            <param name="property">The property.</param>
            <returns>The schema to use for the hi-lo sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the schema to use for the hi-lo sequence.
            </summary>
            <param name="property"> The property. </param>
            <param name="storeObject"> The identifier of the store object. </param>
            <returns> The schema to use for the hi-lo sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)">
            <summary>
                Sets the schema to use for the hi-lo sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="schema">The schema to use.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetHiLoSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)">
            <summary>
                Sets the schema to use for the hi-lo sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="schema">The schema to use.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetHiLoSequenceSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the hi-lo sequence schema.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the hi-lo sequence schema.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the hi-lo pattern.
            </summary>
            <param name="property"> The property. </param>
            <returns> The sequence to use, or <see langword="null" /> if no sequence exists in the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the hi-lo pattern.
            </summary>
            <param name="property"> The property. </param>
            <param name="storeObject"> The identifier of the store object. </param>
            <returns> The sequence to use, or <see langword="null" /> if no sequence exists in the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the hi-lo pattern.
            </summary>
            <param name="property"> The property. </param>
            <returns> The sequence to use, or <see langword="null" /> if no sequence exists in the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the hi-lo pattern.
            </summary>
            <param name="property"> The property. </param>
            <param name="storeObject"> The identifier of the store object. </param>
            <returns> The sequence to use, or <see langword="null" /> if no sequence exists in the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.RemoveHiLoOptions(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Removes all identity sequence annotations from the property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.RemoveHiLoOptions(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Removes all identity sequence annotations from the property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetSequenceName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the name to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <returns>The name to use for the key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetSequenceName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the name to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="storeObject">The identifier of the store object.</param>
            <returns>The name to use for the key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetSequenceName(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)">
            <summary>
                Sets the name to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="name">The sequence name to use.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetSequenceName(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)">
            <summary>
                Sets the name to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="name">The sequence name to use.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The configured value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetSequenceNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the key value generation sequence name.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the key value generation sequence name.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the schema to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <returns>The schema to use for the key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the schema to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="storeObject">The identifier of the store object.</param>
            <returns>The schema to use for the key value generation sequence.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)">
            <summary>
                Sets the schema to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="schema">The schema to use.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetSequenceSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)">
            <summary>
                Sets the schema to use for the key value generation sequence.
            </summary>
            <param name="property">The property.</param>
            <param name="schema">The schema to use.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The configured value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetSequenceSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the key value generation sequence schema.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the key value generation sequence schema.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the key value generation pattern.
            </summary>
            <param name="property">The property.</param>
            <returns>The sequence to use, or <see langword="null" /> if no sequence exists in the model.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the key value generation pattern.
            </summary>
            <param name="property">The property.</param>
            <param name="storeObject">The identifier of the store object.</param>
            <returns>The sequence to use, or <see langword="null" /> if no sequence exists in the model.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the key value generation pattern.
            </summary>
            <param name="property">The property.</param>
            <returns>The sequence to use, or <see langword="null" /> if no sequence exists in the model.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" /> in the model to use for the key value generation pattern.
            </summary>
            <param name="property">The property.</param>
            <param name="storeObject">The identifier of the store object.</param>
            <returns>The sequence to use, or <see langword="null" /> if no sequence exists in the model.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                <para>Returns the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property.</para>
                <para>
                    If no strategy is set for the property, then the strategy to use will be taken from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
                </para>
            </summary>
            <returns>The strategy, or <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.None" /> if none was set.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                <para>Returns the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property.</para>
                <para>
                    If no strategy is set for the property, then the strategy to use will be taken from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
                </para>
            </summary>
            <param name="property"> The property. </param>
            <param name="storeObject"> The identifier of the store object. </param>
            <returns> The strategy, or <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.None" /> if none was set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides)">
            <summary>
                Returns the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property.
            </summary>
            <remarks>
                If no strategy is set for the property, then the strategy to use will be taken from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </remarks>
            <param name="overrides">The property overrides.</param>
            <returns>The strategy, or <see cref="F:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.None" /> if none was set.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy})">
            <summary>
                Sets the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The strategy to use.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Sets the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The strategy to use.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Sets the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property for a particular table.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The strategy to use.</param>
            <param name="storeObject">The identifier of the table containing the column.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)">
            <summary>
                Sets the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property for a particular table.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The strategy to use.</param>
            <param name="storeObject">The identifier of the table containing the column.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The configured value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy})">
            <summary>
                Sets the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property for a particular table.
            </summary>
            <param name="overrides">The property overrides.</param>
            <param name="value">The strategy to use.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides,System.Nullable{Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy},System.Boolean)">
            <summary>
                Sets the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> to use for the property for a particular table.
            </summary>
            <param name="overrides">The property overrides.</param>
            <param name="value">The strategy to use.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <returns>The configured value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetValueGenerationStrategyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetValueGenerationStrategyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> for a particular table.
            </summary>
            <param name="property">The property.</param>
            <param name="storeObject">The identifier of the table containing the column.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetValueGenerationStrategyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" /> for a particular table.
            </summary>
            <param name="overrides">The property overrides.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.IsCompatibleWithValueGeneration(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns a value indicating whether the property is compatible with any <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy" />.
            </summary>
            <param name="property">The property.</param>
            <returns><see langword="true" /> if compatible.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityStartValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the identity start value.
            </summary>
            <param name="property">The property.</param>
            <returns>The identity start value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityStartValue(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int64})">
            <summary>
                Sets the identity start value.
            </summary>
            <param name="property">The property.</param>
            <param name="startValue">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityStartValue(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int64},System.Boolean)">
            <summary>
                Sets the identity start value.
            </summary>
            <param name="property">The property.</param>
            <param name="startValue">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityStartValueConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity start value.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity start value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityIncrementBy(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the identity increment value.
            </summary>
            <param name="property">The property.</param>
            <returns>The identity increment value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityIncrementBy(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int64})">
            <summary>
                Sets the identity increment value.
            </summary>
            <param name="property">The property.</param>
            <param name="incrementBy">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityIncrementBy(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int64},System.Boolean)">
            <summary>
                Sets the identity increment value.
            </summary>
            <param name="property">The property.</param>
            <param name="incrementBy">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityIncrementByConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity increment value.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity increment value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityMinValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the identity minimum value.
            </summary>
            <param name="property">The property.</param>
            <returns>The identity minimum value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityMinValue(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int64})">
            <summary>
                Sets the identity minimum value.
            </summary>
            <param name="property">The property.</param>
            <param name="minValue">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityMinValue(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int64},System.Boolean)">
            <summary>
                Sets the identity minimum value.
            </summary>
            <param name="property">The property.</param>
            <param name="minValue">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityMinValueConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity minimum value.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity minimum value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityMaxValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the identity maximum value.
            </summary>
            <param name="property">The property.</param>
            <returns>The identity maximum value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityMaxValue(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int64})">
            <summary>
                Sets the identity maximum value.
            </summary>
            <param name="property">The property.</param>
            <param name="maxValue">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityMaxValue(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int64},System.Boolean)">
            <summary>
                Sets the identity maximum value.
            </summary>
            <param name="property">The property.</param>
            <param name="maxValue">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityMaxValueConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity maximum value.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity maximum value.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityIsCyclic(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns whether the identity's sequence is cyclic.
            </summary>
            <param name="property">The property.</param>
            <returns>Whether the identity's sequence is cyclic.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityIsCyclic(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Boolean})">
            <summary>
                Sets whether the identity's sequence is cyclic.
            </summary>
            <param name="property">The property.</param>
            <param name="cyclic">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityIsCyclic(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                Sets whether the identity's sequence is cyclic.
            </summary>
            <param name="property">The property.</param>
            <param name="cyclic">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityIsCyclicConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the identity's sequence is cyclic.
            </summary>
            <param name="property">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the identity's sequence is cyclic.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityNumbersToCache(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the number of sequence numbers to be preallocated and stored in memory for faster access.
                Defaults to 1 (no cache).
            </summary>
            <param name="property">The property.</param>
            <returns>The number of sequence numbers to be cached.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityNumbersToCache(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int64})">
            <summary>
                Sets the number of sequence numbers to be preallocated and stored in memory for faster access.
            </summary>
            <param name="property">The property.</param>
            <param name="numbersToCache">The value to set.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetIdentityNumbersToCache(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int64},System.Boolean)">
            <summary>
                Sets the number of sequence numbers to be preallocated and stored in memory for faster access.
            </summary>
            <param name="property">The property.</param>
            <param name="numbersToCache">The value to set.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetIdentityNumbersToCacheConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the number of sequence numbers to be preallocated
                and stored in memory for faster access.
            </summary>
            <param name="property">The property.</param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the number of sequence numbers to be preallocated
                and stored in memory for faster access.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.RemoveIdentityOptions(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Removes identity sequence options from the property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.RemoveIdentityOptions(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Removes identity sequence options from the property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetTsVectorConfig(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                generated tsvector property.
            </summary>
            <param name="property">The property.</param>
            <returns>
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetTsVectorConfig(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)">
            <summary>
                Sets the text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                generated tsvector property.
            </summary>
            <param name="property">The property.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetTsVectorConfig(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)">
            <summary>
                Returns the text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                generated tsvector property.
            </summary>
            <param name="property">The property.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <param name="config">
                <para>
                    The text search configuration for this generated tsvector property, or <c>null</c> if this is not a
                    generated tsvector property.
                </para>
                <para>
                    See https://www.postgresql.org/docs/current/textsearch-controls.html for more information.
                </para>
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetTsVectorConfigConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the text search configuration for the generated tsvector
                property.
            </summary>
            <param name="property">The property.</param>
            <returns>The configuration source for the text search configuration for the generated tsvector property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetTsVectorProperties(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the properties included in this generated tsvector property, or <c>null</c> if this is not a
                generated tsvector property.
            </summary>
            <param name="property">The property.</param>
            <returns>The included property names, or <c>null</c> if this is not a Generated tsvector column.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetTsVectorProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                Sets the properties included in this generated tsvector property, or <c>null</c> to make this a regular,
                non-generated property.
            </summary>
            <param name="property">The property.</param>
            <param name="properties">The included property names.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetTsVectorProperties(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Sets properties included in this generated tsvector property, or <c>null</c> to make this a regular,
                non-generated property.
            </summary>
            <param name="property">The property.</param>
            <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
            <param name="properties">The included property names.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetTsVectorPropertiesConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the properties included in the generated tsvector property.
            </summary>
            <param name="property">The property.</param>
            <returns>The configuration source for the properties included in the generated tsvector property.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetDefaultCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the collation to be used for the column - including the PostgreSQL-specific default column
                collation defined at the model level (see
                <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlModelExtensions.SetDefaultColumnCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />).
            </summary>
            <param name="property"> The property. </param>
            <returns> The collation for the column this property is mapped to. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)">
            <summary>
                Returns the compression method to be used, or <c>null</c> if it hasn't been specified.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)">
            <summary>
                Returns the compression method to be used, or <c>null</c> if it hasn't been specified.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)">
            <summary>
                Sets the compression method to be used, or <c>null</c> if it hasn't been specified.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.SetCompressionMethod(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)">
            <summary>
                Sets the compression method to be used, or <c>null</c> if it hasn't been specified.
            </summary>
            <remarks>This feature was introduced in PostgreSQL 14.</remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlPropertyExtensions.GetCompressionMethodConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the compression method.
            </summary>
            <param name="index">The property.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the compression method.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation" /> for Npgsql-specific metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetPostgresCollations(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetOldPostgresCollations(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetPostgresExtensions(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetOldPostgresExtensions(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetPostgresEnums(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetOldPostgresEnums(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetPostgresRanges(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetOldPostgresRanges(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlAlterDatabaseOperationExtensions.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlDatabaseFacadeExtensions">
            <summary>
                Npgsql specific extension methods for <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDatabaseFacadeExtensions.IsNpgsql(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                <para>
                    Returns true if the database provider currently in use is the Npgsql provider.
                </para>
                <para>
                    This method can only be used after the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> has been configured because
                    it is only then that the provider is known. This means that this method cannot be used
                    in <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> because this is where application code sets the
                    provider to use as part of configuring the context.
                </para>
            </summary>
            <param name="database">The facade from <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" />.</param>
            <returns>True if Npgsql is being used; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDatabaseFacadeExtensions.SetDbDataSource(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbDataSource)">
            <summary>
                Sets the underlying <see cref="T:System.Data.Common.DbDataSource" /> configured for this <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
            <remarks>
                <para>
                    It may not be possible to change the data source if existing connection, if any, is open.
                </para>
                <para>
                    See <see href="https://aka.ms/efcore-docs-connections">Connections and connection strings</see> for more information and examples.
                </para>
            </remarks>
            <param name="databaseFacade">The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <param name="dataSource">The connection string.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlDatabaseModelExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDatabaseModelExtensions.GetOrAddPostgresExtension(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDatabaseModelExtensions.GetPostgresExtensions(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDatabaseModelExtensions.GetPostgresEnums(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions">
            <summary>
                Provides extension methods on <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> and <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                used to configure a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to context to a PostgreSQL database with Npgsql.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                <para>
                    Configures the context to connect to a PostgreSQL server with Npgsql, but without initially setting any
                    <see cref="T:System.Data.Common.DbConnection" /> or connection string.
                </para>
                <para>
                    The connection or connection string must be set before the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> is used to connect
                    to a database. Set a connection using <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbConnection,System.Boolean)" />.
                    Set a connection string using <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetConnectionString(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String)" />.
                </para>
            </summary>
            <param name="optionsBuilder">The builder being used to configure the context.</param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>The options builder so that further configuration can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">A builder for setting options on the context.</param>
            <param name="connectionString">The connection string of the database to connect to.</param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>
                The options builder so that further configuration can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Data.Common.DbConnection,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">The builder being used to configure the context.</param>
            <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed. The caller owns the connection and is
                responsible for its disposal.
            </param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>The options builder so that further configuration can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Data.Common.DbConnection,System.Boolean,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">A builder for setting options on the context.</param>
            <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed.
            </param>
            <param name="contextOwnsConnection">
                If <see langword="true" />, then EF will take ownership of the connection and will
                dispose it in the same way it would dispose a connection created by EF. If <see langword="false" />, then the caller still
                owns the connection and is responsible for its disposal.
            </param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>
                The options builder so that further configuration can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Data.Common.DbDataSource,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">A builder for setting options on the context.</param>
            <param name="dataSource">A <see cref="T:System.Data.Common.DbDataSource" /> which will be used to get database connections.</param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>
                The options builder so that further configuration can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                <para>
                    Configures the context to connect to a PostgreSQL server with Npgsql, but without initially setting any
                    <see cref="T:System.Data.Common.DbConnection" />, <see cref="T:System.Data.Common.DbDataSource" /> or connection string.
                </para>
                <para>
                    The connection, data source or connection string must be set explicitly or registered in the DI
                    before the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> is used to connect to a database.
                    Set a connection using <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbConnection,System.Boolean)" />, a data source using
                    <see cref="M:Microsoft.EntityFrameworkCore.NpgsqlDatabaseFacadeExtensions.SetDbDataSource(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbDataSource)" />, or a connection string using
                    <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetConnectionString(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String)" />.
                </para>
            </summary>
            <param name="optionsBuilder">The builder being used to configure the context.</param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>The options builder so that further configuration can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">A builder for setting options on the context.</param>
            <param name="connectionString">The connection string of the database to connect to.</param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-configuration.</param>
            <returns>
                The options builder so that further configuration can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Data.Common.DbConnection,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">A builder for setting options on the context.</param>
            <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed. The caller owns the connection and is
                responsible for its disposal.
            </param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>
                The options builder so that further configuration can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Data.Common.DbConnection,System.Boolean,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <typeparam name="TContext">The type of context to be configured.</typeparam>
            <param name="optionsBuilder">The builder being used to configure the context.</param>
            <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed.
            </param>
            <param name="contextOwnsConnection">
                If <see langword="true" />, then EF will take ownership of the connection and will
                dispose it in the same way it would dispose a connection created by EF. If <see langword="false" />, then the caller still
                owns the connection and is responsible for its disposal.
            </param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>The options builder so that further configuration can be chained.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.UseNpgsql``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Data.Common.DbDataSource,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a PostgreSQL database with Npgsql.
            </summary>
            <param name="optionsBuilder">A builder for setting options on the context.</param>
            <param name="dataSource">A <see cref="T:System.Data.Common.DbDataSource" /> which will be used to get database connections.</param>
            <param name="npgsqlOptionsAction">An optional action to allow additional Npgsql-specific configuration.</param>
            <returns>
                The options builder so that further configuration can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlDbContextOptionsBuilderExtensions.GetOrCreateExtension(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
                Returns an existing instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension" />, or a new instance if one does not exist.
            </summary>
            <param name="optionsBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> to search.</param>
            <returns>
                An existing instance of <see cref="T:Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlOptionsExtension" />, or a new instance if one does not exist.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlMigrationBuilderExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMigrationBuilderExtensions.IsNpgsql(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
                Returns true if the active provider in a migration is the Npgsql provider.
            </summary>
            The migrationBuilder from the parameters on
            <see cref="M:Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)" />
            or
            <see cref="M:Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)" />
            .
            <returns>True if Npgsql is being used; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMigrationBuilderExtensions.EnsurePostgresExtension(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMigrationBuilderExtensions.CreatePostgresExtension(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NpgsqlMigrationBuilderExtensions.DropPostgresExtension(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.NpgsqlIndexExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NpgsqlIndexExtensions.AreCompatibleForNpgsql(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.LTree">
            <summary>
                Represents a PostgreSQL ltree type. This type is implicitly convertible to a .NET <see cref="T:System.String" />.
            </summary>
            <remarks>See https://www.postgresql.org/docs/current/ltree.html</remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.#ctor(System.String)">
            <summary>
                Constructs a new instance of <see cref="T:Microsoft.EntityFrameworkCore.LTree" />.
            </summary>
            <param name="value">The string value for the ltree.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.IsAncestorOf(Microsoft.EntityFrameworkCore.LTree)">
            <summary>
                Returns whether this ltree is an ancestor of <paramref name="other" /> (or equal).
            </summary>
            <remarks>
                <p>The method call is translated to <c>left @&gt; right</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.IsDescendantOf(Microsoft.EntityFrameworkCore.LTree)">
            <summary>
                Returns whether this ltree is a descendant of <paramref name="other" /> (or equal).
            </summary>
            <remarks>
                <p>The method call is translated to <c>left &lt;@ right</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.MatchesLQuery(System.String)">
            <summary>
                Returns whether this ltree matches <paramref name="lquery" />.
            </summary>
            <remarks>
                <p>The method call is translated to <c>left ~ right</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.MatchesLTxtQuery(System.String)">
            <summary>
                Returns whether this ltree matches <paramref name="ltxtquery" />.
            </summary>
            <remarks>
                <p>The method call is translated to <c>left @ right</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Subtree(System.Int32,System.Int32)">
            <summary>
                Returns subpath of this ltree from position <paramref name="start" /> to position <paramref name="end" />-1
                (counting from 0).
            </summary>
            <remarks>
                <p>The method call is translated to <c>subltree(ltree, start, end)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Subpath(System.Int32,System.Int32)">
            <summary>
                Returns subpath of this ltree starting at position <paramref name="offset" />, with length <paramref name="len" />.
                If <paramref name="offset" /> is negative, subpath starts that far from the end of the path.
                If <paramref name="len" /> is negative, leaves that many labels off the end of the path.
            </summary>
            <remarks>
                <p>The method call is translated to <c>subpath(ltree, offset, len)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Subpath(System.Int32)">
            <summary>
                Returns subpath of ltree starting at position <paramref name="offset" />, extending to end of path.
                If <paramref name="offset" /> is negative, subpath starts that far from the end of the path.
            </summary>
            <remarks>
                <p>The method call is translated to <c>subpath(ltree, offset)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.LTree.NLevel">
            <summary>
                Returns number of labels in path.
            </summary>
            <remarks>
                <p>The property is translated to <c>nlevel(ltree)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Index(Microsoft.EntityFrameworkCore.LTree)">
            <summary>
                Returns position of first occurrence of <paramref name="other" /> in this ltree, or -1 if not found.
            </summary>
            <remarks>
                <p>The method call is translated to <c>index(ltree1, ltree2)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Index(Microsoft.EntityFrameworkCore.LTree,System.Int32)">
            <summary>
                Returns position of first occurrence of <paramref name="other" /> in this ltree, or -1 if not found.
                The search starts at position <paramref name="offset" />; negative offset means start -offset labels from the end of the path.
            </summary>
            <remarks>
                <p>The method call is translated to <c>index(ltree1, ltree2, offset)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.LongestCommonAncestor(Microsoft.EntityFrameworkCore.LTree[])">
            <summary>
                Computes longest common ancestor of paths.
            </summary>
            <remarks>
                <p>The method call is translated to <c>lca(others)</c>.</p>
                <p>See https://www.postgresql.org/docs/current/ltree.html</p>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.op_Implicit(System.String)~Microsoft.EntityFrameworkCore.LTree">
            <summary>
                Converts an <see cref="T:Microsoft.EntityFrameworkCore.LTree" /> type to a string.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.op_Implicit(Microsoft.EntityFrameworkCore.LTree)~System.String">
            <summary>
                Converts a string to an <see cref="T:Microsoft.EntityFrameworkCore.LTree" /> type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.op_Equality(Microsoft.EntityFrameworkCore.LTree,Microsoft.EntityFrameworkCore.LTree)">
            <summary>
                Compares two <see cref="T:Microsoft.EntityFrameworkCore.LTree" /> instances for equality.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.op_Inequality(Microsoft.EntityFrameworkCore.LTree,Microsoft.EntityFrameworkCore.LTree)">
            <summary>
                Compares two <see cref="T:Microsoft.EntityFrameworkCore.LTree" /> instances for inequality.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Equals(Microsoft.EntityFrameworkCore.LTree)">
            <inheritdocs />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.Equals(System.Object)">
            <inheritdocs />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.GetHashCode">
            <inheritdocs />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LTree.ToString">
            <inheritdocs />
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization">
            <summary>
                Specifies whether and how a document's length should impact its rank.
                This is used with the ranking functions in <see cref="T:Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions" />.
                See http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
                for more information about the behaviors that are controlled by this value.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.Default">
            <summary>
                Ignores the document length.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.DivideBy1PlusLogLength">
            <summary>
                Divides the rank by 1 + the logarithm of the document length.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.DivideByLength">
            <summary>
                Divides the rank by the document length.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.DivideByMeanHarmonicDistanceBetweenExtents">
            <summary>
                Divides the rank by the mean harmonic distance between extents (this is implemented only by ts_rank_cd).
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.DivideByUniqueWordCount">
            <summary>
                Divides the rank by the number of unique words in document.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.DividesBy1PlusLogUniqueWordCount">
            <summary>
                Divides the rank by 1 + the logarithm of the number of unique words in document.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.NpgsqlTsRankingNormalization.DivideByItselfPlusOne">
            <summary>
                Divides the rank by itself + 1.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.NpgsqlServiceCollectionExtensions">
            <summary>
                Provides extension methods to configure Entity Framework Core for Npgsql.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.NpgsqlServiceCollectionExtensions.AddNpgsql``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder},System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})">
            <summary>
                <para>
                    Registers the given Entity Framework context as a service in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />
                    and configures it to connect to a PostgreSQL database.
                </para>
                <para>
                    Use this method when using dependency injection in your application, such as with ASP.NET Core.
                    For applications that don't use dependency injection, consider creating <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />
                    instances directly with its constructor. The <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method can then be
                    overridden to configure the SQL Server provider and connection string.
                </para>
                <para>
                    To configure the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> for the context, either override the
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method in your derived context, or supply
                    an optional action to configure the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> for the context.
                </para>
                <para>
                    For more information on how to use this method, see the Entity Framework Core documentation at https://aka.ms/efdocs.
                    For more information on using dependency injection, see https://go.microsoft.com/fwlink/?LinkId=526890.
                </para>
            </summary>
            <typeparam name="TContext"> The type of context to be registered. </typeparam>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
            <param name="connectionString"> The connection string of the database to connect to. </param>
            <param name="npgsqlOptionsAction"> An optional action to allow additional SQL Server specific configuration. </param>
            <param name="optionsAction"> An optional action to configure the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> for the context. </param>
            <returns> The same service collection so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.NpgsqlServiceCollectionExtensions.AddEntityFrameworkNpgsql(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                <para>
                    Adds the services required by the Npgsql database provider for Entity Framework
                    to an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                </para>
                <para>
                    Calling this method is no longer necessary when building most applications, including those that
                    use dependency injection in ASP.NET or elsewhere.
                    It is only needed when building the internal service provider for use with
                    the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseInternalServiceProvider(System.IServiceProvider)" /> method.
                    This is not recommend other than for some advanced scenarios.
                </para>
            </summary>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
            <returns>
                The same service collection so that multiple calls can be chained.
            </returns>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionVisitorExtensions.Visit(System.Linq.Expressions.ExpressionVisitor,System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Dispatches the list of expressions to one of the more specialized visit methods in this class.
            </summary>
            <param name="visitor">The expression visitor.</param>
            <param name="nodes">The expressions to visit.</param>
            <returns>
                The modified expression list, if any of the elements were modified; otherwise, returns the original expression list.
            </returns>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionVisitorExtensions.VisitAndConvert``1(System.Linq.Expressions.ExpressionVisitor,System.Collections.Generic.IReadOnlyList{``0},System.String)">
            <summary>
                Visits an expression, casting the result back to the original expression type.
            </summary>
            <typeparam name="T">The type of the expression.</typeparam>
            <param name="visitor">The expression visitor.</param>
            <param name="nodes">The expression to visit.</param>
            <param name="callerName">The name of the calling method; used to report to report a better error message.</param>
            <returns>
                The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
            <exception cref="T:System.InvalidOperationException">The visit method for this node returned a different type.</exception>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionVisitorExtensions.Visit``1(System.Linq.Expressions.ExpressionVisitor,System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``0})">
            <summary>
                Visits all nodes in the collection using a specified element visitor.
            </summary>
            <typeparam name="T">The type of the nodes.</typeparam>
            <param name="visitor">The expression visitor.</param>
            <param name="nodes">The nodes to visit.</param>
            <param name="elementVisitor">
                A delegate that visits a single element,
                optionally replacing it with a new element.
            </param>
            <returns>
                The modified node list, if any of the elements were modified;
                otherwise, returns the original node list.
            </returns>
        </member>
        <member name="M:System.SharedTypeExtensions.DisplayName(System.Type,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.StringFormatMethodAttribute">
             <summary>
             Indicates that the marked method builds string by the format pattern and (optional) arguments.
             The parameter, which contains the format string, should be given in constructor. The format string
             should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form.
             </summary>
             <example><code>
             [StringFormatMethod("message")]
             void ShowError(string message, params object[] args) { /* do something */ }
            
             void Foo() {
               ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
             }
             </code></example>
        </member>
        <member name="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as the format string
            </param>
        </member>
        <member name="T:JetBrains.Annotations.ValueProviderAttribute">
             <summary>
             Use this annotation to specify a type that contains static or const fields
             with values for the annotated property/field/parameter.
             The specified type will be used to improve completion suggestions.
             </summary>
             <example><code>
             namespace TestNamespace
             {
               public class Constants
               {
                 public static int INT_CONST = 1;
                 public const string STRING_CONST = "1";
               }
            
               public class Class1
               {
                 [ValueProvider("TestNamespace.Constants")] public int myField;
                 public void Foo([ValueProvider("TestNamespace.Constants")] string str) { }
            
                 public void Test()
                 {
                   Foo(/*try completion here*/);//
                   myField = /*try completion here*/
                 }
               }
             }
             </code></example>
        </member>
        <member name="T:JetBrains.Annotations.ValueRangeAttribute">
            <summary>
            Indicates that the integral value falls into the specified interval.
            It's allowed to specify multiple non-intersecting intervals.
            Values of interval boundaries are inclusive.
            </summary>
            <example><code>
            void Foo([ValueRange(0, 100)] int value) {
              if (value == -1) { // Warning: Expression is always 'false'
                ...
              }
            }
            </code></example>
        </member>
        <member name="T:JetBrains.Annotations.NonNegativeValueAttribute">
            <summary>
            Indicates that the integral value never falls below zero.
            </summary>
            <example><code>
            void Foo([NonNegativeValue] int value) {
              if (value == -1) { // Warning: Expression is always 'false'
                ...
              }
            }
            </code></example>
        </member>
        <member name="T:JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be a string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <example><code>
            void Foo(string param) {
              if (param is null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:JetBrains.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If the method has a single input parameter, its name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same) for the method output
            means that the method doesn't return normally (throws or terminates the process).<br/>
            Value <c>canbenull</c> is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row, or use single attribute
            with rows separated by semicolon. There is no notion of order rows, all rows are checked
            for applicability and applied per each program state tracked by the analysis engine.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=&gt; halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("null &lt;= param:null")] // reverse condition syntax
            public string GetName(string surname)
            </code></item>
            <item><code>
            [ContractAnnotation("s:null =&gt; true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null =&gt; null; notnull =&gt; notnull")]
            public object Transform(object data)
            </code></item>
            <item><code>
            [ContractAnnotation("=&gt; true, result: notnull; =&gt; false, result: null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:JetBrains.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates whether the marked element should be localized.
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            class Foo {
              string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:JetBrains.Annotations.CannotApplyEqualityOperatorAttribute">
             <summary>
             Indicates that the value of the marked type (or its derivatives)
             cannot be compared using '==' or '!=' operators and <c>Equals()</c>
             should be used instead. However, using '==' or '!=' for comparison
             with <c>null</c> is always permitted.
             </summary>
             <example><code>
             [CannotApplyEqualityOperator]
             class NoEquality { }
            
             class UsesNoEquality {
               void Test() {
                 var ca1 = new NoEquality();
                 var ca2 = new NoEquality();
                 if (ca1 is not null) { // OK
                   bool condition = ca1 == ca2; // Warning
                 }
               }
             }
             </code></example>
        </member>
        <member name="T:JetBrains.Annotations.BaseTypeRequiredAttribute">
             <summary>
             When applied to a target attribute, specifies a requirement for any type marked
             with the target attribute to implement or inherit specific type or types.
             </summary>
             <example><code>
             [BaseTypeRequired(typeof(IComponent)] // Specify requirement
             class ComponentAttribute : Attribute { }
            
             [Component] // ComponentAttribute requires implementing IComponent interface
             class MyComponent : IComponent { }
             </code></example>
        </member>
        <member name="T:JetBrains.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be reported as unused (as well as by other usage inspections).
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.MeansImplicitUseAttribute">
            <summary>
            Can be applied to attributes, type parameters, and parameters of a type assignable from <see cref="T:System.Type"/> .
            When applied to an attribute, the decorated attribute behaves the same as <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute"/>.
            When applied to a type parameter or to a parameter of type <see cref="T:System.Type"/>,  indicates that the corresponding type
            is used implicitly.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.ImplicitUseKindFlags">
            <summary>
            Specify the details of implicitly used symbol when it is marked
            with <see cref="T:JetBrains.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute"/>.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used.</summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member.</summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type.</summary>
        </member>
        <member name="T:JetBrains.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered to be used implicitly when marked
            with <see cref="T:JetBrains.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute"/>.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used.</summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.WithInheritors">
            <summary> Inherited entities are considered used. </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used.</summary>
        </member>
        <member name="T:JetBrains.Annotations.NoEnumerationAttribute">
             <summary>
             Indicates that IEnumerable passed as a parameter is not enumerated.
             Use this annotation to suppress the 'Possible multiple enumeration of IEnumerable' inspection.
             </summary>
             <example><code>
             static void ThrowIfNull&lt;T&gt;([NoEnumeration] T v, string n) where T : class
             {
               // custom check for null but no enumeration
             }
            
             void Foo(IEnumerable&lt;string&gt; values)
             {
               ThrowIfNull(values, nameof(values));
               var x = values.ToList(); // No warnings about multiple enumeration
             }
             </code></example>
        </member>
        <member name="T:JetBrains.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that the marked parameter is a regular expression pattern.
            </summary>
        </member>
    </members>
</doc>
