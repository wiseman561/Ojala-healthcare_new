apiVersion: apps/v1
kind: StatefulSet # StatefulSet is preferred for databases
metadata:
  name: ojala-db-statefulset
  namespace: ojala-ns
  labels:
    app: ojala-db
spec:
  serviceName: "ojala-db-service"
  replicas: 1 # Databases usually start with 1 replica, scaling needs careful consideration
  selector:
    matchLabels:
      app: ojala-db
  template:
    metadata:
      labels:
        app: ojala-db
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine # Using alpine for smaller size
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: ojala-db-configmap # For non-sensitive DB config
            - secretRef:
                name: ojala-db-secrets # For DB_USER, DB_PASSWORD
          volumeMounts:
            - name: ojala-db-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "${DB_USER}" # This requires DB_USER to be available in the container from secret
                - -d
                - "${DB_NAME}"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "${DB_USER}"
                - -d
                - "${DB_NAME}"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
  volumeClaimTemplates:
    - metadata:
        name: ojala-db-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi # Adjust storage size as needed
---
apiVersion: v1
kind: Service
metadata:
  name: ojala-db-service
  namespace: ojala-ns
  labels:
    app: ojala-db
spec:
  type: ClusterIP
  selector:
    app: ojala-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

