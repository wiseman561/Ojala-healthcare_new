apiVersion: apps/v1
kind: Deployment
metadata:
  name: ojala-identity-deployment
  namespace: ojala-ns # Assuming a namespace, create if not existing
  labels:
    app: ojala-identity
spec:
  replicas: 2 # Start with 2 replicas, adjust based on needs
  selector:
    matchLabels:
      app: ojala-identity
  template:
    metadata:
      labels:
        app: ojala-identity
    spec:
      containers:
        - name: ojala-identity
          image: yourdockerhubuser/ojala-identity:latest # Replace with actual image name and tag from CI
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80 # Port the application listens on inside the container
          envFrom:
            - configMapRef:
                name: ojala-identity-configmap
            - secretRef:
                name: ojala-identity-secrets
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthz # Matches Dockerfile HEALTHCHECK
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ojala-identity-service
  namespace: ojala-ns
  labels:
    app: ojala-identity
spec:
  type: ClusterIP # Or LoadBalancer if it needs to be externally accessible directly
  selector:
    app: ojala-identity
  ports:
    - protocol: TCP
      port: 80 # Port the service will be available on within the cluster
      targetPort: 80 # Port the container is listening on

